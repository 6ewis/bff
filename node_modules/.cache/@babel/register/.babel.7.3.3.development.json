{
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _compression = _interopRequireDefault(require(\"compression\"));\n\nvar _initializeEnvs = _interopRequireDefault(require(\"./initializeEnvs\"));\n\nvar _graphql = _interopRequireDefault(require(\"./graphql\"));\n\nvar _logger = _interopRequireDefault(require(\"./util/logger\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"dotenv\").config();\n\nconst app = (0, _express.default)(); //= ====================================================\n//  Setting up basic middleware for all Express requests\n//= ====================================================\n// Log requests to API using morgan\n\napp.use(require(\"morgan\")(\"combined\", {\n  \"stream\": _logger.default.stream.write\n}));\napp.use((0, _compression.default)()); // use for performance best practice\n\napp.use(_bodyParser.default.urlencoded({\n  limit: '50mb',\n  extended: false\n})); // Parses urlencoded bodies\n\napp.use(_bodyParser.default.json({\n  limit: '50mb'\n})); // Send JSON responses\n// Enable CORS from client-side\n\napp.use((0, _cors.default)({\n  origin: process.env.CORS_DOMAIN || 'http://localhost:3000',\n  optionsSuccessStatus: 200,\n  credentials: true\n})); // Parse cookies \n\napp.use((0, _cookieParser.default)()); // app.use('/graphql', (req, res) => console.error(\"it works\"))\n//= ====================================================\n//  Initializing Graphql\n//= ====================================================\n// // Mount my middleware to  run *before* Apollo which can break the request chain if required\n// app.use(\"/graphql\", () => console.log(\"here you go\"));\n// Mount Apollo middleware\n\nconst graphQLServer = (0, _graphql.default)(app); //= ====================================================\n//  Starting server\n//= ====================================================\n// Import routes to be served\n// Should come after graphql\n\n(0, _router.default)(app); // Initializing important env variables\n\n(0, _initializeEnvs.default)();\nconst port = process.env.PORT || 4000;\napp.listen({\n  port\n}, () => {\n  _logger.default.info(`ðŸš€ Rest Server ready at http://localhost:${port}`);\n\n  _logger.default.info(`ðŸš€ Graphql Server ready at http://localhost:${port}${graphQLServer.graphqlPath}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJhcHAiLCJ1c2UiLCJsb2dnZXIiLCJzdHJlYW0iLCJ3cml0ZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwibGltaXQiLCJleHRlbmRlZCIsImpzb24iLCJvcmlnaW4iLCJwcm9jZXNzIiwiZW52IiwiQ09SU19ET01BSU4iLCJvcHRpb25zU3VjY2Vzc1N0YXR1cyIsImNyZWRlbnRpYWxzIiwiZ3JhcGhRTFNlcnZlciIsInBvcnQiLCJQT1JUIiwibGlzdGVuIiwiaW5mbyIsImdyYXBocWxQYXRoIl0sIm1hcHBpbmdzIjoiOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBWEFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQWFBLE1BQU1DLEdBQUcsR0FBRyx1QkFBWixDLENBRUE7QUFDQTtBQUNBO0FBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCLFVBQWxCLEVBQThCO0FBQUUsWUFBVUksZ0JBQU9DLE1BQVAsQ0FBY0M7QUFBMUIsQ0FBOUIsQ0FBUjtBQUNBSixHQUFHLENBQUNDLEdBQUosQ0FBUSwyQkFBUixFLENBQXdCOztBQUN4QkQsR0FBRyxDQUFDQyxHQUFKLENBQVFJLG9CQUFXQyxVQUFYLENBQXNCO0FBQUNDLEVBQUFBLEtBQUssRUFBRSxNQUFSO0FBQWdCQyxFQUFBQSxRQUFRLEVBQUU7QUFBMUIsQ0FBdEIsQ0FBUixFLENBQW1FOztBQUNuRVIsR0FBRyxDQUFDQyxHQUFKLENBQVFJLG9CQUFXSSxJQUFYLENBQWdCO0FBQUNGLEVBQUFBLEtBQUssRUFBRTtBQUFSLENBQWhCLENBQVIsRSxDQUEyQztBQUMzQzs7QUFDQVAsR0FBRyxDQUFDQyxHQUFKLENBQ0UsbUJBQUs7QUFDSFMsRUFBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBWixJQUEyQix1QkFEaEM7QUFFSEMsRUFBQUEsb0JBQW9CLEVBQUUsR0FGbkI7QUFHSEMsRUFBQUEsV0FBVyxFQUFFO0FBSFYsQ0FBTCxDQURGLEUsQ0FRQTs7QUFDQWYsR0FBRyxDQUFDQyxHQUFKLENBQVEsNEJBQVIsRSxDQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBLE1BQU1lLGFBQWEsR0FBRyxzQkFBYWhCLEdBQWIsQ0FBdEIsQyxDQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0EscUJBQU9BLEdBQVAsRSxDQUVBOztBQUNBO0FBRUEsTUFBTWlCLElBQUksR0FBR04sT0FBTyxDQUFDQyxHQUFSLENBQVlNLElBQVosSUFBb0IsSUFBakM7QUFDQWxCLEdBQUcsQ0FBQ21CLE1BQUosQ0FBVztBQUFFRixFQUFBQTtBQUFGLENBQVgsRUFBcUIsTUFBTTtBQUN6QmYsa0JBQU9rQixJQUFQLENBQWMsNENBQTJDSCxJQUFLLEVBQTlEOztBQUNBZixrQkFBT2tCLElBQVAsQ0FBYywrQ0FBOENILElBQUssR0FBRUQsYUFBYSxDQUFDSyxXQUFZLEVBQTdGO0FBQ0QsQ0FIRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGV3aXNkYWNrYW0vRG9jdW1lbnRzL2FsdHJ1aXN0LWJhY2tlbmQtZm9yLWZyb250ZW5kL3NyYyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKCk7XG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIjtcbmltcG9ydCBjb29raWVQYXJzZXIgZnJvbSBcImNvb2tpZS1wYXJzZXJcIjtcbmltcG9ydCBjb21wcmVzc2lvbiBmcm9tIFwiY29tcHJlc3Npb25cIjtcblxuaW1wb3J0IGluaXRpYWxpemVFbnZzIGZyb20gXCIuL2luaXRpYWxpemVFbnZzXCI7XG5pbXBvcnQgc3RhcnRHcmFwaHFsIGZyb20gJy4vZ3JhcGhxbCc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4vdXRpbC9sb2dnZXInO1xuaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy89ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICBTZXR0aW5nIHVwIGJhc2ljIG1pZGRsZXdhcmUgZm9yIGFsbCBFeHByZXNzIHJlcXVlc3RzXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBMb2cgcmVxdWVzdHMgdG8gQVBJIHVzaW5nIG1vcmdhblxuYXBwLnVzZShyZXF1aXJlKFwibW9yZ2FuXCIpKFwiY29tYmluZWRcIiwgeyBcInN0cmVhbVwiOiBsb2dnZXIuc3RyZWFtLndyaXRlIH0pKTtcbmFwcC51c2UoY29tcHJlc3Npb24oKSk7IC8vIHVzZSBmb3IgcGVyZm9ybWFuY2UgYmVzdCBwcmFjdGljZVxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2xpbWl0OiAnNTBtYicsIGV4dGVuZGVkOiBmYWxzZSB9KSk7IC8vIFBhcnNlcyB1cmxlbmNvZGVkIGJvZGllc1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oe2xpbWl0OiAnNTBtYid9KSk7IC8vIFNlbmQgSlNPTiByZXNwb25zZXNcbi8vIEVuYWJsZSBDT1JTIGZyb20gY2xpZW50LXNpZGVcbmFwcC51c2UoXG4gIGNvcnMoe1xuICAgIG9yaWdpbjogcHJvY2Vzcy5lbnYuQ09SU19ET01BSU4gfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcsXG4gICAgb3B0aW9uc1N1Y2Nlc3NTdGF0dXM6IDIwMCxcbiAgICBjcmVkZW50aWFsczogdHJ1ZVxuICB9KVxuKTtcblxuLy8gUGFyc2UgY29va2llcyBcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuXG4vLyBhcHAudXNlKCcvZ3JhcGhxbCcsIChyZXEsIHJlcykgPT4gY29uc29sZS5lcnJvcihcIml0IHdvcmtzXCIpKVxuXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIEluaXRpYWxpemluZyBHcmFwaHFsXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gLy8gTW91bnQgbXkgbWlkZGxld2FyZSB0byAgcnVuICpiZWZvcmUqIEFwb2xsbyB3aGljaCBjYW4gYnJlYWsgdGhlIHJlcXVlc3QgY2hhaW4gaWYgcmVxdWlyZWRcbi8vIGFwcC51c2UoXCIvZ3JhcGhxbFwiLCAoKSA9PiBjb25zb2xlLmxvZyhcImhlcmUgeW91IGdvXCIpKTtcblxuLy8gTW91bnQgQXBvbGxvIG1pZGRsZXdhcmVcbmNvbnN0IGdyYXBoUUxTZXJ2ZXIgPSBzdGFydEdyYXBocWwoYXBwKTtcblxuLy89ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICBTdGFydGluZyBzZXJ2ZXJcbi8vPSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEltcG9ydCByb3V0ZXMgdG8gYmUgc2VydmVkXG4vLyBTaG91bGQgY29tZSBhZnRlciBncmFwaHFsXG5yb3V0ZXIoYXBwKTtcblxuLy8gSW5pdGlhbGl6aW5nIGltcG9ydGFudCBlbnYgdmFyaWFibGVzXG5pbml0aWFsaXplRW52cygpO1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA0MDAwO1xuYXBwLmxpc3Rlbih7IHBvcnQgfSwgKCkgPT4ge1xuICBsb2dnZXIuaW5mbyggYPCfmoAgUmVzdCBTZXJ2ZXIgcmVhZHkgYXQgaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9YCk7XG4gIGxvZ2dlci5pbmZvKCBg8J+agCBHcmFwaHFsIFNlcnZlciByZWFkeSBhdCBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH0ke2dyYXBoUUxTZXJ2ZXIuZ3JhcGhxbFBhdGh9YCk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "use",
        "logger",
        "stream",
        "write",
        "bodyParser",
        "urlencoded",
        "limit",
        "extended",
        "json",
        "origin",
        "process",
        "env",
        "CORS_DOMAIN",
        "optionsSuccessStatus",
        "credentials",
        "graphQLServer",
        "port",
        "PORT",
        "listen",
        "info",
        "graphqlPath"
      ],
      "mappings": ";;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AAXAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAaA,MAAMC,GAAG,GAAG,uBAAZ,C,CAEA;AACA;AACA;AAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQH,OAAO,CAAC,QAAD,CAAP,CAAkB,UAAlB,EAA8B;AAAE,YAAUI,gBAAOC,MAAP,CAAcC;AAA1B,CAA9B,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQ,2BAAR,E,CAAwB;;AACxBD,GAAG,CAACC,GAAJ,CAAQI,oBAAWC,UAAX,CAAsB;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAtB,CAAR,E,CAAmE;;AACnER,GAAG,CAACC,GAAJ,CAAQI,oBAAWI,IAAX,CAAgB;AAACF,EAAAA,KAAK,EAAE;AAAR,CAAhB,CAAR,E,CAA2C;AAC3C;;AACAP,GAAG,CAACC,GAAJ,CACE,mBAAK;AACHS,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,WAAZ,IAA2B,uBADhC;AAEHC,EAAAA,oBAAoB,EAAE,GAFnB;AAGHC,EAAAA,WAAW,EAAE;AAHV,CAAL,CADF,E,CAQA;;AACAf,GAAG,CAACC,GAAJ,CAAQ,4BAAR,E,CAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMe,aAAa,GAAG,sBAAahB,GAAb,CAAtB,C,CAEA;AACA;AACA;AAEA;AACA;;AACA,qBAAOA,GAAP,E,CAEA;;AACA;AAEA,MAAMiB,IAAI,GAAGN,OAAO,CAACC,GAAR,CAAYM,IAAZ,IAAoB,IAAjC;AACAlB,GAAG,CAACmB,MAAJ,CAAW;AAAEF,EAAAA;AAAF,CAAX,EAAqB,MAAM;AACzBf,kBAAOkB,IAAP,CAAc,4CAA2CH,IAAK,EAA9D;;AACAf,kBAAOkB,IAAP,CAAc,+CAA8CH,IAAK,GAAED,aAAa,CAACK,WAAY,EAA7F;AACD,CAHD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "sourcesContent": [
        "require(\"dotenv\").config();\n\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from \"cors\";\nimport cookieParser from \"cookie-parser\";\nimport compression from \"compression\";\n\nimport initializeEnvs from \"./initializeEnvs\";\nimport startGraphql from './graphql';\nimport logger from './util/logger';\nimport router from './router';\n\nconst app = express();\n\n//= ====================================================\n//  Setting up basic middleware for all Express requests\n//= ====================================================\n\n// Log requests to API using morgan\napp.use(require(\"morgan\")(\"combined\", { \"stream\": logger.stream.write }));\napp.use(compression()); // use for performance best practice\napp.use(bodyParser.urlencoded({limit: '50mb', extended: false })); // Parses urlencoded bodies\napp.use(bodyParser.json({limit: '50mb'})); // Send JSON responses\n// Enable CORS from client-side\napp.use(\n  cors({\n    origin: process.env.CORS_DOMAIN || 'http://localhost:3000',\n    optionsSuccessStatus: 200,\n    credentials: true\n  })\n);\n\n// Parse cookies \napp.use(cookieParser());\n\n// app.use('/graphql', (req, res) => console.error(\"it works\"))\n\n//= ====================================================\n//  Initializing Graphql\n//= ====================================================\n// // Mount my middleware to  run *before* Apollo which can break the request chain if required\n// app.use(\"/graphql\", () => console.log(\"here you go\"));\n\n// Mount Apollo middleware\nconst graphQLServer = startGraphql(app);\n\n//= ====================================================\n//  Starting server\n//= ====================================================\n\n// Import routes to be served\n// Should come after graphql\nrouter(app);\n\n// Initializing important env variables\ninitializeEnvs();\n\nconst port = process.env.PORT || 4000;\napp.listen({ port }, () => {\n  logger.info( `ðŸš€ Rest Server ready at http://localhost:${port}`);\n  logger.info( `ðŸš€ Graphql Server ready at http://localhost:${port}${graphQLServer.graphqlPath}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551303407056
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
        "sourceFileName": "initializeEnvs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = initializeEnvs;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nvar _logger = _interopRequireDefault(require(\"./util/logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire('dotenv').config();\n\nconst getClientToken = payload => {\n  const data = {\n    grant_type: \"client_credentials\"\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${Buffer.from(`${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`).toString(\"base64\")}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: _querystring.default.stringify(data),\n    url: \"http://localhost:8080/oauth/token\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res.data;\n  });\n}; // public key\n\n\nconst getTokenKeys = payload => {\n  const options = {\n    method: \"GET\",\n    url: \"http://localhost:8080/oauth/token_keys\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res.data;\n  });\n};\n\nconst setClientToken = dataString => {\n  process.env.BFF_CLIENT_TOKEN = dataString; // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst setTokenKeys = dataString => {\n  // Dissasemble public key\n  process.env.BFF_TOKEN_KEYS = dataString; // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst initializeClientToken = async () => {\n  if (typeof BFF_CLIENT_TOKEN === \"undefined\") {\n    try {\n      setClientToken(JSON.stringify((await getClientToken())));\n\n      _logger.default.info(\"\\n ///setClientToken\");\n\n      _logger.default.info(process.env.BFF_CLIENT_TOKEN);\n    } catch (data) {\n      _logger.default.info(\"\\n setClientToken Error\", data); // console.log(response.data);\n\n    }\n  }\n};\n\nconst initializePublicKeys = async () => {\n  if (typeof BFF_TOKEN_KEYS === \"undefined\") {\n    try {\n      setTokenKeys(JSON.stringify((await getTokenKeys())));\n\n      _logger.default.info(\"\\n ///setTokenKeys\");\n\n      _logger.default.info(process.env.BFF_TOKEN_KEYS);\n    } catch (data) {\n      console.info(\"\\n setTokenKeys Error\", data); // console.log(response.data);\n    }\n  }\n};\n\nfunction initializeEnvs() {\n  initializeClientToken();\n  initializePublicKeys();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "initializeEnvs.js"
      ],
      "names": [
        "require",
        "config",
        "getClientToken",
        "payload",
        "data",
        "grant_type",
        "options",
        "method",
        "headers",
        "Authorization",
        "Buffer",
        "from",
        "process",
        "env",
        "BFF_CLIENT_ID",
        "BFF_CLIENT_SECRET",
        "toString",
        "querystring",
        "stringify",
        "url",
        "then",
        "res",
        "getTokenKeys",
        "setClientToken",
        "dataString",
        "BFF_CLIENT_TOKEN",
        "setTokenKeys",
        "BFF_TOKEN_KEYS",
        "initializeClientToken",
        "JSON",
        "logger",
        "info",
        "initializePublicKeys",
        "console",
        "initializeEnvs"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,IAAI;AAChC,QAAMC,IAAI,GAAG;AACXC,IAAAA,UAAU,EAAE;AADD,GAAb;AAIA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEPC,MAAAA,aAAa,EAAG,SAAQC,MAAM,CAACC,IAAP,CACrB,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,IAAGF,OAAO,CAACC,GAAR,CAAYE,iBAAkB,EADxC,EAEtBC,QAFsB,CAEb,QAFa,CAEH,EAJd;AAKP,uBAAiB;AALV,KAFK;AASdZ,IAAAA,IAAI,EAAEa,qBAAYC,SAAZ,CAAsBd,IAAtB,CATQ;AAUde,IAAAA,GAAG,EAAE;AAVS,GAAhB;AAaA,SAAO,oBAAMb,OAAN,EAAec,IAAf,CAAoBC,GAAG,IAAI;AAChC,WAAOA,GAAG,CAACjB,IAAX;AACD,GAFM,CAAP;AAGD,CArBD,C,CAuBA;;;AACA,MAAMkB,YAAY,GAAGnB,OAAO,IAAI;AAC9B,QAAMG,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdY,IAAAA,GAAG,EAAE;AAFS,GAAhB;AAKA,SAAO,oBAAMb,OAAN,EAAec,IAAf,CAAoBC,GAAG,IAAI;AAChC,WAAOA,GAAG,CAACjB,IAAX;AACD,GAFM,CAAP;AAGD,CATD;;AAWA,MAAMmB,cAAc,GAAIC,UAAD,IAAgB;AACrCZ,EAAAA,OAAO,CAACC,GAAR,CAAYY,gBAAZ,GAA+BD,UAA/B,CADqC,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CATD;;AAWA,MAAME,YAAY,GAAIF,UAAD,IAAgB;AACnC;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYc,cAAZ,GAA6BH,UAA7B,CAFmC,CAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAVD;;AAYA,MAAMI,qBAAqB,GAAG,YAAY;AACxC,MAAI,OAAOH,gBAAP,KAA4B,WAAhC,EAA6C;AAC3C,QAAI;AACFF,MAAAA,cAAc,CAACM,IAAI,CAACX,SAAL,EAAe,MAAMhB,cAAc,EAAnC,EAAD,CAAd;;AACA4B,sBAAOC,IAAP,CAAY,sBAAZ;;AACAD,sBAAOC,IAAP,CAAYnB,OAAO,CAACC,GAAR,CAAYY,gBAAxB;AACD,KAJD,CAIE,OAAOrB,IAAP,EAAa;AACb0B,sBAAOC,IAAP,CAAY,yBAAZ,EAAuC3B,IAAvC,EADa,CAEb;;AACD;AACF;AACF,CAXD;;AAaA,MAAM4B,oBAAoB,GAAG,YAAY;AACvC,MAAI,OAAOL,cAAP,KAA0B,WAA9B,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACG,IAAI,CAACX,SAAL,EAAe,MAAMI,YAAY,EAAjC,EAAD,CAAZ;;AACAQ,sBAAOC,IAAP,CAAY,oBAAZ;;AACAD,sBAAOC,IAAP,CAAYnB,OAAO,CAACC,GAAR,CAAYc,cAAxB;AACD,KAJD,CAIE,OAAOvB,IAAP,EAAa;AACb6B,MAAAA,OAAO,CAACF,IAAR,CAAa,uBAAb,EAAsC3B,IAAtC,EADa,CAEb;AACD;AACF;AACF,CAXD;;AAae,SAAS8B,cAAT,GAA0B;AACvCN,EAAAA,qBAAqB;AACrBI,EAAAA,oBAAoB;AACrB",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "sourcesContent": [
        "import axios from 'axios'; \nimport querystring from 'querystring';\nimport logger from './util/logger';\n\nrequire('dotenv').config();\n\nconst getClientToken = payload => {\n  const data = {\n    grant_type: \"client_credentials\"\n  };\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`\n      ).toString(\"base64\")}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: querystring.stringify(data),\n    url: \"http://localhost:8080/oauth/token\"\n  };\n\n  return axios(options).then(res => {\n    return res.data;\n  });\n};\n\n// public key\nconst getTokenKeys = payload => {\n  const options = {\n    method: \"GET\",\n    url: \"http://localhost:8080/oauth/token_keys\"\n  };\n\n  return axios(options).then(res => {\n    return res.data;\n  });\n};\n\nconst setClientToken = (dataString) => {\n  process.env.BFF_CLIENT_TOKEN = dataString;\n  // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst setTokenKeys = (dataString) => {\n  // Dissasemble public key\n  process.env.BFF_TOKEN_KEYS = dataString;\n  // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst initializeClientToken = async () => {\n  if (typeof BFF_CLIENT_TOKEN === \"undefined\") {\n    try {\n      setClientToken(JSON.stringify(await getClientToken()));\n      logger.info(\"\\n ///setClientToken\");\n      logger.info(process.env.BFF_CLIENT_TOKEN);\n    } catch (data) {\n      logger.info(\"\\n setClientToken Error\", data);\n      // console.log(response.data);\n    }\n  }\n}\n\nconst initializePublicKeys = async () => {\n  if (typeof BFF_TOKEN_KEYS === \"undefined\") {\n    try {\n      setTokenKeys(JSON.stringify(await getTokenKeys()));\n      logger.info(\"\\n ///setTokenKeys\");\n      logger.info(process.env.BFF_TOKEN_KEYS);\n    } catch (data) {\n      console.info(\"\\n setTokenKeys Error\", data);\n      // console.log(response.data);\n    }\n  }\n}\n\nexport default function initializeEnvs() {\n  initializeClientToken();\n  initializePublicKeys();\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551310638169
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nvar _util = require(\"util\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst {\n  combine,\n  printf,\n  timestamp\n} = _winston.format;\nconst {\n  NODE_ENV\n} = process.env;\nconst chalkColors = {\n  INFO: \"seagreen\",\n  DEBUG: \"dodgerblue\",\n  ERROR: \"firebrick\"\n};\n\nfunction formatObject(param) {\n  if ((0, _util.isObject)(param)) {\n    return JSON.stringify(param);\n  }\n\n  return `\"${param}\"`;\n}\n\nconst logFormatter = printf(info => {\n  info.level = info.level.toUpperCase();\n  return _chalk.default.keyword(chalkColors[info.level])(`[${info.timestamp}] [${info.level}]: {\"message\": ${formatObject(info.message)}}`);\n});\nconst logger = (0, _winston.createLogger)({\n  level: NODE_ENV === \"production\" ? \"error\" : \"debug\",\n  format: combine(timestamp({\n    format: () => {\n      return new Date().toLocaleString();\n    }\n  }), logFormatter),\n  transports: [new _winston.transports.Console({})]\n});\nvar _default = logger;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJjb21iaW5lIiwicHJpbnRmIiwidGltZXN0YW1wIiwiZm9ybWF0IiwiTk9ERV9FTlYiLCJwcm9jZXNzIiwiZW52IiwiY2hhbGtDb2xvcnMiLCJJTkZPIiwiREVCVUciLCJFUlJPUiIsImZvcm1hdE9iamVjdCIsInBhcmFtIiwiSlNPTiIsInN0cmluZ2lmeSIsImxvZ0Zvcm1hdHRlciIsImluZm8iLCJsZXZlbCIsInRvVXBwZXJDYXNlIiwiY2hhbGsiLCJrZXl3b3JkIiwibWVzc2FnZSIsImxvZ2dlciIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsInRyYW5zcG9ydHMiLCJDb25zb2xlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQSxNQUFNO0FBQUVBLEVBQUFBLE9BQUY7QUFBV0MsRUFBQUEsTUFBWDtBQUFtQkMsRUFBQUE7QUFBbkIsSUFBaUNDLGVBQXZDO0FBRUEsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWVDLE9BQU8sQ0FBQ0MsR0FBN0I7QUFDQSxNQUFNQyxXQUFXLEdBQUc7QUFDbEJDLEVBQUFBLElBQUksRUFBRSxVQURZO0FBRWxCQyxFQUFBQSxLQUFLLEVBQUUsWUFGVztBQUdsQkMsRUFBQUEsS0FBSyxFQUFFO0FBSFcsQ0FBcEI7O0FBTUEsU0FBU0MsWUFBVCxDQUFzQkMsS0FBdEIsRUFBNkI7QUFDM0IsTUFBSSxvQkFBU0EsS0FBVCxDQUFKLEVBQXFCO0FBQ25CLFdBQU9DLElBQUksQ0FBQ0MsU0FBTCxDQUFlRixLQUFmLENBQVA7QUFDRDs7QUFDRCxTQUFRLElBQUdBLEtBQU0sR0FBakI7QUFDRDs7QUFFRCxNQUFNRyxZQUFZLEdBQUdkLE1BQU0sQ0FBQ2UsSUFBSSxJQUFJO0FBQ2xDQSxFQUFBQSxJQUFJLENBQUNDLEtBQUwsR0FBYUQsSUFBSSxDQUFDQyxLQUFMLENBQVdDLFdBQVgsRUFBYjtBQUNBLFNBQU9DLGVBQU1DLE9BQU4sQ0FBY2IsV0FBVyxDQUFDUyxJQUFJLENBQUNDLEtBQU4sQ0FBekIsRUFDSixJQUFHRCxJQUFJLENBQUNkLFNBQVUsTUFBS2MsSUFBSSxDQUFDQyxLQUFNLGtCQUFpQk4sWUFBWSxDQUM5REssSUFBSSxDQUFDSyxPQUR5RCxDQUU5RCxHQUhHLENBQVA7QUFLRCxDQVAwQixDQUEzQjtBQVNBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkwsRUFBQUEsS0FBSyxFQUFFYixRQUFRLEtBQUssWUFBYixHQUE0QixPQUE1QixHQUFzQyxPQURuQjtBQUUxQkQsRUFBQUEsTUFBTSxFQUFFSCxPQUFPLENBQ2JFLFNBQVMsQ0FBQztBQUNSQyxJQUFBQSxNQUFNLEVBQUUsTUFBTTtBQUNaLGFBQU8sSUFBSW9CLElBQUosR0FBV0MsY0FBWCxFQUFQO0FBQ0Q7QUFITyxHQUFELENBREksRUFNYlQsWUFOYSxDQUZXO0FBVTFCVSxFQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFJQSxvQkFBV0MsT0FBZixDQUF1QixFQUF2QixDQUFEO0FBVmMsQ0FBYixDQUFmO2VBYWVKLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUxvZ2dlciwgZm9ybWF0LCB0cmFuc3BvcnRzIH0gZnJvbSBcIndpbnN0b25cIjtcbmltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSBcInV0aWxcIjtcbmltcG9ydCBjaGFsayBmcm9tIFwiY2hhbGtcIjtcbmNvbnN0IHsgY29tYmluZSwgcHJpbnRmLCB0aW1lc3RhbXAgfSA9IGZvcm1hdDtcblxuY29uc3QgeyBOT0RFX0VOViB9ID0gcHJvY2Vzcy5lbnY7XG5jb25zdCBjaGFsa0NvbG9ycyA9IHtcbiAgSU5GTzogXCJzZWFncmVlblwiLFxuICBERUJVRzogXCJkb2RnZXJibHVlXCIsXG4gIEVSUk9SOiBcImZpcmVicmlja1wiXG59O1xuXG5mdW5jdGlvbiBmb3JtYXRPYmplY3QocGFyYW0pIHtcbiAgaWYgKGlzT2JqZWN0KHBhcmFtKSkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShwYXJhbSk7XG4gIH1cbiAgcmV0dXJuIGBcIiR7cGFyYW19XCJgO1xufVxuXG5jb25zdCBsb2dGb3JtYXR0ZXIgPSBwcmludGYoaW5mbyA9PiB7XG4gIGluZm8ubGV2ZWwgPSBpbmZvLmxldmVsLnRvVXBwZXJDYXNlKCk7XG4gIHJldHVybiBjaGFsay5rZXl3b3JkKGNoYWxrQ29sb3JzW2luZm8ubGV2ZWxdKShcbiAgICBgWyR7aW5mby50aW1lc3RhbXB9XSBbJHtpbmZvLmxldmVsfV06IHtcIm1lc3NhZ2VcIjogJHtmb3JtYXRPYmplY3QoXG4gICAgICBpbmZvLm1lc3NhZ2VcbiAgICApfX1gXG4gICk7XG59KTtcblxuY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcbiAgbGV2ZWw6IE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IFwiZXJyb3JcIiA6IFwiZGVidWdcIixcbiAgZm9ybWF0OiBjb21iaW5lKFxuICAgIHRpbWVzdGFtcCh7XG4gICAgICBmb3JtYXQ6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICBsb2dGb3JtYXR0ZXJcbiAgKSxcbiAgdHJhbnNwb3J0czogW25ldyB0cmFuc3BvcnRzLkNvbnNvbGUoe30pXVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGxvZ2dlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "combine",
        "printf",
        "timestamp",
        "format",
        "NODE_ENV",
        "process",
        "env",
        "chalkColors",
        "INFO",
        "DEBUG",
        "ERROR",
        "formatObject",
        "param",
        "JSON",
        "stringify",
        "logFormatter",
        "info",
        "level",
        "toUpperCase",
        "chalk",
        "keyword",
        "message",
        "logger",
        "Date",
        "toLocaleString",
        "transports",
        "Console"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AACA,MAAM;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,IAAiCC,eAAvC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAACC,GAA7B;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,UADY;AAElBC,EAAAA,KAAK,EAAE,YAFW;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAApB;;AAMA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAI,oBAASA,KAAT,CAAJ,EAAqB;AACnB,WAAOC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAP;AACD;;AACD,SAAQ,IAAGA,KAAM,GAAjB;AACD;;AAED,MAAMG,YAAY,GAAGd,MAAM,CAACe,IAAI,IAAI;AAClCA,EAAAA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,CAAWC,WAAX,EAAb;AACA,SAAOC,eAAMC,OAAN,CAAcb,WAAW,CAACS,IAAI,CAACC,KAAN,CAAzB,EACJ,IAAGD,IAAI,CAACd,SAAU,MAAKc,IAAI,CAACC,KAAM,kBAAiBN,YAAY,CAC9DK,IAAI,CAACK,OADyD,CAE9D,GAHG,CAAP;AAKD,CAP0B,CAA3B;AASA,MAAMC,MAAM,GAAG,2BAAa;AAC1BL,EAAAA,KAAK,EAAEb,QAAQ,KAAK,YAAb,GAA4B,OAA5B,GAAsC,OADnB;AAE1BD,EAAAA,MAAM,EAAEH,OAAO,CACbE,SAAS,CAAC;AACRC,IAAAA,MAAM,EAAE,MAAM;AACZ,aAAO,IAAIoB,IAAJ,GAAWC,cAAX,EAAP;AACD;AAHO,GAAD,CADI,EAMbT,YANa,CAFW;AAU1BU,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,CAAuB,EAAvB,CAAD;AAVc,CAAb,CAAf;eAaeJ,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "sourcesContent": [
        "import { createLogger, format, transports } from \"winston\";\nimport { isObject } from \"util\";\nimport chalk from \"chalk\";\nconst { combine, printf, timestamp } = format;\n\nconst { NODE_ENV } = process.env;\nconst chalkColors = {\n  INFO: \"seagreen\",\n  DEBUG: \"dodgerblue\",\n  ERROR: \"firebrick\"\n};\n\nfunction formatObject(param) {\n  if (isObject(param)) {\n    return JSON.stringify(param);\n  }\n  return `\"${param}\"`;\n}\n\nconst logFormatter = printf(info => {\n  info.level = info.level.toUpperCase();\n  return chalk.keyword(chalkColors[info.level])(\n    `[${info.timestamp}] [${info.level}]: {\"message\": ${formatObject(\n      info.message\n    )}}`\n  );\n});\n\nconst logger = createLogger({\n  level: NODE_ENV === \"production\" ? \"error\" : \"debug\",\n  format: combine(\n    timestamp({\n      format: () => {\n        return new Date().toLocaleString();\n      }\n    }),\n    logFormatter\n  ),\n  transports: [new transports.Console({})]\n});\n\nexport default logger;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551122578240
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = startGraphql;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./resolvers\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nvar _logger = _interopRequireDefault(require(\"../util/logger\"));\n\nvar _authSteps = _interopRequireDefault(require(\"../util/authSteps\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire('dotenv').config();\n\nfunction startGraphql(app) {\n  // *** fake data ***//\n  app.get('/api/advisors/:userId/clients', (req, res) => {\n    const response = [{\n      \"userAccount\": \"2\",\n      \"primaryOwnerFirstName\": \"lewis\",\n      \"primaryOwnerLastName\": \"Dackam\"\n    }, {\n      \"userAccount\": \"1\",\n      \"primaryOwnerFirstName\": \"Olivia\",\n      \"primaryOwnerLastName\": \"Blue\"\n    }];\n    res.send(response);\n  });\n  app.post('/api/analytic/top-holdings', (req, res) => {\n    const response = [{\n      \"ticker\": \"AAPL\",\n      \"securityName\": \"APPLE INC\",\n      \"price\": 339.39,\n      \"holdingValue\": 300000\n    }, {\n      \"ticker\": \"NTFL\",\n      \"securityName\": \"NETFLIX\",\n      \"price\": 499,\n      \"holdingValue\": 490000\n    }];\n    res.send(response);\n  });\n  app.post('/api/analytic/advisor-aum', (req, res) => {\n    const response = [{\n      \"date\": \"2018-12-06\",\n      \"aumValue\": \"12.9999\",\n      \"marketChanged\": \"333999\",\n      \"flowChanged\": \"12000\"\n    }, {\n      \"date\": \"1998-11-11\",\n      \"aumValue\": \"1.2\",\n      \"marketChanged\": \"11.11\",\n      \"flowChanged\": \"1111\"\n    }];\n    res.send(response);\n  });\n  app.post('/api/analytic/top-clients', (req, res) => {\n    const response = [{\n      \"userAccount\": \"1\",\n      \"aumPercentage\": 75.5,\n      \"aumValue\": 175900\n    }, {\n      \"userAccount\": \"2\",\n      \"aumPercentage\": 88.5,\n      \"aumValue\": 80000\n    }];\n    res.send(response);\n  });\n  const server = new _apolloServerExpress.ApolloServer({\n    typeDefs: _schema.default,\n    resolvers: _resolvers.default,\n    dataSources: () => _api.default,\n    context: async ({\n      req\n    }) => {\n      if (!(await (0, _authSteps.default)(req))) {\n        throw new _apolloServerExpress.AuthenticationError('must authenticate');\n      }\n\n      ;\n      return {\n        token: 12131313,\n        env: process.env.BFF_HOST\n      };\n    },\n    formatError: error => {\n      _logger.default.error(error);\n\n      return new Error(\"Internal server error\");\n    }\n  });\n  server.applyMiddleware({\n    cors: true,\n    bodyParser: true,\n    app,\n    path: '/graphql'\n  });\n  return server;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJzdGFydEdyYXBocWwiLCJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZXNwb25zZSIsInNlbmQiLCJwb3N0Iiwic2VydmVyIiwiQXBvbGxvU2VydmVyIiwidHlwZURlZnMiLCJzY2hlbWEiLCJyZXNvbHZlcnMiLCJkYXRhU291cmNlcyIsImFwaSIsImNvbnRleHQiLCJBdXRoZW50aWNhdGlvbkVycm9yIiwidG9rZW4iLCJlbnYiLCJwcm9jZXNzIiwiQkZGX0hPU1QiLCJmb3JtYXRFcnJvciIsImVycm9yIiwibG9nZ2VyIiwiRXJyb3IiLCJhcHBseU1pZGRsZXdhcmUiLCJjb3JzIiwiYm9keVBhcnNlciIsInBhdGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFLQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQVpBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFjZSxTQUFTQyxZQUFULENBQXNCQyxHQUF0QixFQUEyQjtBQUN4QztBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSwrQkFBUixFQUF5QyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNyRCxVQUFNQyxRQUFRLEdBQUcsQ0FDZjtBQUNFLHFCQUFnQixHQURsQjtBQUVFLCtCQUEwQixPQUY1QjtBQUdFLDhCQUF5QjtBQUgzQixLQURlLEVBTWY7QUFDRSxxQkFBZ0IsR0FEbEI7QUFFRSwrQkFBMEIsUUFGNUI7QUFHRSw4QkFBeUI7QUFIM0IsS0FOZSxDQUFqQjtBQWFFRCxJQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0QsUUFBVDtBQUNELEdBZkg7QUFpQkFKLEVBQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTLDRCQUFULEVBQXVDLENBQUNKLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ25ELFVBQU1DLFFBQVEsR0FBRyxDQUNmO0FBQ0UsZ0JBQVcsTUFEYjtBQUVFLHNCQUFpQixXQUZuQjtBQUdFLGVBQVUsTUFIWjtBQUlFLHNCQUFpQjtBQUpuQixLQURlLEVBT2Y7QUFDRSxnQkFBVyxNQURiO0FBRUUsc0JBQWlCLFNBRm5CO0FBR0UsZUFBVSxHQUhaO0FBSUUsc0JBQWlCO0FBSm5CLEtBUGUsQ0FBakI7QUFlQUQsSUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQVNELFFBQVQ7QUFDRCxHQWpCRDtBQW1CQUosRUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVMsMkJBQVQsRUFBc0MsQ0FBQ0osR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDbEQsVUFBTUMsUUFBUSxHQUFHLENBQ2Y7QUFDRSxjQUFTLFlBRFg7QUFFRSxrQkFBYSxTQUZmO0FBR0UsdUJBQWtCLFFBSHBCO0FBSUUscUJBQWdCO0FBSmxCLEtBRGUsRUFPZjtBQUNFLGNBQVMsWUFEWDtBQUVFLGtCQUFhLEtBRmY7QUFHRSx1QkFBa0IsT0FIcEI7QUFJRSxxQkFBZ0I7QUFKbEIsS0FQZSxDQUFqQjtBQWVBRCxJQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0QsUUFBVDtBQUNELEdBakJEO0FBb0JBSixFQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBUywyQkFBVCxFQUFzQyxDQUFDSixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNsRCxVQUFNQyxRQUFRLEdBQUcsQ0FDZDtBQUVFLHFCQUFnQixHQUZsQjtBQUlFLHVCQUFrQixJQUpwQjtBQU1FLGtCQUFhO0FBTmYsS0FEYyxFQVVkO0FBRUUscUJBQWdCLEdBRmxCO0FBSUUsdUJBQWtCLElBSnBCO0FBTUUsa0JBQVk7QUFOZCxLQVZjLENBQWpCO0FBcUJDRCxJQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0QsUUFBVDtBQUNELEdBdkJGO0FBeUJBLFFBQU1HLE1BQU0sR0FBRyxJQUFJQyxpQ0FBSixDQUFpQjtBQUM3QkMsSUFBQUEsUUFBUSxFQUFFQyxlQURtQjtBQUU3QkMsSUFBQUEsU0FBUyxFQUFUQSxrQkFGNkI7QUFHN0JDLElBQUFBLFdBQVcsRUFBRSxNQUFNQyxZQUhVO0FBSTdCQyxJQUFBQSxPQUFPLEVBQUUsT0FBTztBQUFFWixNQUFBQTtBQUFGLEtBQVAsS0FBbUI7QUFDMUIsVUFBSSxFQUFDLE1BQU0sd0JBQVNBLEdBQVQsQ0FBUCxDQUFKLEVBQTBCO0FBQ3hCLGNBQU0sSUFBSWEsd0NBQUosQ0FBd0IsbUJBQXhCLENBQU47QUFDRDs7QUFBQTtBQUVELGFBQU87QUFDTEMsUUFBQUEsS0FBSyxFQUFFLFFBREY7QUFFTEMsUUFBQUEsR0FBRyxFQUFFQyxPQUFPLENBQUNELEdBQVIsQ0FBWUU7QUFGWixPQUFQO0FBSUQsS0FiNEI7QUFjN0JDLElBQUFBLFdBQVcsRUFBRUMsS0FBSyxJQUFJO0FBQ3BCQyxzQkFBT0QsS0FBUCxDQUFhQSxLQUFiOztBQUNBLGFBQU8sSUFBSUUsS0FBSixDQUFVLHVCQUFWLENBQVA7QUFDRDtBQWpCNEIsR0FBakIsQ0FBZjtBQW9CQ2hCLEVBQUFBLE1BQU0sQ0FBQ2lCLGVBQVAsQ0FBdUI7QUFBRUMsSUFBQUEsSUFBSSxFQUFFLElBQVI7QUFBY0MsSUFBQUEsVUFBVSxFQUFFLElBQTFCO0FBQWdDMUIsSUFBQUEsR0FBaEM7QUFBcUMyQixJQUFBQSxJQUFJLEVBQUU7QUFBM0MsR0FBdkI7QUFFQSxTQUFPcEIsTUFBUDtBQUNGIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKVxuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IFxuICBBcG9sbG9TZXJ2ZXIsXG4gIEF1dGhlbnRpY2F0aW9uRXJyb3Jcbn0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcblxuaW1wb3J0IHNjaGVtYSBmcm9tICcuL3NjaGVtYSc7XG5pbXBvcnQgcmVzb2x2ZXJzIGZyb20gJy4vcmVzb2x2ZXJzJztcbmltcG9ydCBhcGkgZnJvbSAnLi9hcGknO1xuaW1wb3J0IGxvZ2dlciBmcm9tIFwiLi4vdXRpbC9sb2dnZXJcIjtcbmltcG9ydCBhdXRoU3RlcCBmcm9tICcuLi91dGlsL2F1dGhTdGVwcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0YXJ0R3JhcGhxbChhcHApIHsgXG4gIC8vICoqKiBmYWtlIGRhdGEgKioqLy9cbiAgYXBwLmdldCgnL2FwaS9hZHZpc29ycy86dXNlcklkL2NsaWVudHMnLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IFtcbiAgICAgIHtcbiAgICAgICAgXCJ1c2VyQWNjb3VudFwiIDogXCIyXCIsXG4gICAgICAgIFwicHJpbWFyeU93bmVyRmlyc3ROYW1lXCIgOiBcImxld2lzXCIsXG4gICAgICAgIFwicHJpbWFyeU93bmVyTGFzdE5hbWVcIiA6IFwiRGFja2FtXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIFwidXNlckFjY291bnRcIiA6IFwiMVwiLFxuICAgICAgICBcInByaW1hcnlPd25lckZpcnN0TmFtZVwiIDogXCJPbGl2aWFcIixcbiAgICAgICAgXCJwcmltYXJ5T3duZXJMYXN0TmFtZVwiIDogXCJCbHVlXCJcbiAgICAgIH1cbiAgICAgIF07XG4gIFxuICAgICAgcmVzLnNlbmQocmVzcG9uc2UpO1xuICAgIH0pO1xuICBcbiAgYXBwLnBvc3QoJy9hcGkvYW5hbHl0aWMvdG9wLWhvbGRpbmdzJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBbXG4gICAgICB7XG4gICAgICAgIFwidGlja2VyXCIgOiBcIkFBUExcIiwgXG4gICAgICAgIFwic2VjdXJpdHlOYW1lXCIgOiBcIkFQUExFIElOQ1wiLFxuICAgICAgICBcInByaWNlXCIgOiAzMzkuMzksXG4gICAgICAgIFwiaG9sZGluZ1ZhbHVlXCIgOiAzMDAwMDBcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIFwidGlja2VyXCIgOiBcIk5URkxcIiwgXG4gICAgICAgIFwic2VjdXJpdHlOYW1lXCIgOiBcIk5FVEZMSVhcIixcbiAgICAgICAgXCJwcmljZVwiIDogNDk5LFxuICAgICAgICBcImhvbGRpbmdWYWx1ZVwiIDogNDkwMDAwXG4gICAgICB9LFxuICAgIF07XG4gIFxuICAgIHJlcy5zZW5kKHJlc3BvbnNlKTtcbiAgfSk7XG4gIFxuICBhcHAucG9zdCgnL2FwaS9hbmFseXRpYy9hZHZpc29yLWF1bScsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gW1xuICAgICAge1xuICAgICAgICBcImRhdGVcIiA6IFwiMjAxOC0xMi0wNlwiLFxuICAgICAgICBcImF1bVZhbHVlXCIgOiBcIjEyLjk5OTlcIixcbiAgICAgICAgXCJtYXJrZXRDaGFuZ2VkXCIgOiBcIjMzMzk5OVwiLFxuICAgICAgICBcImZsb3dDaGFuZ2VkXCIgOiBcIjEyMDAwXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBcImRhdGVcIiA6IFwiMTk5OC0xMS0xMVwiLFxuICAgICAgICBcImF1bVZhbHVlXCIgOiBcIjEuMlwiLFxuICAgICAgICBcIm1hcmtldENoYW5nZWRcIiA6IFwiMTEuMTFcIixcbiAgICAgICAgXCJmbG93Q2hhbmdlZFwiIDogXCIxMTExXCIsXG4gICAgICB9LFxuICAgIF07XG4gIFxuICAgIHJlcy5zZW5kKHJlc3BvbnNlKTtcbiAgfSk7XG4gIFxuICBcbiAgYXBwLnBvc3QoJy9hcGkvYW5hbHl0aWMvdG9wLWNsaWVudHMnLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IFtcbiAgICAgICB7XG4gICBcbiAgICAgICAgIFwidXNlckFjY291bnRcIiA6IFwiMVwiLFxuICAgXG4gICAgICAgICBcImF1bVBlcmNlbnRhZ2VcIiA6IDc1LjUsXG4gICBcbiAgICAgICAgIFwiYXVtVmFsdWVcIiA6IDE3NTkwMFxuICAgXG4gICAgICAgfSxcbiAgICAgICB7XG4gICBcbiAgICAgICAgIFwidXNlckFjY291bnRcIiA6IFwiMlwiLFxuICAgXG4gICAgICAgICBcImF1bVBlcmNlbnRhZ2VcIiA6IDg4LjUsXG4gICBcbiAgICAgICAgIFwiYXVtVmFsdWVcIiA6ODAwMDAgXG4gICBcbiAgICAgICB9XG4gICAgIF07XG4gICBcbiAgICAgcmVzLnNlbmQocmVzcG9uc2UpO1xuICAgfSk7XG4gICBcbiAgY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7XG4gICAgIHR5cGVEZWZzOiBzY2hlbWEsXG4gICAgIHJlc29sdmVycyxcbiAgICAgZGF0YVNvdXJjZXM6ICgpID0+IGFwaSxcbiAgICAgY29udGV4dDogYXN5bmMgKHsgcmVxIH0pID0+IHtcbiAgICAgICBpZiAoIWF3YWl0IGF1dGhTdGVwKHJlcSkpIHtcbiAgICAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKCdtdXN0IGF1dGhlbnRpY2F0ZScpO1xuICAgICAgIH07XG5cbiAgICAgICByZXR1cm4geyBcbiAgICAgICAgIHRva2VuOiAxMjEzMTMxMyxcbiAgICAgICAgIGVudjogcHJvY2Vzcy5lbnYuQkZGX0hPU1RcbiAgICAgICB9XG4gICAgIH0sXG4gICAgIGZvcm1hdEVycm9yOiBlcnJvciA9PiB7XG4gICAgICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIpO1xuICAgICB9XG4gICB9KTtcbiAgIFxuICAgc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGNvcnM6IHRydWUsIGJvZHlQYXJzZXI6IHRydWUsIGFwcCwgcGF0aDogJy9ncmFwaHFsJyB9KTtcblxuICAgcmV0dXJuIHNlcnZlcjtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "startGraphql",
        "app",
        "get",
        "req",
        "res",
        "response",
        "send",
        "post",
        "server",
        "ApolloServer",
        "typeDefs",
        "schema",
        "resolvers",
        "dataSources",
        "api",
        "context",
        "AuthenticationError",
        "token",
        "env",
        "process",
        "BFF_HOST",
        "formatError",
        "error",
        "logger",
        "Error",
        "applyMiddleware",
        "cors",
        "bodyParser",
        "path"
      ],
      "mappings": ";;;;;;;AAEA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;AAZAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAce,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACxC;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,+BAAR,EAAyC,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrD,UAAMC,QAAQ,GAAG,CACf;AACE,qBAAgB,GADlB;AAEE,+BAA0B,OAF5B;AAGE,8BAAyB;AAH3B,KADe,EAMf;AACE,qBAAgB,GADlB;AAEE,+BAA0B,QAF5B;AAGE,8BAAyB;AAH3B,KANe,CAAjB;AAaED,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAfH;AAiBAJ,EAAAA,GAAG,CAACM,IAAJ,CAAS,4BAAT,EAAuC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AACnD,UAAMC,QAAQ,GAAG,CACf;AACE,gBAAW,MADb;AAEE,sBAAiB,WAFnB;AAGE,eAAU,MAHZ;AAIE,sBAAiB;AAJnB,KADe,EAOf;AACE,gBAAW,MADb;AAEE,sBAAiB,SAFnB;AAGE,eAAU,GAHZ;AAIE,sBAAiB;AAJnB,KAPe,CAAjB;AAeAD,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAjBD;AAmBAJ,EAAAA,GAAG,CAACM,IAAJ,CAAS,2BAAT,EAAsC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClD,UAAMC,QAAQ,GAAG,CACf;AACE,cAAS,YADX;AAEE,kBAAa,SAFf;AAGE,uBAAkB,QAHpB;AAIE,qBAAgB;AAJlB,KADe,EAOf;AACE,cAAS,YADX;AAEE,kBAAa,KAFf;AAGE,uBAAkB,OAHpB;AAIE,qBAAgB;AAJlB,KAPe,CAAjB;AAeAD,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAjBD;AAoBAJ,EAAAA,GAAG,CAACM,IAAJ,CAAS,2BAAT,EAAsC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClD,UAAMC,QAAQ,GAAG,CACd;AAEE,qBAAgB,GAFlB;AAIE,uBAAkB,IAJpB;AAME,kBAAa;AANf,KADc,EAUd;AAEE,qBAAgB,GAFlB;AAIE,uBAAkB,IAJpB;AAME,kBAAY;AANd,KAVc,CAAjB;AAqBCD,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAvBF;AAyBA,QAAMG,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC7BC,IAAAA,QAAQ,EAAEC,eADmB;AAE7BC,IAAAA,SAAS,EAATA,kBAF6B;AAG7BC,IAAAA,WAAW,EAAE,MAAMC,YAHU;AAI7BC,IAAAA,OAAO,EAAE,OAAO;AAAEZ,MAAAA;AAAF,KAAP,KAAmB;AAC1B,UAAI,EAAC,MAAM,wBAASA,GAAT,CAAP,CAAJ,EAA0B;AACxB,cAAM,IAAIa,wCAAJ,CAAwB,mBAAxB,CAAN;AACD;;AAAA;AAED,aAAO;AACLC,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,CAAYE;AAFZ,OAAP;AAID,KAb4B;AAc7BC,IAAAA,WAAW,EAAEC,KAAK,IAAI;AACpBC,sBAAOD,KAAP,CAAaA,KAAb;;AACA,aAAO,IAAIE,KAAJ,CAAU,uBAAV,CAAP;AACD;AAjB4B,GAAjB,CAAf;AAoBChB,EAAAA,MAAM,CAACiB,eAAP,CAAuB;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,UAAU,EAAE,IAA1B;AAAgC1B,IAAAA,GAAhC;AAAqC2B,IAAAA,IAAI,EAAE;AAA3C,GAAvB;AAEA,SAAOpB,MAAP;AACF",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "require('dotenv').config()\n\nimport express from 'express';\nimport { \n  ApolloServer,\n  AuthenticationError\n} from 'apollo-server-express';\n\nimport schema from './schema';\nimport resolvers from './resolvers';\nimport api from './api';\nimport logger from \"../util/logger\";\nimport authStep from '../util/authSteps';\n\nexport default function startGraphql(app) { \n  // *** fake data ***//\n  app.get('/api/advisors/:userId/clients', (req, res) => {\n    const response = [\n      {\n        \"userAccount\" : \"2\",\n        \"primaryOwnerFirstName\" : \"lewis\",\n        \"primaryOwnerLastName\" : \"Dackam\"\n      },\n      {\n        \"userAccount\" : \"1\",\n        \"primaryOwnerFirstName\" : \"Olivia\",\n        \"primaryOwnerLastName\" : \"Blue\"\n      }\n      ];\n  \n      res.send(response);\n    });\n  \n  app.post('/api/analytic/top-holdings', (req, res) => {\n    const response = [\n      {\n        \"ticker\" : \"AAPL\", \n        \"securityName\" : \"APPLE INC\",\n        \"price\" : 339.39,\n        \"holdingValue\" : 300000\n      },\n      {\n        \"ticker\" : \"NTFL\", \n        \"securityName\" : \"NETFLIX\",\n        \"price\" : 499,\n        \"holdingValue\" : 490000\n      },\n    ];\n  \n    res.send(response);\n  });\n  \n  app.post('/api/analytic/advisor-aum', (req, res) => {\n    const response = [\n      {\n        \"date\" : \"2018-12-06\",\n        \"aumValue\" : \"12.9999\",\n        \"marketChanged\" : \"333999\",\n        \"flowChanged\" : \"12000\",\n      },\n      {\n        \"date\" : \"1998-11-11\",\n        \"aumValue\" : \"1.2\",\n        \"marketChanged\" : \"11.11\",\n        \"flowChanged\" : \"1111\",\n      },\n    ];\n  \n    res.send(response);\n  });\n  \n  \n  app.post('/api/analytic/top-clients', (req, res) => {\n    const response = [\n       {\n   \n         \"userAccount\" : \"1\",\n   \n         \"aumPercentage\" : 75.5,\n   \n         \"aumValue\" : 175900\n   \n       },\n       {\n   \n         \"userAccount\" : \"2\",\n   \n         \"aumPercentage\" : 88.5,\n   \n         \"aumValue\" :80000 \n   \n       }\n     ];\n   \n     res.send(response);\n   });\n   \n  const server = new ApolloServer({\n     typeDefs: schema,\n     resolvers,\n     dataSources: () => api,\n     context: async ({ req }) => {\n       if (!await authStep(req)) {\n         throw new AuthenticationError('must authenticate');\n       };\n\n       return { \n         token: 12131313,\n         env: process.env.BFF_HOST\n       }\n     },\n     formatError: error => {\n       logger.error(error);\n       return new Error(\"Internal server error\");\n     }\n   });\n   \n   server.applyMiddleware({ cors: true, bodyParser: true, app, path: '/graphql' });\n\n   return server;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551307065992
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _schema = _interopRequireDefault(require(\"./AumHistory/schema\"));\n\nvar _schema2 = _interopRequireDefault(require(\"./TopClients/schema\"));\n\nvar _schema3 = _interopRequireDefault(require(\"./TopHoldings/schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst LinkSchema = _apolloServerExpress.gql`\n  type Query {\n    _: Boolean \n  }\n\n  type Mutation {\n    _: Boolean \n  }\n\n  type Subscription {\n    _: Boolean \n  }\n`;\nvar _default = [LinkSchema, _schema.default, _schema2.default, _schema3.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJMaW5rU2NoZW1hIiwiZ3FsIiwiQXVtSGlzdG9yeVNjaGVtYSIsIlRvcENsaWVudHNTY2hlbWEiLCJUb3BIb2xkaW5nc1NjaGVtYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTs7Ozs7Ozs7Ozs7O0NBQXZCO2VBY2UsQ0FDYkQsVUFEYSxFQUViRSxlQUZhLEVBR2JDLGdCQUhhLEVBSWJDLGdCQUphLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmltcG9ydCBBdW1IaXN0b3J5U2NoZW1hIGZyb20gJy4vQXVtSGlzdG9yeS9zY2hlbWEnO1xuaW1wb3J0IFRvcENsaWVudHNTY2hlbWEgZnJvbSAnLi9Ub3BDbGllbnRzL3NjaGVtYSc7XG5pbXBvcnQgVG9wSG9sZGluZ3NTY2hlbWEgZnJvbSAnLi9Ub3BIb2xkaW5ncy9zY2hlbWEnOyBcblxuY29uc3QgTGlua1NjaGVtYSA9IGdxbGBcbiAgdHlwZSBRdWVyeSB7XG4gICAgXzogQm9vbGVhbiBcbiAgfVxuXG4gIHR5cGUgTXV0YXRpb24ge1xuICAgIF86IEJvb2xlYW4gXG4gIH1cblxuICB0eXBlIFN1YnNjcmlwdGlvbiB7XG4gICAgXzogQm9vbGVhbiBcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgW1xuICBMaW5rU2NoZW1hLFxuICBBdW1IaXN0b3J5U2NoZW1hLFxuICBUb3BDbGllbnRzU2NoZW1hLFxuICBUb3BIb2xkaW5nc1NjaGVtYSxcbl07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "LinkSchema",
        "gql",
        "AumHistorySchema",
        "TopClientsSchema",
        "TopHoldingsSchema"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAEA,MAAMA,UAAU,GAAGC,wBAAI;;;;;;;;;;;;CAAvB;eAce,CACbD,UADa,EAEbE,eAFa,EAGbC,gBAHa,EAIbC,gBAJa,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nimport AumHistorySchema from './AumHistory/schema';\nimport TopClientsSchema from './TopClients/schema';\nimport TopHoldingsSchema from './TopHoldings/schema'; \n\nconst LinkSchema = gql`\n  type Query {\n    _: Boolean \n  }\n\n  type Mutation {\n    _: Boolean \n  }\n\n  type Subscription {\n    _: Boolean \n  }\n`;\n\nexport default [\n  LinkSchema,\n  AumHistorySchema,\n  TopClientsSchema,\n  TopHoldingsSchema,\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220711466
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nconst schema = _apolloServerExpress.gql`\n  enum AllowedDateRangeType {\n    FIXED\n    CUSTOM\n  }\n\n  enum AllowedDateRange {\n    FIVE_DAYS\n    ONE_MONTH\n    SIX_MONTH\n    YEAR_TO_DATE\n    ONE_YEAR\n    FIVE_YEAR\n  }\n\n  enum AllowedDateIntervalUnit {\n    D\n    M\n    Q\n    S\n    Y\n  }\n\n  extend type Query {\n    aumHistory(\n      dateRangeType: AllowedDateRangeType, \n      dateRange: AllowedDateRange, \n      dateInterval: Int,\n      dateIntervalUnit: AllowedDateIntervalUnit,\n      ): [AdvisorAUM!] \n  }\n\n  type AdvisorAUM {\n    date: String!\n    aumValue: Float!\n    marketChanged: Float!\n    aumPercentage: Float!\n  }\n`;\nvar _default = schema;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLHdCQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQUFuQjtlQXdDZUQsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGV3aXNkYWNrYW0vRG9jdW1lbnRzL2FsdHJ1aXN0LWJhY2tlbmQtZm9yLWZyb250ZW5kL3NyYy9ncmFwaHFsL0F1bUhpc3RvcnkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5jb25zdCBzY2hlbWEgPSBncWxgXG4gIGVudW0gQWxsb3dlZERhdGVSYW5nZVR5cGUge1xuICAgIEZJWEVEXG4gICAgQ1VTVE9NXG4gIH1cblxuICBlbnVtIEFsbG93ZWREYXRlUmFuZ2Uge1xuICAgIEZJVkVfREFZU1xuICAgIE9ORV9NT05USFxuICAgIFNJWF9NT05USFxuICAgIFlFQVJfVE9fREFURVxuICAgIE9ORV9ZRUFSXG4gICAgRklWRV9ZRUFSXG4gIH1cblxuICBlbnVtIEFsbG93ZWREYXRlSW50ZXJ2YWxVbml0IHtcbiAgICBEXG4gICAgTVxuICAgIFFcbiAgICBTXG4gICAgWVxuICB9XG5cbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIGF1bUhpc3RvcnkoXG4gICAgICBkYXRlUmFuZ2VUeXBlOiBBbGxvd2VkRGF0ZVJhbmdlVHlwZSwgXG4gICAgICBkYXRlUmFuZ2U6IEFsbG93ZWREYXRlUmFuZ2UsIFxuICAgICAgZGF0ZUludGVydmFsOiBJbnQsXG4gICAgICBkYXRlSW50ZXJ2YWxVbml0OiBBbGxvd2VkRGF0ZUludGVydmFsVW5pdCxcbiAgICAgICk6IFtBZHZpc29yQVVNIV0gXG4gIH1cblxuICB0eXBlIEFkdmlzb3JBVU0ge1xuICAgIGRhdGU6IFN0cmluZyFcbiAgICBhdW1WYWx1ZTogRmxvYXQhXG4gICAgbWFya2V0Q2hhbmdlZDogRmxvYXQhXG4gICAgYXVtUGVyY2VudGFnZTogRmxvYXQhXG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHNjaGVtYTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,MAAM,GAAGC,wBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnB;eAwCeD,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst schema = gql`\n  enum AllowedDateRangeType {\n    FIXED\n    CUSTOM\n  }\n\n  enum AllowedDateRange {\n    FIVE_DAYS\n    ONE_MONTH\n    SIX_MONTH\n    YEAR_TO_DATE\n    ONE_YEAR\n    FIVE_YEAR\n  }\n\n  enum AllowedDateIntervalUnit {\n    D\n    M\n    Q\n    S\n    Y\n  }\n\n  extend type Query {\n    aumHistory(\n      dateRangeType: AllowedDateRangeType, \n      dateRange: AllowedDateRange, \n      dateInterval: Int,\n      dateIntervalUnit: AllowedDateIntervalUnit,\n      ): [AdvisorAUM!] \n  }\n\n  type AdvisorAUM {\n    date: String!\n    aumValue: Float!\n    marketChanged: Float!\n    aumPercentage: Float!\n  }\n`;\n\nexport default schema;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220199020
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nconst schema = _apolloServerExpress.gql`\n  extend type Query {\n     topClients(sortBy: String, limit: Int, offset: Int): [Client!] \n  }\n\n  type Client {\n    primaryOwnerFirstName: String!\n    primaryOwnerLastName: String!\n    aumValue: Float!\n    aumPercentage: Float!\n  }\n`;\nvar _default = schema;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLHdCQUFJOzs7Ozs7Ozs7OztDQUFuQjtlQWFlRCxNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wQ2xpZW50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmNvbnN0IHNjaGVtYSA9IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgICB0b3BDbGllbnRzKHNvcnRCeTogU3RyaW5nLCBsaW1pdDogSW50LCBvZmZzZXQ6IEludCk6IFtDbGllbnQhXSBcbiAgfVxuXG4gIHR5cGUgQ2xpZW50IHtcbiAgICBwcmltYXJ5T3duZXJGaXJzdE5hbWU6IFN0cmluZyFcbiAgICBwcmltYXJ5T3duZXJMYXN0TmFtZTogU3RyaW5nIVxuICAgIGF1bVZhbHVlOiBGbG9hdCFcbiAgICBhdW1QZXJjZW50YWdlOiBGbG9hdCFcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgc2NoZW1hO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,MAAM,GAAGC,wBAAI;;;;;;;;;;;CAAnB;eAaeD,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst schema = gql`\n  extend type Query {\n     topClients(sortBy: String, limit: Int, offset: Int): [Client!] \n  }\n\n  type Client {\n    primaryOwnerFirstName: String!\n    primaryOwnerLastName: String!\n    aumValue: Float!\n    aumPercentage: Float!\n  }\n`;\n\nexport default schema;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551207570217
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nconst schema = _apolloServerExpress.gql`\n  extend type Query {\n     topHoldings(sortBy:String, limit: Int, offset: Int): [Holding!] \n  }\n\n  type Holding {\n    ticker: String!,\n    securityName: String!,\n    price: Float!,\n    holdingValue: Float!,\n  }\n`;\nvar _default = schema;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLHdCQUFJOzs7Ozs7Ozs7OztDQUFuQjtlQWFlRCxNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wSG9sZGluZ3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5jb25zdCBzY2hlbWEgPSBncWxgXG4gIGV4dGVuZCB0eXBlIFF1ZXJ5IHtcbiAgICAgdG9wSG9sZGluZ3Moc29ydEJ5OlN0cmluZywgbGltaXQ6IEludCwgb2Zmc2V0OiBJbnQpOiBbSG9sZGluZyFdIFxuICB9XG5cbiAgdHlwZSBIb2xkaW5nIHtcbiAgICB0aWNrZXI6IFN0cmluZyEsXG4gICAgc2VjdXJpdHlOYW1lOiBTdHJpbmchLFxuICAgIHByaWNlOiBGbG9hdCEsXG4gICAgaG9sZGluZ1ZhbHVlOiBGbG9hdCEsXG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHNjaGVtYTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,MAAM,GAAGC,wBAAI;;;;;;;;;;;CAAnB;eAaeD,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst schema = gql`\n  extend type Query {\n     topHoldings(sortBy:String, limit: Int, offset: Int): [Holding!] \n  }\n\n  type Holding {\n    ticker: String!,\n    securityName: String!,\n    price: Float!,\n    holdingValue: Float!,\n  }\n`;\n\nexport default schema;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551207583313
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _resolvers = _interopRequireDefault(require(\"./AumHistory/resolvers.js\"));\n\nvar _resolvers2 = _interopRequireDefault(require(\"./TopClients/resolvers\"));\n\nvar _resolvers3 = _interopRequireDefault(require(\"./TopHoldings/resolvers.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = [_resolvers.default, _resolvers2.default, _resolvers3.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJhdW1IaXN0b3J5UmVzb2x2ZXJzIiwidG9wQ2xpZW50c1Jlc29sdmVycyIsInRvcEhvbGRpbmdzUmVzb2x2ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7ZUFFZSxDQUNiQSxrQkFEYSxFQUViQyxtQkFGYSxFQUdiQyxtQkFIYSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXVtSGlzdG9yeVJlc29sdmVycyBmcm9tICcuL0F1bUhpc3RvcnkvcmVzb2x2ZXJzLmpzJztcbmltcG9ydCB0b3BDbGllbnRzUmVzb2x2ZXJzIGZyb20gJy4vVG9wQ2xpZW50cy9yZXNvbHZlcnMnO1xuaW1wb3J0IHRvcEhvbGRpbmdzUmVzb2x2ZXJzIGZyb20gJy4vVG9wSG9sZGluZ3MvcmVzb2x2ZXJzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgW1xuICBhdW1IaXN0b3J5UmVzb2x2ZXJzLFxuICB0b3BDbGllbnRzUmVzb2x2ZXJzLFxuICB0b3BIb2xkaW5nc1Jlc29sdmVycyxcbl07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "aumHistoryResolvers",
        "topClientsResolvers",
        "topHoldingsResolvers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;eAEe,CACbA,kBADa,EAEbC,mBAFa,EAGbC,mBAHa,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "import aumHistoryResolvers from './AumHistory/resolvers.js';\nimport topClientsResolvers from './TopClients/resolvers';\nimport topHoldingsResolvers from './TopHoldings/resolvers.js';\n\nexport default [\n  aumHistoryResolvers,\n  topClientsResolvers,\n  topHoldingsResolvers,\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220731892
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst resolvers = {\n  AllowedDateRangeType: {\n    FIXED: 'fixed',\n    CUSTOM: 'custom'\n  },\n  AllowedDateRange: {\n    FIVE_DAYS: '5D',\n    ONE_MONTH: '1M',\n    SIX_MONTH: '6M',\n    YEAR_TO_DATE: 'YTD',\n    // refers to the period beginning the first day of the current calendar year up to the current date\n    ONE_YEAR: '1Y',\n    FIVE_YEAR: '5Y'\n  },\n  Query: {\n    // args: dateRangeType, dateRange, dateIntervalUnit, dateInterval\n    aumHistory: async (parent, args, {\n      dataSources: {\n        AumHistoryAPI\n      },\n      token\n    }) => {\n      const data = await AumHistoryAPI.GET(args, token);\n      console.log(\"here we go\", data);\n      return data.map(client => client);\n    }\n  }\n};\nvar _default = resolvers;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlcnMiLCJBbGxvd2VkRGF0ZVJhbmdlVHlwZSIsIkZJWEVEIiwiQ1VTVE9NIiwiQWxsb3dlZERhdGVSYW5nZSIsIkZJVkVfREFZUyIsIk9ORV9NT05USCIsIlNJWF9NT05USCIsIllFQVJfVE9fREFURSIsIk9ORV9ZRUFSIiwiRklWRV9ZRUFSIiwiUXVlcnkiLCJhdW1IaXN0b3J5IiwicGFyZW50IiwiYXJncyIsImRhdGFTb3VyY2VzIiwiQXVtSGlzdG9yeUFQSSIsInRva2VuIiwiZGF0YSIsIkdFVCIsImNvbnNvbGUiLCJsb2ciLCJtYXAiLCJjbGllbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsb0JBQW9CLEVBQUU7QUFDcEJDLElBQUFBLEtBQUssRUFBRSxPQURhO0FBRXBCQyxJQUFBQSxNQUFNLEVBQUU7QUFGWSxHQUROO0FBS2hCQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNoQkMsSUFBQUEsU0FBUyxFQUFFLElBREs7QUFFaEJDLElBQUFBLFNBQVMsRUFBRSxJQUZLO0FBR2hCQyxJQUFBQSxTQUFTLEVBQUUsSUFISztBQUloQkMsSUFBQUEsWUFBWSxFQUFFLEtBSkU7QUFJSztBQUNyQkMsSUFBQUEsUUFBUSxFQUFFLElBTE07QUFNaEJDLElBQUFBLFNBQVMsRUFBRTtBQU5LLEdBTEY7QUFhaEJDLEVBQUFBLEtBQUssRUFBRTtBQUNMO0FBQ0FDLElBQUFBLFVBQVUsRUFBRSxPQUFPQyxNQUFQLEVBQWVDLElBQWYsRUFBcUI7QUFBRUMsTUFBQUEsV0FBVyxFQUFFO0FBQUVDLFFBQUFBO0FBQUYsT0FBZjtBQUFrQ0MsTUFBQUE7QUFBbEMsS0FBckIsS0FBbUU7QUFDN0UsWUFBTUMsSUFBSSxHQUFHLE1BQU1GLGFBQWEsQ0FBQ0csR0FBZCxDQUFrQkwsSUFBbEIsRUFBd0JHLEtBQXhCLENBQW5CO0FBQ0FHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVosRUFBMEJILElBQTFCO0FBQ0EsYUFBT0EsSUFBSSxDQUFDSSxHQUFMLENBQVNDLE1BQU0sSUFBSUEsTUFBbkIsQ0FBUDtBQUNEO0FBTkk7QUFiUyxDQUFsQjtlQXVCZXZCLFMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbC9BdW1IaXN0b3J5Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmVzb2x2ZXJzID0ge1xuICBBbGxvd2VkRGF0ZVJhbmdlVHlwZToge1xuICAgIEZJWEVEOiAnZml4ZWQnLFxuICAgIENVU1RPTTogJ2N1c3RvbScsXG4gIH0sXG4gIEFsbG93ZWREYXRlUmFuZ2U6IHtcbiAgICBGSVZFX0RBWVM6ICc1RCcsXG4gICAgT05FX01PTlRIOiAnMU0nLFxuICAgIFNJWF9NT05USDogJzZNJyxcbiAgICBZRUFSX1RPX0RBVEU6ICdZVEQnLCAvLyByZWZlcnMgdG8gdGhlIHBlcmlvZCBiZWdpbm5pbmcgdGhlIGZpcnN0IGRheSBvZiB0aGUgY3VycmVudCBjYWxlbmRhciB5ZWFyIHVwIHRvIHRoZSBjdXJyZW50IGRhdGVcbiAgICBPTkVfWUVBUjogJzFZJyxcbiAgICBGSVZFX1lFQVI6ICc1WScsXG4gIH0sXG4gIFF1ZXJ5OiB7XG4gICAgLy8gYXJnczogZGF0ZVJhbmdlVHlwZSwgZGF0ZVJhbmdlLCBkYXRlSW50ZXJ2YWxVbml0LCBkYXRlSW50ZXJ2YWxcbiAgICBhdW1IaXN0b3J5OiBhc3luYyAocGFyZW50LCBhcmdzLCB7IGRhdGFTb3VyY2VzOiB7IEF1bUhpc3RvcnlBUEkgfSwgdG9rZW4gfSkgPT4ge1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IEF1bUhpc3RvcnlBUEkuR0VUKGFyZ3MsIHRva2VuKTsgXG4gICAgICBjb25zb2xlLmxvZyhcImhlcmUgd2UgZ29cIiwgZGF0YSk7XG4gICAgICByZXR1cm4gZGF0YS5tYXAoY2xpZW50ID0+IGNsaWVudCk7XG4gICAgfSBcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZXJzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "AllowedDateRangeType",
        "FIXED",
        "CUSTOM",
        "AllowedDateRange",
        "FIVE_DAYS",
        "ONE_MONTH",
        "SIX_MONTH",
        "YEAR_TO_DATE",
        "ONE_YEAR",
        "FIVE_YEAR",
        "Query",
        "aumHistory",
        "parent",
        "args",
        "dataSources",
        "AumHistoryAPI",
        "token",
        "data",
        "GET",
        "console",
        "log",
        "map",
        "client"
      ],
      "mappings": ";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,KAAK,EAAE,OADa;AAEpBC,IAAAA,MAAM,EAAE;AAFY,GADN;AAKhBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,IADK;AAEhBC,IAAAA,SAAS,EAAE,IAFK;AAGhBC,IAAAA,SAAS,EAAE,IAHK;AAIhBC,IAAAA,YAAY,EAAE,KAJE;AAIK;AACrBC,IAAAA,QAAQ,EAAE,IALM;AAMhBC,IAAAA,SAAS,EAAE;AANK,GALF;AAahBC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,UAAU,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqB;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA;AAAF,OAAf;AAAkCC,MAAAA;AAAlC,KAArB,KAAmE;AAC7E,YAAMC,IAAI,GAAG,MAAMF,aAAa,CAACG,GAAd,CAAkBL,IAAlB,EAAwBG,KAAxB,CAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;AACA,aAAOA,IAAI,CAACI,GAAL,CAASC,MAAM,IAAIA,MAAnB,CAAP;AACD;AANI;AAbS,CAAlB;eAuBevB,S",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "sourcesContent": [
        "const resolvers = {\n  AllowedDateRangeType: {\n    FIXED: 'fixed',\n    CUSTOM: 'custom',\n  },\n  AllowedDateRange: {\n    FIVE_DAYS: '5D',\n    ONE_MONTH: '1M',\n    SIX_MONTH: '6M',\n    YEAR_TO_DATE: 'YTD', // refers to the period beginning the first day of the current calendar year up to the current date\n    ONE_YEAR: '1Y',\n    FIVE_YEAR: '5Y',\n  },\n  Query: {\n    // args: dateRangeType, dateRange, dateIntervalUnit, dateInterval\n    aumHistory: async (parent, args, { dataSources: { AumHistoryAPI }, token }) => {\n      const data = await AumHistoryAPI.GET(args, token); \n      console.log(\"here we go\", data);\n      return data.map(client => client);\n    } \n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220796427
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nconst mergeObjectWithSameId = (firstArray, secondArray) => Object.values(firstArray.concat(secondArray).reduce((acc, next) => {\n  acc[next.userAccount] = Object.assign(acc[next.userAccount] || {}, next);\n  return acc;\n}, {}));\n\nconst resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topClients: async (parent, args, {\n      dataSources: {\n        topClientsAPI,\n        usersAPI\n      },\n      userID,\n      token\n    }) => {\n      const topClients = await topClientsAPI.GET(args, token);\n      const users = await usersAPI.GET(userID); // i need the names first name\n\n      const mergedResponses = mergeObjectWithSameId(topClients, users);\n      return mergedResponses.map(client => client);\n    }\n  }\n};\nvar _default = resolvers;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJtZXJnZU9iamVjdFdpdGhTYW1lSWQiLCJmaXJzdEFycmF5Iiwic2Vjb25kQXJyYXkiLCJPYmplY3QiLCJ2YWx1ZXMiLCJjb25jYXQiLCJyZWR1Y2UiLCJhY2MiLCJuZXh0IiwidXNlckFjY291bnQiLCJhc3NpZ24iLCJyZXNvbHZlcnMiLCJRdWVyeSIsInRvcENsaWVudHMiLCJwYXJlbnQiLCJhcmdzIiwiZGF0YVNvdXJjZXMiLCJ0b3BDbGllbnRzQVBJIiwidXNlcnNBUEkiLCJ1c2VySUQiLCJ0b2tlbiIsIkdFVCIsInVzZXJzIiwibWVyZ2VkUmVzcG9uc2VzIiwibWFwIiwiY2xpZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEscUJBQXFCLEdBQUcsQ0FBQ0MsVUFBRCxFQUFhQyxXQUFiLEtBQzVCQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsVUFBVSxDQUFDSSxNQUFYLENBQWtCSCxXQUFsQixFQUErQkksTUFBL0IsQ0FBc0MsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDakVELEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxXQUFOLENBQUgsR0FBd0JOLE1BQU0sQ0FBQ08sTUFBUCxDQUFjSCxHQUFHLENBQUNDLElBQUksQ0FBQ0MsV0FBTixDQUFILElBQXlCLEVBQXZDLEVBQTJDRCxJQUEzQyxDQUF4QjtBQUNBLFNBQU9ELEdBQVA7QUFDRCxDQUhhLEVBR1gsRUFIVyxDQUFkLENBREY7O0FBTUEsTUFBTUksU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTDtBQUNBQyxJQUFBQSxVQUFVLEVBQUUsT0FDVkMsTUFEVSxFQUNGQyxJQURFLEVBQ0k7QUFBRUMsTUFBQUEsV0FBVyxFQUFFO0FBQUVDLFFBQUFBLGFBQUY7QUFBaUJDLFFBQUFBO0FBQWpCLE9BQWY7QUFBMkNDLE1BQUFBLE1BQTNDO0FBQW1EQyxNQUFBQTtBQUFuRCxLQURKLEtBQ2tFO0FBQzFFLFlBQU1QLFVBQVUsR0FBRyxNQUFNSSxhQUFhLENBQUNJLEdBQWQsQ0FBa0JOLElBQWxCLEVBQXdCSyxLQUF4QixDQUF6QjtBQUNBLFlBQU1FLEtBQUssR0FBRyxNQUFNSixRQUFRLENBQUNHLEdBQVQsQ0FBYUYsTUFBYixDQUFwQixDQUYwRSxDQUVoQzs7QUFDMUMsWUFBTUksZUFBZSxHQUFHdkIscUJBQXFCLENBQUNhLFVBQUQsRUFBYVMsS0FBYixDQUE3QztBQUNBLGFBQU9DLGVBQWUsQ0FBQ0MsR0FBaEIsQ0FBb0JDLE1BQU0sSUFBSUEsTUFBOUIsQ0FBUDtBQUNEO0FBUkU7QUFEUyxDQUFsQjtlQWFlZCxTIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wQ2xpZW50cyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1lcmdlT2JqZWN0V2l0aFNhbWVJZCA9IChmaXJzdEFycmF5LCBzZWNvbmRBcnJheSkgPT4gXG4gIE9iamVjdC52YWx1ZXMoZmlyc3RBcnJheS5jb25jYXQoc2Vjb25kQXJyYXkpLnJlZHVjZSgoYWNjLCBuZXh0KSA9PiB7XG4gICAgYWNjW25leHQudXNlckFjY291bnRdID0gT2JqZWN0LmFzc2lnbihhY2NbbmV4dC51c2VyQWNjb3VudF0gfHwge30sIG5leHQpOyBcbiAgICByZXR1cm4gYWNjXG4gIH0sIHt9KSk7XG5cbmNvbnN0IHJlc29sdmVycyA9IHtcbiAgUXVlcnk6IHtcbiAgICAvLyBhcmdzOiBzb3J0QnksIGxpbWl0LCBvZmZzZXRcbiAgICB0b3BDbGllbnRzOiBhc3luYyAoXG4gICAgICBwYXJlbnQsIGFyZ3MsIHsgZGF0YVNvdXJjZXM6IHsgdG9wQ2xpZW50c0FQSSwgdXNlcnNBUEl9LCB1c2VySUQsIHRva2VufSkgPT4ge1xuICAgICAgICBjb25zdCB0b3BDbGllbnRzID0gYXdhaXQgdG9wQ2xpZW50c0FQSS5HRVQoYXJncywgdG9rZW4pOyBcbiAgICAgICAgY29uc3QgdXNlcnMgPSBhd2FpdCB1c2Vyc0FQSS5HRVQodXNlcklEKTsgLy8gaSBuZWVkIHRoZSBuYW1lcyBmaXJzdCBuYW1lXG4gICAgICAgIGNvbnN0IG1lcmdlZFJlc3BvbnNlcyA9IG1lcmdlT2JqZWN0V2l0aFNhbWVJZCh0b3BDbGllbnRzLCB1c2Vycyk7IFxuICAgICAgICByZXR1cm4gbWVyZ2VkUmVzcG9uc2VzLm1hcChjbGllbnQgPT4gY2xpZW50KTtcbiAgICAgIH0gXG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVycztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "mergeObjectWithSameId",
        "firstArray",
        "secondArray",
        "Object",
        "values",
        "concat",
        "reduce",
        "acc",
        "next",
        "userAccount",
        "assign",
        "resolvers",
        "Query",
        "topClients",
        "parent",
        "args",
        "dataSources",
        "topClientsAPI",
        "usersAPI",
        "userID",
        "token",
        "GET",
        "users",
        "mergedResponses",
        "map",
        "client"
      ],
      "mappings": ";;;;;;;AAAA,MAAMA,qBAAqB,GAAG,CAACC,UAAD,EAAaC,WAAb,KAC5BC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACI,MAAX,CAAkBH,WAAlB,EAA+BI,MAA/B,CAAsC,CAACC,GAAD,EAAMC,IAAN,KAAe;AACjED,EAAAA,GAAG,CAACC,IAAI,CAACC,WAAN,CAAH,GAAwBN,MAAM,CAACO,MAAP,CAAcH,GAAG,CAACC,IAAI,CAACC,WAAN,CAAH,IAAyB,EAAvC,EAA2CD,IAA3C,CAAxB;AACA,SAAOD,GAAP;AACD,CAHa,EAGX,EAHW,CAAd,CADF;;AAMA,MAAMI,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,UAAU,EAAE,OACVC,MADU,EACFC,IADE,EACI;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,OAAf;AAA2CC,MAAAA,MAA3C;AAAmDC,MAAAA;AAAnD,KADJ,KACkE;AAC1E,YAAMP,UAAU,GAAG,MAAMI,aAAa,CAACI,GAAd,CAAkBN,IAAlB,EAAwBK,KAAxB,CAAzB;AACA,YAAME,KAAK,GAAG,MAAMJ,QAAQ,CAACG,GAAT,CAAaF,MAAb,CAApB,CAF0E,CAEhC;;AAC1C,YAAMI,eAAe,GAAGvB,qBAAqB,CAACa,UAAD,EAAaS,KAAb,CAA7C;AACA,aAAOC,eAAe,CAACC,GAAhB,CAAoBC,MAAM,IAAIA,MAA9B,CAAP;AACD;AARE;AADS,CAAlB;eAaed,S",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "sourcesContent": [
        "const mergeObjectWithSameId = (firstArray, secondArray) => \n  Object.values(firstArray.concat(secondArray).reduce((acc, next) => {\n    acc[next.userAccount] = Object.assign(acc[next.userAccount] || {}, next); \n    return acc\n  }, {}));\n\nconst resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topClients: async (\n      parent, args, { dataSources: { topClientsAPI, usersAPI}, userID, token}) => {\n        const topClients = await topClientsAPI.GET(args, token); \n        const users = await usersAPI.GET(userID); // i need the names first name\n        const mergedResponses = mergeObjectWithSameId(topClients, users); \n        return mergedResponses.map(client => client);\n      } \n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218318996
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topHoldings: async (parent, args, {\n      dataSources: {\n        topHoldingsAPI\n      },\n      token\n    }) => {\n      const data = await topHoldingsAPI.GET(args, token);\n      return data.map(client => client);\n    }\n  }\n};\nvar _default = resolvers;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlcnMiLCJRdWVyeSIsInRvcEhvbGRpbmdzIiwicGFyZW50IiwiYXJncyIsImRhdGFTb3VyY2VzIiwidG9wSG9sZGluZ3NBUEkiLCJ0b2tlbiIsImRhdGEiLCJHRVQiLCJtYXAiLCJjbGllbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0w7QUFDQUMsSUFBQUEsV0FBVyxFQUFFLE9BQU9DLE1BQVAsRUFBZUMsSUFBZixFQUFxQjtBQUFFQyxNQUFBQSxXQUFXLEVBQUU7QUFBRUMsUUFBQUE7QUFBRixPQUFmO0FBQW1DQyxNQUFBQTtBQUFuQyxLQUFyQixLQUFvRTtBQUMvRSxZQUFNQyxJQUFJLEdBQUcsTUFBTUYsY0FBYyxDQUFDRyxHQUFmLENBQW1CTCxJQUFuQixFQUF5QkcsS0FBekIsQ0FBbkI7QUFDQSxhQUFPQyxJQUFJLENBQUNFLEdBQUwsQ0FBU0MsTUFBTSxJQUFJQSxNQUFuQixDQUFQO0FBQ0Q7QUFMSTtBQURTLENBQWxCO2VBVWVYLFMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbC9Ub3BIb2xkaW5ncyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlc29sdmVycyA9IHtcbiAgUXVlcnk6IHtcbiAgICAvLyBhcmdzOiBzb3J0QnksIGxpbWl0LCBvZmZzZXRcbiAgICB0b3BIb2xkaW5nczogYXN5bmMgKHBhcmVudCwgYXJncywgeyBkYXRhU291cmNlczogeyB0b3BIb2xkaW5nc0FQSSB9LCB0b2tlbiB9KSA9PiB7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgdG9wSG9sZGluZ3NBUEkuR0VUKGFyZ3MsIHRva2VuKTsgXG4gICAgICByZXR1cm4gZGF0YS5tYXAoY2xpZW50ID0+IGNsaWVudCk7XG4gICAgfSBcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZXJzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "topHoldings",
        "parent",
        "args",
        "dataSources",
        "topHoldingsAPI",
        "token",
        "data",
        "GET",
        "map",
        "client"
      ],
      "mappings": ";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,WAAW,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqB;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA;AAAF,OAAf;AAAmCC,MAAAA;AAAnC,KAArB,KAAoE;AAC/E,YAAMC,IAAI,GAAG,MAAMF,cAAc,CAACG,GAAf,CAAmBL,IAAnB,EAAyBG,KAAzB,CAAnB;AACA,aAAOC,IAAI,CAACE,GAAL,CAASC,MAAM,IAAIA,MAAnB,CAAP;AACD;AALI;AADS,CAAlB;eAUeX,S",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "sourcesContent": [
        "const resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topHoldings: async (parent, args, { dataSources: { topHoldingsAPI }, token }) => {\n      const data = await topHoldingsAPI.GET(args, token); \n      return data.map(client => client);\n    } \n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218350687
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _api = _interopRequireDefault(require(\"./AumHistory/api\"));\n\nvar _api2 = _interopRequireDefault(require(\"./TopClients/api\"));\n\nvar _api3 = _interopRequireDefault(require(\"./TopHoldings/api\"));\n\nvar _api4 = _interopRequireDefault(require(\"./Users/api\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  AumHistoryAPI: new _api.default(),\n  topClientsAPI: new _api2.default(),\n  topHoldingsAPI: new _api3.default(),\n  usersAPI: new _api4.default()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJBdW1IaXN0b3J5QVBJIiwidG9wQ2xpZW50c0FQSSIsIlRvcENsaWVudHNBUEkiLCJ0b3BIb2xkaW5nc0FQSSIsIlRvcEhvbGRpbmdzQVBJIiwidXNlcnNBUEkiLCJVc2Vyc0FQSSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O2VBRWU7QUFDYkEsRUFBQUEsYUFBYSxFQUFFLElBQUlBLFlBQUosRUFERjtBQUViQyxFQUFBQSxhQUFhLEVBQUUsSUFBSUMsYUFBSixFQUZGO0FBR2JDLEVBQUFBLGNBQWMsRUFBRSxJQUFJQyxhQUFKLEVBSEg7QUFJYkMsRUFBQUEsUUFBUSxFQUFFLElBQUlDLGFBQUo7QUFKRyxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXVtSGlzdG9yeUFQSSBmcm9tICcuL0F1bUhpc3RvcnkvYXBpJztcbmltcG9ydCBUb3BDbGllbnRzQVBJIGZyb20gJy4vVG9wQ2xpZW50cy9hcGknO1xuaW1wb3J0IFRvcEhvbGRpbmdzQVBJIGZyb20gJy4vVG9wSG9sZGluZ3MvYXBpJztcbmltcG9ydCBVc2Vyc0FQSSBmcm9tICcuL1VzZXJzL2FwaSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgQXVtSGlzdG9yeUFQSTogbmV3IEF1bUhpc3RvcnlBUEksXG4gIHRvcENsaWVudHNBUEk6IG5ldyBUb3BDbGllbnRzQVBJLFxuICB0b3BIb2xkaW5nc0FQSTogbmV3IFRvcEhvbGRpbmdzQVBJLFxuICB1c2Vyc0FQSTogbmV3IFVzZXJzQVBJXG59O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "AumHistoryAPI",
        "topClientsAPI",
        "TopClientsAPI",
        "topHoldingsAPI",
        "TopHoldingsAPI",
        "usersAPI",
        "UsersAPI"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;eAEe;AACbA,EAAAA,aAAa,EAAE,IAAIA,YAAJ,EADF;AAEbC,EAAAA,aAAa,EAAE,IAAIC,aAAJ,EAFF;AAGbC,EAAAA,cAAc,EAAE,IAAIC,aAAJ,EAHH;AAIbC,EAAAA,QAAQ,EAAE,IAAIC,aAAJ;AAJG,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "import AumHistoryAPI from './AumHistory/api';\nimport TopClientsAPI from './TopClients/api';\nimport TopHoldingsAPI from './TopHoldings/api';\nimport UsersAPI from './Users/api';\n\nexport default {\n  AumHistoryAPI: new AumHistoryAPI,\n  topClientsAPI: new TopClientsAPI,\n  topHoldingsAPI: new TopHoldingsAPI,\n  usersAPI: new UsersAPI\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218842805
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass AUMHistoryAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const {\n      dateRangeType,\n      dateRange,\n      dateIntervalUnit,\n      dateInterval\n    } = args;\n    return this.post('advisor-aum', // path\n    {\n      dateRangeType: dateRangeType || 'fixed',\n      dateRange: dateRange || '5D',\n      dateInterval: dateInterval || 0,\n      dateIntervalUnit: dateIntervalUnit || 'D'\n    } // request body\n    );\n  }\n\n}\n\nexports.default = AUMHistoryAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJBVU1IaXN0b3J5QVBJIiwiUkVTVERhdGFTb3VyY2UiLCJiYXNlVVJMIiwiY29udGV4dCIsImVudiIsIkdFVCIsImFyZ3MiLCJ0b2tlbiIsImRhdGVSYW5nZVR5cGUiLCJkYXRlUmFuZ2UiLCJkYXRlSW50ZXJ2YWxVbml0IiwiZGF0ZUludGVydmFsIiwicG9zdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVlLE1BQU1BLGFBQU4sU0FBNEJDLG9DQUE1QixDQUEyQztBQUN4RCxNQUFJQyxPQUFKLEdBQWM7QUFDWixXQUFRLEdBQUUsS0FBS0MsT0FBTCxDQUFhQyxHQUFJLGdCQUEzQjtBQUNEOztBQUVELFFBQU1DLEdBQU4sQ0FBVUMsSUFBVixFQUFnQkMsS0FBaEIsRUFBdUI7QUFDckIsVUFBTTtBQUNKQyxNQUFBQSxhQURJO0FBRUpDLE1BQUFBLFNBRkk7QUFHSkMsTUFBQUEsZ0JBSEk7QUFJSkMsTUFBQUE7QUFKSSxRQUtGTCxJQUxKO0FBTUEsV0FBTyxLQUFLTSxJQUFMLENBQ04sYUFETSxFQUNTO0FBQ2Q7QUFDRUosTUFBQUEsYUFBYSxFQUFFQSxhQUFhLElBQUksT0FEbEM7QUFFRUMsTUFBQUEsU0FBUyxFQUFFQSxTQUFTLElBQUksSUFGMUI7QUFHRUUsTUFBQUEsWUFBWSxFQUFFQSxZQUFZLElBQUksQ0FIaEM7QUFJRUQsTUFBQUEsZ0JBQWdCLEVBQUVBLGdCQUFnQixJQUFJO0FBSnhDLEtBRkssQ0FPRjtBQVBFLEtBQVA7QUFTRDs7QUFyQnVEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvQXVtSGlzdG9yeSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJFU1REYXRhU291cmNlIH0gZnJvbSAnYXBvbGxvLWRhdGFzb3VyY2UtcmVzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFVTUhpc3RvcnlBUEkgZXh0ZW5kcyBSRVNURGF0YVNvdXJjZSB7XG4gIGdldCBiYXNlVVJMKCkge1xuICAgIHJldHVybiBgJHt0aGlzLmNvbnRleHQuZW52fS9hcGkvYW5hbHl0aWMvYDtcbiAgfVxuXG4gIGFzeW5jIEdFVChhcmdzLCB0b2tlbikge1xuICAgIGNvbnN0IHsgXG4gICAgICBkYXRlUmFuZ2VUeXBlLCBcbiAgICAgIGRhdGVSYW5nZSwgXG4gICAgICBkYXRlSW50ZXJ2YWxVbml0LCBcbiAgICAgIGRhdGVJbnRlcnZhbCBcbiAgICB9ID0gYXJncztcbiAgICByZXR1cm4gdGhpcy5wb3N0KFxuICAgICAnYWR2aXNvci1hdW0nLCAvLyBwYXRoXG4gICAgICB7XG4gICAgICAgIGRhdGVSYW5nZVR5cGU6IGRhdGVSYW5nZVR5cGUgfHwgJ2ZpeGVkJyxcbiAgICAgICAgZGF0ZVJhbmdlOiBkYXRlUmFuZ2UgfHwgJzVEJyxcbiAgICAgICAgZGF0ZUludGVydmFsOiBkYXRlSW50ZXJ2YWwgfHwgMCxcbiAgICAgICAgZGF0ZUludGVydmFsVW5pdDogZGF0ZUludGVydmFsVW5pdCB8fCAnRCdcbiAgICAgIH0sIC8vIHJlcXVlc3QgYm9keVxuICAgICk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "AUMHistoryAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "args",
        "token",
        "dateRangeType",
        "dateRange",
        "dateIntervalUnit",
        "dateInterval",
        "post"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,aAAN,SAA4BC,oCAA5B,CAA2C;AACxD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrB,UAAM;AACJC,MAAAA,aADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFL,IALJ;AAMA,WAAO,KAAKM,IAAL,CACN,aADM,EACS;AACd;AACEJ,MAAAA,aAAa,EAAEA,aAAa,IAAI,OADlC;AAEEC,MAAAA,SAAS,EAAEA,SAAS,IAAI,IAF1B;AAGEE,MAAAA,YAAY,EAAEA,YAAY,IAAI,CAHhC;AAIED,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAI;AAJxC,KAFK,CAOF;AAPE,KAAP;AASD;;AArBuD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class AUMHistoryAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const { \n      dateRangeType, \n      dateRange, \n      dateIntervalUnit, \n      dateInterval \n    } = args;\n    return this.post(\n     'advisor-aum', // path\n      {\n        dateRangeType: dateRangeType || 'fixed',\n        dateRange: dateRange || '5D',\n        dateInterval: dateInterval || 0,\n        dateIntervalUnit: dateIntervalUnit || 'D'\n      }, // request body\n    );\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218223759
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass TopClientsAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const {\n      limit,\n      sortBy,\n      offset\n    } = args;\n    return this.post('top-clients', // path\n    {\n      sortMethod: sortBy || 'aumValue',\n      resultLimit: limit || 5,\n      offset: offset || 0\n    } // request body\n    );\n  }\n\n}\n\nexports.default = TopClientsAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJUb3BDbGllbnRzQVBJIiwiUkVTVERhdGFTb3VyY2UiLCJiYXNlVVJMIiwiY29udGV4dCIsImVudiIsIkdFVCIsImFyZ3MiLCJ0b2tlbiIsImxpbWl0Iiwic29ydEJ5Iiwib2Zmc2V0IiwicG9zdCIsInNvcnRNZXRob2QiLCJyZXN1bHRMaW1pdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVlLE1BQU1BLGFBQU4sU0FBNEJDLG9DQUE1QixDQUEyQztBQUN4RCxNQUFJQyxPQUFKLEdBQWM7QUFDWixXQUFRLEdBQUUsS0FBS0MsT0FBTCxDQUFhQyxHQUFJLGdCQUEzQjtBQUNEOztBQUVELFFBQU1DLEdBQU4sQ0FBVUMsSUFBVixFQUFnQkMsS0FBaEIsRUFBdUI7QUFDckIsVUFBTTtBQUFFQyxNQUFBQSxLQUFGO0FBQVNDLE1BQUFBLE1BQVQ7QUFBaUJDLE1BQUFBO0FBQWpCLFFBQTRCSixJQUFsQztBQUNBLFdBQU8sS0FBS0ssSUFBTCxDQUNOLGFBRE0sRUFDUztBQUNkO0FBQ0VDLE1BQUFBLFVBQVUsRUFBRUgsTUFBTSxJQUFJLFVBRHhCO0FBRUVJLE1BQUFBLFdBQVcsRUFBRUwsS0FBSyxJQUFJLENBRnhCO0FBR0VFLE1BQUFBLE1BQU0sRUFBRUEsTUFBTSxJQUFJO0FBSHBCLEtBRkssQ0FNRjtBQU5FLEtBQVA7QUFRRDs7QUFmdUQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbC9Ub3BDbGllbnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUkVTVERhdGFTb3VyY2UgfSBmcm9tICdhcG9sbG8tZGF0YXNvdXJjZS1yZXN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9wQ2xpZW50c0FQSSBleHRlbmRzIFJFU1REYXRhU291cmNlIHtcbiAgZ2V0IGJhc2VVUkwoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29udGV4dC5lbnZ9L2FwaS9hbmFseXRpYy9gO1xuICB9XG5cbiAgYXN5bmMgR0VUKGFyZ3MsIHRva2VuKSB7XG4gICAgY29uc3QgeyBsaW1pdCwgc29ydEJ5LCBvZmZzZXQgfSA9IGFyZ3M7XG4gICAgcmV0dXJuIHRoaXMucG9zdChcbiAgICAgJ3RvcC1jbGllbnRzJywgLy8gcGF0aFxuICAgICAge1xuICAgICAgICBzb3J0TWV0aG9kOiBzb3J0QnkgfHwgJ2F1bVZhbHVlJyxcbiAgICAgICAgcmVzdWx0TGltaXQ6IGxpbWl0IHx8IDUsXG4gICAgICAgIG9mZnNldDogb2Zmc2V0IHx8IDAsXG4gICAgICB9LCAvLyByZXF1ZXN0IGJvZHlcbiAgICApO1xuICB9XG59XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "TopClientsAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "args",
        "token",
        "limit",
        "sortBy",
        "offset",
        "post",
        "sortMethod",
        "resultLimit"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,aAAN,SAA4BC,oCAA5B,CAA2C;AACxD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,QAA4BJ,IAAlC;AACA,WAAO,KAAKK,IAAL,CACN,aADM,EACS;AACd;AACEC,MAAAA,UAAU,EAAEH,MAAM,IAAI,UADxB;AAEEI,MAAAA,WAAW,EAAEL,KAAK,IAAI,CAFxB;AAGEE,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAHpB,KAFK,CAMF;AANE,KAAP;AAQD;;AAfuD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class TopClientsAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const { limit, sortBy, offset } = args;\n    return this.post(\n     'top-clients', // path\n      {\n        sortMethod: sortBy || 'aumValue',\n        resultLimit: limit || 5,\n        offset: offset || 0,\n      }, // request body\n    );\n  }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218283923
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass TopHoldingsAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const {\n      limit,\n      sortBy,\n      offset\n    } = args;\n    return this.post('top-holdings', // path\n    {\n      sortMethod: sortBy || 'securityName',\n      resultLimit: limit || 5,\n      offset: offset || 0\n    } // request body\n    );\n  }\n\n}\n\nexports.default = TopHoldingsAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJUb3BIb2xkaW5nc0FQSSIsIlJFU1REYXRhU291cmNlIiwiYmFzZVVSTCIsImNvbnRleHQiLCJlbnYiLCJHRVQiLCJhcmdzIiwidG9rZW4iLCJsaW1pdCIsInNvcnRCeSIsIm9mZnNldCIsInBvc3QiLCJzb3J0TWV0aG9kIiwicmVzdWx0TGltaXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFZSxNQUFNQSxjQUFOLFNBQTZCQyxvQ0FBN0IsQ0FBNEM7QUFDekQsTUFBSUMsT0FBSixHQUFjO0FBQ1osV0FBUSxHQUFFLEtBQUtDLE9BQUwsQ0FBYUMsR0FBSSxnQkFBM0I7QUFDRDs7QUFFRCxRQUFNQyxHQUFOLENBQVVDLElBQVYsRUFBZ0JDLEtBQWhCLEVBQXVCO0FBQ3JCLFVBQU07QUFBRUMsTUFBQUEsS0FBRjtBQUFTQyxNQUFBQSxNQUFUO0FBQWlCQyxNQUFBQTtBQUFqQixRQUE0QkosSUFBbEM7QUFDQSxXQUFPLEtBQUtLLElBQUwsQ0FDTixjQURNLEVBQ1U7QUFDZjtBQUNFQyxNQUFBQSxVQUFVLEVBQUVILE1BQU0sSUFBSSxjQUR4QjtBQUVFSSxNQUFBQSxXQUFXLEVBQUVMLEtBQUssSUFBSSxDQUZ4QjtBQUdFRSxNQUFBQSxNQUFNLEVBQUVBLE1BQU0sSUFBSTtBQUhwQixLQUZLLENBTUY7QUFORSxLQUFQO0FBUUQ7O0FBZndEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wSG9sZGluZ3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSRVNURGF0YVNvdXJjZSB9IGZyb20gJ2Fwb2xsby1kYXRhc291cmNlLXJlc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb3BIb2xkaW5nc0FQSSBleHRlbmRzIFJFU1REYXRhU291cmNlIHtcbiAgZ2V0IGJhc2VVUkwoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29udGV4dC5lbnZ9L2FwaS9hbmFseXRpYy9gO1xuICB9XG5cbiAgYXN5bmMgR0VUKGFyZ3MsIHRva2VuKSB7XG4gICAgY29uc3QgeyBsaW1pdCwgc29ydEJ5LCBvZmZzZXQgfSA9IGFyZ3M7XG4gICAgcmV0dXJuIHRoaXMucG9zdChcbiAgICAgJ3RvcC1ob2xkaW5ncycsIC8vIHBhdGhcbiAgICAgIHtcbiAgICAgICAgc29ydE1ldGhvZDogc29ydEJ5IHx8ICdzZWN1cml0eU5hbWUnLFxuICAgICAgICByZXN1bHRMaW1pdDogbGltaXQgfHwgNSxcbiAgICAgICAgb2Zmc2V0OiBvZmZzZXQgfHwgMCxcbiAgICAgIH0sIC8vIHJlcXVlc3QgYm9keVxuICAgICk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "TopHoldingsAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "args",
        "token",
        "limit",
        "sortBy",
        "offset",
        "post",
        "sortMethod",
        "resultLimit"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,cAAN,SAA6BC,oCAA7B,CAA4C;AACzD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,QAA4BJ,IAAlC;AACA,WAAO,KAAKK,IAAL,CACN,cADM,EACU;AACf;AACEC,MAAAA,UAAU,EAAEH,MAAM,IAAI,cADxB;AAEEI,MAAAA,WAAW,EAAEL,KAAK,IAAI,CAFxB;AAGEE,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAHpB,KAFK,CAMF;AANE,KAAP;AAQD;;AAfwD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class TopHoldingsAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const { limit, sortBy, offset } = args;\n    return this.post(\n     'top-holdings', // path\n      {\n        sortMethod: sortBy || 'securityName',\n        resultLimit: limit || 5,\n        offset: offset || 0,\n      }, // request body\n    );\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218328936
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass UsersAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/advisors/`;\n  }\n\n  async GET(userID) {\n    return this.get(`${userID}/clients`);\n  }\n\n}\n\nexports.default = UsersAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJVc2Vyc0FQSSIsIlJFU1REYXRhU291cmNlIiwiYmFzZVVSTCIsImNvbnRleHQiLCJlbnYiLCJHRVQiLCJ1c2VySUQiLCJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFZSxNQUFNQSxRQUFOLFNBQXVCQyxvQ0FBdkIsQ0FBc0M7QUFDbkQsTUFBSUMsT0FBSixHQUFjO0FBQ1osV0FBUSxHQUFFLEtBQUtDLE9BQUwsQ0FBYUMsR0FBSSxnQkFBM0I7QUFDRDs7QUFFRCxRQUFNQyxHQUFOLENBQVVDLE1BQVYsRUFBa0I7QUFDaEIsV0FBTyxLQUFLQyxHQUFMLENBQVUsR0FBRUQsTUFBTyxVQUFuQixDQUFQO0FBQ0Q7O0FBUGtEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVXNlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSRVNURGF0YVNvdXJjZSB9IGZyb20gJ2Fwb2xsby1kYXRhc291cmNlLXJlc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2Vyc0FQSSBleHRlbmRzIFJFU1REYXRhU291cmNlIHtcbiAgZ2V0IGJhc2VVUkwoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29udGV4dC5lbnZ9L2FwaS9hZHZpc29ycy9gO1xuICB9XG5cbiAgYXN5bmMgR0VUKHVzZXJJRCkge1xuICAgIHJldHVybiB0aGlzLmdldChgJHt1c2VySUR9L2NsaWVudHNgKTtcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "UsersAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "userID",
        "get"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,QAAN,SAAuBC,oCAAvB,CAAsC;AACnD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,MAAV,EAAkB;AAChB,WAAO,KAAKC,GAAL,CAAU,GAAED,MAAO,UAAnB,CAAP;AACD;;AAPkD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class UsersAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/advisors/`;\n  }\n\n  async GET(userID) {\n    return this.get(`${userID}/clients`);\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551207390074
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
        "sourceFileName": "router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./rest/Authentication/routes\"));\n\nvar _routes2 = _interopRequireDefault(require(\"./rest/User/routes\"));\n\nvar _authSteps = _interopRequireDefault(require(\"./util/authSteps\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = app => {\n  // Initializing route groups\n  const restRoutes = _express.default.Router();\n\n  restRoutes.use('/', _routes.default);\n  restRoutes.use('/', _routes2.default); // Set url for API group routes\n\n  app.use('/api', restRoutes); // Error handling 404\n\n  app.use((req, res) => {\n    const err = new Error('Invalid API endpoint');\n    err.url = req.protocol + \"://\" + req.get(\"host\") + req.originalUrl;\n    err.status = 404;\n    res.status(err.status);\n    res.send({\n      error: err\n    });\n  }); // Error handling 500\n\n  app.use((err, req, res, next) => {\n    res.status(err.status || 500);\n    res.send({\n      error: 'Failure on request'\n    });\n  });\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXN0Um91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImF1dGhSb3V0ZXMiLCJ1c2VyUm91dGVzIiwicmVxIiwicmVzIiwiZXJyIiwiRXJyb3IiLCJ1cmwiLCJwcm90b2NvbCIsImdldCIsIm9yaWdpbmFsVXJsIiwic3RhdHVzIiwic2VuZCIsImVycm9yIiwibmV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUVBOzs7O2VBRWdCQSxHQUFELElBQVM7QUFDdEI7QUFDQSxRQUFNQyxVQUFVLEdBQUdDLGlCQUFRQyxNQUFSLEVBQW5COztBQUVBRixFQUFBQSxVQUFVLENBQUNHLEdBQVgsQ0FBZSxHQUFmLEVBQW9CQyxlQUFwQjtBQUNBSixFQUFBQSxVQUFVLENBQUNHLEdBQVgsQ0FBZSxHQUFmLEVBQW9CRSxnQkFBcEIsRUFMc0IsQ0FPdEI7O0FBQ0FOLEVBQUFBLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLE1BQVIsRUFBZ0JILFVBQWhCLEVBUnNCLENBVXRCOztBQUNBRCxFQUFBQSxHQUFHLENBQUNJLEdBQUosQ0FBUSxDQUFDRyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNwQixVQUFNQyxHQUFHLEdBQUcsSUFBSUMsS0FBSixDQUFVLHNCQUFWLENBQVo7QUFFQUQsSUFBQUEsR0FBRyxDQUFDRSxHQUFKLEdBQVVKLEdBQUcsQ0FBQ0ssUUFBSixHQUFlLEtBQWYsR0FBdUJMLEdBQUcsQ0FBQ00sR0FBSixDQUFRLE1BQVIsQ0FBdkIsR0FBeUNOLEdBQUcsQ0FBQ08sV0FBdkQ7QUFDQUwsSUFBQUEsR0FBRyxDQUFDTSxNQUFKLEdBQWEsR0FBYjtBQUVBUCxJQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBV04sR0FBRyxDQUFDTSxNQUFmO0FBQ0FQLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUNDLE1BQUFBLEtBQUssRUFBRVI7QUFBUixLQUFUO0FBQ0QsR0FSRCxFQVhzQixDQXFCdEI7O0FBQ0FULEVBQUFBLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLENBQUNLLEdBQUQsRUFBTUYsR0FBTixFQUFXQyxHQUFYLEVBQWdCVSxJQUFoQixLQUF5QjtBQUMvQlYsSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVdOLEdBQUcsQ0FBQ00sTUFBSixJQUFjLEdBQXpCO0FBQ0FQLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUNDLE1BQUFBLEtBQUssRUFBRTtBQUFSLEtBQVQ7QUFDRCxHQUhEO0FBS0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGV3aXNkYWNrYW0vRG9jdW1lbnRzL2FsdHJ1aXN0LWJhY2tlbmQtZm9yLWZyb250ZW5kL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5pbXBvcnQgYXV0aFJvdXRlcyBmcm9tICcuL3Jlc3QvQXV0aGVudGljYXRpb24vcm91dGVzJztcbmltcG9ydCB1c2VyUm91dGVzIGZyb20gJy4vcmVzdC9Vc2VyL3JvdXRlcyc7XG5cbmltcG9ydCBhdXRoU3RlcCBmcm9tICcuL3V0aWwvYXV0aFN0ZXBzJztcblxuZXhwb3J0IGRlZmF1bHQgKGFwcCkgPT4ge1xuICAvLyBJbml0aWFsaXppbmcgcm91dGUgZ3JvdXBzXG4gIGNvbnN0IHJlc3RSb3V0ZXMgPSBleHByZXNzLlJvdXRlcigpO1xuXG4gIHJlc3RSb3V0ZXMudXNlKCcvJywgYXV0aFJvdXRlcyk7XG4gIHJlc3RSb3V0ZXMudXNlKCcvJywgdXNlclJvdXRlcyk7XG5cbiAgLy8gU2V0IHVybCBmb3IgQVBJIGdyb3VwIHJvdXRlc1xuICBhcHAudXNlKCcvYXBpJywgcmVzdFJvdXRlcyk7XG4gIFxuICAvLyBFcnJvciBoYW5kbGluZyA0MDRcbiAgYXBwLnVzZSgocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0ludmFsaWQgQVBJIGVuZHBvaW50Jyk7XG5cbiAgICBlcnIudXJsID0gcmVxLnByb3RvY29sICsgXCI6Ly9cIiArIHJlcS5nZXQoXCJob3N0XCIpICsgcmVxLm9yaWdpbmFsVXJsO1xuICAgIGVyci5zdGF0dXMgPSA0MDQ7XG5cbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMpO1xuICAgIHJlcy5zZW5kKHtlcnJvcjogZXJyfSk7XG4gIH0pO1xuXG4gIC8vIEVycm9yIGhhbmRsaW5nIDUwMFxuICBhcHAudXNlKChlcnIsIHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gICAgcmVzLnNlbmQoe2Vycm9yOiAnRmFpbHVyZSBvbiByZXF1ZXN0J30pO1xuICB9KTtcblxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "router.js"
      ],
      "names": [
        "app",
        "restRoutes",
        "express",
        "Router",
        "use",
        "authRoutes",
        "userRoutes",
        "req",
        "res",
        "err",
        "Error",
        "url",
        "protocol",
        "get",
        "originalUrl",
        "status",
        "send",
        "error",
        "next"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AAEA;;;;eAEgBA,GAAD,IAAS;AACtB;AACA,QAAMC,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAEAF,EAAAA,UAAU,CAACG,GAAX,CAAe,GAAf,EAAoBC,eAApB;AACAJ,EAAAA,UAAU,CAACG,GAAX,CAAe,GAAf,EAAoBE,gBAApB,EALsB,CAOtB;;AACAN,EAAAA,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBH,UAAhB,EARsB,CAUtB;;AACAD,EAAAA,GAAG,CAACI,GAAJ,CAAQ,CAACG,GAAD,EAAMC,GAAN,KAAc;AACpB,UAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAU,sBAAV,CAAZ;AAEAD,IAAAA,GAAG,CAACE,GAAJ,GAAUJ,GAAG,CAACK,QAAJ,GAAe,KAAf,GAAuBL,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAAvB,GAAyCN,GAAG,CAACO,WAAvD;AACAL,IAAAA,GAAG,CAACM,MAAJ,GAAa,GAAb;AAEAP,IAAAA,GAAG,CAACO,MAAJ,CAAWN,GAAG,CAACM,MAAf;AACAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,MAAAA,KAAK,EAAER;AAAR,KAAT;AACD,GARD,EAXsB,CAqBtB;;AACAT,EAAAA,GAAG,CAACI,GAAJ,CAAQ,CAACK,GAAD,EAAMF,GAAN,EAAWC,GAAX,EAAgBU,IAAhB,KAAyB;AAC/BV,IAAAA,GAAG,CAACO,MAAJ,CAAWN,GAAG,CAACM,MAAJ,IAAc,GAAzB;AACAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAT;AACD,GAHD;AAKD,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "sourcesContent": [
        "import express from 'express';\n\nimport authRoutes from './rest/Authentication/routes';\nimport userRoutes from './rest/User/routes';\n\nimport authStep from './util/authSteps';\n\nexport default (app) => {\n  // Initializing route groups\n  const restRoutes = express.Router();\n\n  restRoutes.use('/', authRoutes);\n  restRoutes.use('/', userRoutes);\n\n  // Set url for API group routes\n  app.use('/api', restRoutes);\n  \n  // Error handling 404\n  app.use((req, res) => {\n    const err = new Error('Invalid API endpoint');\n\n    err.url = req.protocol + \"://\" + req.get(\"host\") + req.originalUrl;\n    err.status = 404;\n\n    res.status(err.status);\n    res.send({error: err});\n  });\n\n  // Error handling 500\n  app.use((err, req, res, next) => {\n    res.status(err.status || 500);\n    res.send({error: 'Failure on request'});\n  });\n\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551299277574
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar AuthController = _interopRequireWildcard(require(\"./controller/\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst authRoutes = _express.default.Router(); //= ============================\n//  Register Flow Express Routes\n//= ============================\n// 1) user submits registration form\n\n\nauthRoutes.post(\"/register/submit\", AuthController.Register); // 2) user submits registration verification\n\nauthRoutes.post(\"/register/verify\", AuthController.Verify); //= ============================\n//  Login Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/submit\", AuthController.Login); //= ============================\n//  Reset Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/reset\", AuthController.RequestForgetPassword);\nauthRoutes.post(\"/login/resetCheck\", AuthController.CheckPassword);\nauthRoutes.put(\"/login/reset\", AuthController.ResetPassword);\nvar _default = authRoutes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJhdXRoUm91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJBdXRoQ29udHJvbGxlciIsIlJlZ2lzdGVyIiwiVmVyaWZ5IiwiTG9naW4iLCJSZXF1ZXN0Rm9yZ2V0UGFzc3dvcmQiLCJDaGVja1Bhc3N3b3JkIiwicHV0IiwiUmVzZXRQYXNzd29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxVQUFVLEdBQUdDLGlCQUFRQyxNQUFSLEVBQW5CLEMsQ0FFQTtBQUNBO0FBQ0E7QUFFQTs7O0FBQ0FGLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixrQkFBaEIsRUFBb0NDLGNBQWMsQ0FBQ0MsUUFBbkQsRSxDQUVBOztBQUNBTCxVQUFVLENBQUNHLElBQVgsQ0FBZ0Isa0JBQWhCLEVBQW9DQyxjQUFjLENBQUNFLE1BQW5ELEUsQ0FFQTtBQUNBO0FBQ0E7O0FBRUFOLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixlQUFoQixFQUFpQ0MsY0FBYyxDQUFDRyxLQUFoRCxFLENBRUE7QUFDQTtBQUNBOztBQUVBUCxVQUFVLENBQUNHLElBQVgsQ0FBZ0IsY0FBaEIsRUFBZ0NDLGNBQWMsQ0FBQ0kscUJBQS9DO0FBRUFSLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixtQkFBaEIsRUFBcUNDLGNBQWMsQ0FBQ0ssYUFBcEQ7QUFFQVQsVUFBVSxDQUFDVSxHQUFYLENBQWUsY0FBZixFQUErQk4sY0FBYyxDQUFDTyxhQUE5QztlQUVlWCxVIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCAqIGFzIEF1dGhDb250cm9sbGVyIGZyb20gJy4vY29udHJvbGxlci8nO1xuXG5jb25zdCBhdXRoUm91dGVzID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy89ID09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICBSZWdpc3RlciBGbG93IEV4cHJlc3MgUm91dGVzXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxKSB1c2VyIHN1Ym1pdHMgcmVnaXN0cmF0aW9uIGZvcm1cbmF1dGhSb3V0ZXMucG9zdChcIi9yZWdpc3Rlci9zdWJtaXRcIiwgQXV0aENvbnRyb2xsZXIuUmVnaXN0ZXIpO1xuXG4vLyAyKSB1c2VyIHN1Ym1pdHMgcmVnaXN0cmF0aW9uIHZlcmlmaWNhdGlvblxuYXV0aFJvdXRlcy5wb3N0KFwiL3JlZ2lzdGVyL3ZlcmlmeVwiLCBBdXRoQ29udHJvbGxlci5WZXJpZnkpO1xuXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIExvZ2luIEZsb3cgRXhwcmVzcyBSb3V0ZXNcbi8vPSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmF1dGhSb3V0ZXMucG9zdChcIi9sb2dpbi9zdWJtaXRcIiwgQXV0aENvbnRyb2xsZXIuTG9naW4pO1xuXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIFJlc2V0IEZsb3cgRXhwcmVzcyBSb3V0ZXNcbi8vPSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmF1dGhSb3V0ZXMucG9zdChcIi9sb2dpbi9yZXNldFwiLCBBdXRoQ29udHJvbGxlci5SZXF1ZXN0Rm9yZ2V0UGFzc3dvcmQpO1xuXG5hdXRoUm91dGVzLnBvc3QoXCIvbG9naW4vcmVzZXRDaGVja1wiLCBBdXRoQ29udHJvbGxlci5DaGVja1Bhc3N3b3JkKTtcblxuYXV0aFJvdXRlcy5wdXQoXCIvbG9naW4vcmVzZXRcIiwgQXV0aENvbnRyb2xsZXIuUmVzZXRQYXNzd29yZCk7XG5cbmV4cG9ydCBkZWZhdWx0IGF1dGhSb3V0ZXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "authRoutes",
        "express",
        "Router",
        "post",
        "AuthController",
        "Register",
        "Verify",
        "Login",
        "RequestForgetPassword",
        "CheckPassword",
        "put",
        "ResetPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB,C,CAEA;AACA;AACA;AAEA;;;AACAF,UAAU,CAACG,IAAX,CAAgB,kBAAhB,EAAoCC,cAAc,CAACC,QAAnD,E,CAEA;;AACAL,UAAU,CAACG,IAAX,CAAgB,kBAAhB,EAAoCC,cAAc,CAACE,MAAnD,E,CAEA;AACA;AACA;;AAEAN,UAAU,CAACG,IAAX,CAAgB,eAAhB,EAAiCC,cAAc,CAACG,KAAhD,E,CAEA;AACA;AACA;;AAEAP,UAAU,CAACG,IAAX,CAAgB,cAAhB,EAAgCC,cAAc,CAACI,qBAA/C;AAEAR,UAAU,CAACG,IAAX,CAAgB,mBAAhB,EAAqCC,cAAc,CAACK,aAApD;AAEAT,UAAU,CAACU,GAAX,CAAe,cAAf,EAA+BN,cAAc,CAACO,aAA9C;eAEeX,U",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication",
      "sourcesContent": [
        "import express from 'express';\nimport * as AuthController from './controller/';\n\nconst authRoutes = express.Router();\n\n//= ============================\n//  Register Flow Express Routes\n//= ============================\n\n// 1) user submits registration form\nauthRoutes.post(\"/register/submit\", AuthController.Register);\n\n// 2) user submits registration verification\nauthRoutes.post(\"/register/verify\", AuthController.Verify);\n\n//= ============================\n//  Login Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/submit\", AuthController.Login);\n\n//= ============================\n//  Reset Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/reset\", AuthController.RequestForgetPassword);\n\nauthRoutes.post(\"/login/resetCheck\", AuthController.CheckPassword);\n\nauthRoutes.put(\"/login/reset\", AuthController.ResetPassword);\n\nexport default authRoutes;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551295228428
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Login\", {\n  enumerable: true,\n  get: function () {\n    return _login.Login;\n  }\n});\nObject.defineProperty(exports, \"Register\", {\n  enumerable: true,\n  get: function () {\n    return _register.Register;\n  }\n});\nObject.defineProperty(exports, \"Verify\", {\n  enumerable: true,\n  get: function () {\n    return _register.Verify;\n  }\n});\nObject.defineProperty(exports, \"ResetPassword\", {\n  enumerable: true,\n  get: function () {\n    return _resetPassword.ResetPassword;\n  }\n});\nObject.defineProperty(exports, \"CheckPassword\", {\n  enumerable: true,\n  get: function () {\n    return _resetPassword.CheckPassword;\n  }\n});\nObject.defineProperty(exports, \"RequestForgetPassword\", {\n  enumerable: true,\n  get: function () {\n    return _resetPassword.RequestForgetPassword;\n  }\n});\n\nvar _login = require(\"./login\");\n\nvar _register = require(\"./register\");\n\nvar _resetPassword = require(\"./resetPassword\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvZ2luIH0gZnJvbSAnLi9sb2dpbic7XG5pbXBvcnQgeyBSZWdpc3RlciwgVmVyaWZ5IH0gZnJvbSAnLi9yZWdpc3Rlcic7XG5pbXBvcnQgeyBcbiAgUmVzZXRQYXNzd29yZCwgIFxuICBDaGVja1Bhc3N3b3JkLCBcbiAgUmVxdWVzdEZvcmdldFBhc3N3b3JkIFxufSBmcm9tICcuL3Jlc2V0UGFzc3dvcmQnO1xuXG5leHBvcnQge1xuIExvZ2luLFxuIFJlZ2lzdGVyLFxuIFZlcmlmeSxcbiBSZXNldFBhc3N3b3JkLFxuIENoZWNrUGFzc3dvcmQsXG4gUmVxdWVzdEZvcmdldFBhc3N3b3JkLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import { Login } from './login';\nimport { Register, Verify } from './register';\nimport { \n  ResetPassword,  \n  CheckPassword, \n  RequestForgetPassword \n} from './resetPassword';\n\nexport {\n Login,\n Register,\n Verify,\n ResetPassword,\n CheckPassword,\n RequestForgetPassword,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551240221600
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Login = void 0;\n\nvar _logger = _interopRequireDefault(require(\"../../../util/logger\"));\n\nvar _cookie = _interopRequireDefault(require(\"../helpers/cookie\"));\n\nvar _idp = require(\"../httpRequests/idp\");\n\nvar _user = require(\"../../User/httpRequests/user\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Login = (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n\n  try {\n    (0, _idp.getUserToken)(username, password).then(thisRes => {\n      // set the auth cookie\n      console.log(`your auth token is good for: ${thisRes.expires_in / 60} min`);\n\n      _cookie.default.setAccess(res, thisRes.access_token);\n\n      (0, _user.getUserInfo)(thisRes.access_token).then(response => {\n        thisRes.user = response;\n        res.status(200).send(thisRes);\n      });\n    }).catch(error => {\n      _logger.default.error(error);\n\n      res.status(403).send({\n        message: \"login failed\"\n      });\n    });\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send({\n      message: \"login failed\"\n    });\n  }\n};\n\nexports.Login = Login;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbIkxvZ2luIiwicmVxIiwicmVzIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImJvZHkiLCJ0aGVuIiwidGhpc1JlcyIsImNvbnNvbGUiLCJsb2ciLCJleHBpcmVzX2luIiwiY29va2llIiwic2V0QWNjZXNzIiwiYWNjZXNzX3Rva2VuIiwicmVzcG9uc2UiLCJ1c2VyIiwic3RhdHVzIiwic2VuZCIsImNhdGNoIiwiZXJyb3IiLCJsb2dnZXIiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBSUE7Ozs7QUFJTyxNQUFNQSxLQUFLLEdBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDakMsUUFBTTtBQUFFQyxJQUFBQSxRQUFGO0FBQVlDLElBQUFBO0FBQVosTUFBeUJILEdBQUcsQ0FBQ0ksSUFBbkM7O0FBRUEsTUFBSTtBQUNGLDJCQUFhRixRQUFiLEVBQXVCQyxRQUF2QixFQUNHRSxJQURILENBQ1FDLE9BQU8sSUFBSTtBQUNmO0FBQ0FDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUNHLGdDQUErQkYsT0FBTyxDQUFDRyxVQUFSLEdBQXFCLEVBQUcsTUFEMUQ7O0FBR0FDLHNCQUFPQyxTQUFQLENBQWlCVixHQUFqQixFQUFzQkssT0FBTyxDQUFDTSxZQUE5Qjs7QUFFQSw2QkFBWU4sT0FBTyxDQUFDTSxZQUFwQixFQUFrQ1AsSUFBbEMsQ0FBdUNRLFFBQVEsSUFBSTtBQUNqRFAsUUFBQUEsT0FBTyxDQUFDUSxJQUFSLEdBQWVELFFBQWY7QUFDQVosUUFBQUEsR0FBRyxDQUFDYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJWLE9BQXJCO0FBQ0QsT0FIRDtBQUlELEtBWkgsRUFhR1csS0FiSCxDQWFVQyxLQUFELElBQVc7QUFDaEJDLHNCQUFPRCxLQUFQLENBQWFBLEtBQWI7O0FBQ0FqQixNQUFBQSxHQUFHLENBQUNjLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkksUUFBQUEsT0FBTyxFQUFFO0FBRFUsT0FBckI7QUFHRCxLQWxCSDtBQW1CRCxHQXBCRCxDQW9CRSxPQUFPRixLQUFQLEVBQWM7QUFDZEMsb0JBQU9ELEtBQVAsQ0FBYUEsS0FBYjs7QUFDQWpCLElBQUFBLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CSSxNQUFBQSxPQUFPLEVBQUU7QUFEVSxLQUFyQjtBQUdEO0FBQ0YsQ0E3Qk0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9BdXRoZW50aWNhdGlvbi9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi8uLi8uLi91dGlsL2xvZ2dlcic7XG5pbXBvcnQgY29va2llIGZyb20gJy4uL2hlbHBlcnMvY29va2llJztcblxuaW1wb3J0IHtcbiAgZ2V0VXNlclRva2VuLFxufSBmcm9tIFwiLi4vaHR0cFJlcXVlc3RzL2lkcFwiO1xuXG5pbXBvcnQge1xuICBnZXRVc2VySW5mbyxcbn0gZnJvbSBcIi4uLy4uL1VzZXIvaHR0cFJlcXVlc3RzL3VzZXJcIjtcblxuZXhwb3J0IGNvbnN0IExvZ2luID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdXNlcm5hbWUsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcbiAgXG4gIHRyeSB7XG4gICAgZ2V0VXNlclRva2VuKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgIC50aGVuKHRoaXNSZXMgPT4ge1xuICAgICAgICAvLyBzZXQgdGhlIGF1dGggY29va2llXG4gICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgIGB5b3VyIGF1dGggdG9rZW4gaXMgZ29vZCBmb3I6ICR7dGhpc1Jlcy5leHBpcmVzX2luIC8gNjB9IG1pbmBcbiAgICAgICAgKTtcbiAgICAgICAgY29va2llLnNldEFjY2VzcyhyZXMsIHRoaXNSZXMuYWNjZXNzX3Rva2VuKTtcblxuICAgICAgICBnZXRVc2VySW5mbyh0aGlzUmVzLmFjY2Vzc190b2tlbikudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgdGhpc1Jlcy51c2VyID0gcmVzcG9uc2U7XG4gICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodGhpc1Jlcyk7XG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoe1xuICAgICAgICAgIG1lc3NhZ2U6IFwibG9naW4gZmFpbGVkXCJcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHtcbiAgICAgIG1lc3NhZ2U6IFwibG9naW4gZmFpbGVkXCJcbiAgICB9KTtcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "Login",
        "req",
        "res",
        "username",
        "password",
        "body",
        "then",
        "thisRes",
        "console",
        "log",
        "expires_in",
        "cookie",
        "setAccess",
        "access_token",
        "response",
        "user",
        "status",
        "send",
        "catch",
        "error",
        "logger",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AAIA;;;;AAIO,MAAMA,KAAK,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,GAAG,CAACI,IAAnC;;AAEA,MAAI;AACF,2BAAaF,QAAb,EAAuBC,QAAvB,EACGE,IADH,CACQC,OAAO,IAAI;AACf;AACAC,MAAAA,OAAO,CAACC,GAAR,CACG,gCAA+BF,OAAO,CAACG,UAAR,GAAqB,EAAG,MAD1D;;AAGAC,sBAAOC,SAAP,CAAiBV,GAAjB,EAAsBK,OAAO,CAACM,YAA9B;;AAEA,6BAAYN,OAAO,CAACM,YAApB,EAAkCP,IAAlC,CAAuCQ,QAAQ,IAAI;AACjDP,QAAAA,OAAO,CAACQ,IAAR,GAAeD,QAAf;AACAZ,QAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,OAArB;AACD,OAHD;AAID,KAZH,EAaGW,KAbH,CAaUC,KAAD,IAAW;AAChBC,sBAAOD,KAAP,CAAaA,KAAb;;AACAjB,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBI,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD,KAlBH;AAmBD,GApBD,CAoBE,OAAOF,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAjB,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBI,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CA7BM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import logger from '../../../util/logger';\nimport cookie from '../helpers/cookie';\n\nimport {\n  getUserToken,\n} from \"../httpRequests/idp\";\n\nimport {\n  getUserInfo,\n} from \"../../User/httpRequests/user\";\n\nexport const Login = (req, res) => {\n  const { username, password } = req.body;\n  \n  try {\n    getUserToken(username, password)\n      .then(thisRes => {\n        // set the auth cookie\n        console.log(\n          `your auth token is good for: ${thisRes.expires_in / 60} min`\n        );\n        cookie.setAccess(res, thisRes.access_token);\n\n        getUserInfo(thisRes.access_token).then(response => {\n          thisRes.user = response;\n          res.status(200).send(thisRes);\n        });\n      })\n      .catch((error) => {\n        logger.error(error);\n        res.status(403).send({\n          message: \"login failed\"\n        });\n      });\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send({\n      message: \"login failed\"\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551307911789
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests",
        "sourceFileName": "idp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserToken = exports.resetPassword = exports.requestResetPassword = exports.pwResetJwtValid = exports.verifyUserRegistration = exports.createUserRegistration = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"dotenv\").config();\n\n_axios.default.defaults.withCredentials = true;\n\nconst createUserRegistration = async (username, password) => {\n  const data = {\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    console.log(\"what the hell, \", res.data);\n    return res.data;\n  }).catch(error => {\n    console.log(\"what the hell error\", error);\n  });\n};\n\nexports.createUserRegistration = createUserRegistration;\n\nconst verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.verifyUserRegistration = verifyUserRegistration;\n\nconst pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.pwResetJwtValid = pwResetJwtValid;\n\nconst requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      email: username.username\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    console.log(\"what the heck\", error);\n    return {\n      status: 403\n    };\n  });\n};\n\nexports.requestResetPassword = requestResetPassword;\n\nconst resetPassword = ({\n  jwt,\n  password\n}) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      jwt,\n      password\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    return {\n      status: 403\n    };\n  });\n}; // user: login\n\n\nexports.resetPassword = resetPassword;\n\nconst getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(`${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`).toString(\"base64\")}`\n    },\n    data: _querystring.default.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n  return (0, _axios.default)(options).then(res => res.data).catch(error => error);\n};\n\nexports.getUserToken = getUserToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "idp.js"
      ],
      "names": [
        "require",
        "config",
        "axios",
        "defaults",
        "withCredentials",
        "createUserRegistration",
        "username",
        "password",
        "data",
        "options",
        "method",
        "headers",
        "Authorization",
        "JSON",
        "parse",
        "process",
        "env",
        "BFF_CLIENT_TOKEN",
        "access_token",
        "stringify",
        "processData",
        "url",
        "then",
        "res",
        "console",
        "log",
        "catch",
        "error",
        "verifyUserRegistration",
        "tokenObj",
        "pwResetJwtValid",
        "jwt",
        "requestResetPassword",
        "email",
        "status",
        "resetPassword",
        "getUserToken",
        "grant_type",
        "Buffer",
        "from",
        "BFF_CLIENT_ID",
        "BFF_CLIENT_SECRET",
        "toString",
        "querystring"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEAC,eAAMC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEO,MAAMC,sBAAsB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAMC,IAAI,GAAG;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAb;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeX,IAAf,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAAG,CAACf,IAAnC;AACA,WAAOe,GAAG,CAACf,IAAX;AACD,GAJI,EAKJkB,KALI,CAKEC,KAAK,IAAI;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,GAPI,CAAP;AAQD,CAxBM;;;;AA0BA,MAAMC,sBAAsB,GAAGC,QAAQ,IAAI;AAChD,QAAMpB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeU,QAAf,CATQ;AAUdT,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMG,eAAe,GAAGC,GAAG,IAAI;AACpC,QAAMtB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeY,GAAf,CATQ;AAUdX,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMK,oBAAoB,GAAG1B,QAAQ,IAAI;AAC9C,QAAMG,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEc,MAAAA,KAAK,EAAE3B,QAAQ,CAACA;AAAlB,KAAf,CATQ;AAUdc,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,KAA7B;AACE,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GAPI,CAAP;AAQD,CAvBM;;;;AAyBA,MAAMC,aAAa,GAAG,CAAC;AAAEJ,EAAAA,GAAF;AAAOxB,EAAAA;AAAP,CAAD,KAAuB;AAClD,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEY,MAAAA,GAAF;AAAOxB,MAAAA;AAAP,KAAf,CATQ;AAUda,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AACd,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GANI,CAAP;AAOD,CAtBM,C,CAwBP;;;;;AACO,MAAME,YAAY,GAAG,CAAC9B,QAAD,EAAWC,QAAX,KAAwB;AAClD,QAAMC,IAAI,GAAG;AACX6B,IAAAA,UAAU,EAAE,UADD;AAEX/B,IAAAA,QAFW;AAGXC,IAAAA;AAHW,GAAb;AAMA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,SAAQ0B,MAAM,CAACC,IAAP,CACrB,GAAExB,OAAO,CAACC,GAAR,CAAYwB,aAAc,IAAGzB,OAAO,CAACC,GAAR,CAAYyB,iBAAkB,EADxC,EAEtBC,QAFsB,CAEb,QAFa,CAEH;AALd,KAFK;AASdlC,IAAAA,IAAI,EAAEmC,qBAAYxB,SAAZ,CAAsBX,IAAtB,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAIA,GAAG,CAACf,IADZ,EAEJkB,KAFI,CAEEC,KAAK,IAAIA,KAFX,CAAP;AAGD,CAxBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests",
      "sourcesContent": [
        "import axios from 'axios';\nimport querystring from 'querystring';\n\nrequire(\"dotenv\").config();\n\naxios.defaults.withCredentials = true;\n\nexport const createUserRegistration = async (username, password) => {\n  const data = { username, password };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n\n  return axios(options)\n    .then(res => {\n      console.log(\"what the hell, \", res.data)\n      return res.data;\n    })\n    .catch(error => {\n      console.log(\"what the hell error\", error) \n    });\n};\n\nexport const verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ email: username.username }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n    console.log(\"what the heck\", error)\n      return { status: 403 };\n    });\n};\n\nexport const resetPassword = ({ jwt, password }) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ jwt, password }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return { status: 403 };\n    });\n};\n\n// user: login\nexport const getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`\n      ).toString(\"base64\")}`\n    },\n    data: querystring.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n\n  return axios(options)\n    .then(res => res.data)\n    .catch(error => error);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551309730061
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserInfo = exports.updateUser = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"dotenv\").config();\n\nconst updateUser = (jwt, user) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: JSON.stringify(user),\n    url: `http://localhost:8081/api/users/${user.id}/user-profile`\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res.data;\n  });\n};\n\nexports.updateUser = updateUser;\n\nconst getUserInfo = jwt => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${jwt}`\n    },\n    processData: false,\n    url: \"http://localhost:8081/api/user-info\"\n  };\n  return (0, _axios.default)(options).then(res => res.data);\n};\n\nexports.getUserInfo = getUserInfo;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImNvbmZpZyIsInVwZGF0ZVVzZXIiLCJqd3QiLCJ1c2VyIiwib3B0aW9ucyIsIm1ldGhvZCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cmwiLCJpZCIsInRoZW4iLCJyZXMiLCJnZXRVc2VySW5mbyIsInByb2Nlc3NEYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBRU8sTUFBTUMsVUFBVSxHQUFHLENBQUNDLEdBQUQsRUFBTUMsSUFBTixLQUFlO0FBQ3ZDLFFBQU1DLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxNQUFNLEVBQUUsS0FETTtBQUVkQyxJQUFBQSxPQUFPLEVBQUU7QUFDUCxzQkFBZ0Isa0JBRFQ7QUFFUEMsTUFBQUEsYUFBYSxFQUFHLFVBQVNMLEdBQUksRUFGdEI7QUFHUCx1QkFBaUI7QUFIVixLQUZLO0FBT2RNLElBQUFBLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFMLENBQWVQLElBQWYsQ0FQUTtBQVFkUSxJQUFBQSxHQUFHLEVBQUcsbUNBQWtDUixJQUFJLENBQUNTLEVBQUc7QUFSbEMsR0FBaEI7QUFXQSxTQUFPLG9CQUFNUixPQUFOLEVBQWVTLElBQWYsQ0FBb0JDLEdBQUcsSUFBSTtBQUNoQyxXQUFPQSxHQUFHLENBQUNOLElBQVg7QUFDRCxHQUZNLENBQVA7QUFHRCxDQWZNOzs7O0FBaUJBLE1BQU1PLFdBQVcsR0FBR2IsR0FBRyxJQUFJO0FBQ2hDLFFBQU1FLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxNQUFNLEVBQUUsS0FETTtBQUVkQyxJQUFBQSxPQUFPLEVBQUU7QUFDUCx1QkFBaUIsVUFEVjtBQUVQQyxNQUFBQSxhQUFhLEVBQUcsVUFBU0wsR0FBSTtBQUZ0QixLQUZLO0FBTWRjLElBQUFBLFdBQVcsRUFBRSxLQU5DO0FBT2RMLElBQUFBLEdBQUcsRUFBRTtBQVBTLEdBQWhCO0FBVUEsU0FBTyxvQkFBTVAsT0FBTixFQUFlUyxJQUFmLENBQW9CQyxHQUFHLElBQUlBLEdBQUcsQ0FBQ04sSUFBL0IsQ0FBUDtBQUNELENBWk0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9Vc2VyL2h0dHBSZXF1ZXN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgcXVlcnlzdHJpbmcgZnJvbSAncXVlcnlzdHJpbmcnO1xuXG5yZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpO1xuXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlciA9IChqd3QsIHVzZXIpID0+IHtcbiAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7and0fWAsXG4gICAgICBcImNhY2hlLWNvbnRyb2xcIjogXCJuby1jYWNoZVwiXG4gICAgfSxcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh1c2VyKSxcbiAgICB1cmw6IGBodHRwOi8vbG9jYWxob3N0OjgwODEvYXBpL3VzZXJzLyR7dXNlci5pZH0vdXNlci1wcm9maWxlYFxuICB9O1xuXG4gIHJldHVybiBheGlvcyhvcHRpb25zKS50aGVuKHJlcyA9PiB7XG4gICAgcmV0dXJuIHJlcy5kYXRhO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VySW5mbyA9IGp3dCA9PiB7XG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiY2FjaGUtY29udHJvbFwiOiBcIm5vLWNhY2hlXCIsXG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7and0fWBcbiAgICB9LFxuICAgIHByb2Nlc3NEYXRhOiBmYWxzZSxcbiAgICB1cmw6IFwiaHR0cDovL2xvY2FsaG9zdDo4MDgxL2FwaS91c2VyLWluZm9cIlxuICB9O1xuXG4gIHJldHVybiBheGlvcyhvcHRpb25zKS50aGVuKHJlcyA9PiByZXMuZGF0YSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "require",
        "config",
        "updateUser",
        "jwt",
        "user",
        "options",
        "method",
        "headers",
        "Authorization",
        "data",
        "JSON",
        "stringify",
        "url",
        "id",
        "then",
        "res",
        "getUserInfo",
        "processData"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEO,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACvC,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASL,GAAI,EAFtB;AAGP,uBAAiB;AAHV,KAFK;AAOdM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAPQ;AAQdQ,IAAAA,GAAG,EAAG,mCAAkCR,IAAI,CAACS,EAAG;AARlC,GAAhB;AAWA,SAAO,oBAAMR,OAAN,EAAeS,IAAf,CAAoBC,GAAG,IAAI;AAChC,WAAOA,GAAG,CAACN,IAAX;AACD,GAFM,CAAP;AAGD,CAfM;;;;AAiBA,MAAMO,WAAW,GAAGb,GAAG,IAAI;AAChC,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,OAAO,EAAE;AACP,uBAAiB,UADV;AAEPC,MAAAA,aAAa,EAAG,UAASL,GAAI;AAFtB,KAFK;AAMdc,IAAAA,WAAW,EAAE,KANC;AAOdL,IAAAA,GAAG,EAAE;AAPS,GAAhB;AAUA,SAAO,oBAAMP,OAAN,EAAeS,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACN,IAA/B,CAAP;AACD,CAZM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests",
      "sourcesContent": [
        "import axios from 'axios';\nimport querystring from 'querystring';\n\nrequire(\"dotenv\").config();\n\nexport const updateUser = (jwt, user) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: JSON.stringify(user),\n    url: `http://localhost:8081/api/users/${user.id}/user-profile`\n  };\n\n  return axios(options).then(res => {\n    return res.data;\n  });\n};\n\nexport const getUserInfo = jwt => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${jwt}`\n    },\n    processData: false,\n    url: \"http://localhost:8081/api/user-info\"\n  };\n\n  return axios(options).then(res => res.data);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551241486061
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "register.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Verify = exports.Register = void 0;\n\nvar _idp = require(\"../httprequests/idp\");\n\nconst Register = async (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n\n  try {\n    const thisRes = await (0, _idp.createUserRegistration)(email, password);\n\n    if (thisRes && thisRes.jwt != \"undefined\") {\n      res.status(200).send(thisRes);\n    } else {\n      res.status(403).send({\n        message: \"registration failed\"\n      });\n    }\n  } catch (error) {\n    console.log(\"hello what the hell\", error);\n    res.status(403).send({\n      message: \"registration failed\"\n    });\n  }\n};\n\nexports.Register = Register;\n\nconst Verify = (req, res) => {\n  // jwt object should be sent in request so we can pass it to the IDP call\n  const {\n    jwt\n  } = req.body;\n\n  try {\n    (0, _idp.verifyUserRegistration)({\n      jwt: jwt\n    }).then(thisRes => {\n      if (thisRes.status === 200) {\n        res.status(200).send(thisRes.data);\n      } else {\n        res.status(403).send(thisRes);\n      }\n    }).catch(({\n      config,\n      request,\n      response\n    }) => {\n      res.status(403).send({\n        message: \"verification failed\"\n      });\n    });\n  } catch (error) {\n    res.status(403).send({\n      message: \"verification failed\"\n    });\n  }\n};\n\nexports.Verify = Verify;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmpzIl0sIm5hbWVzIjpbIlJlZ2lzdGVyIiwicmVxIiwicmVzIiwiZW1haWwiLCJwYXNzd29yZCIsImJvZHkiLCJ0aGlzUmVzIiwiand0Iiwic3RhdHVzIiwic2VuZCIsIm1lc3NhZ2UiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJWZXJpZnkiLCJ0aGVuIiwiZGF0YSIsImNhdGNoIiwiY29uZmlnIiwicmVxdWVzdCIsInJlc3BvbnNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBS08sTUFBTUEsUUFBUSxHQUFHLE9BQU9DLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUMxQyxRQUFNO0FBQUVDLElBQUFBLEtBQUY7QUFBU0MsSUFBQUE7QUFBVCxNQUFzQkgsR0FBRyxDQUFDSSxJQUFoQzs7QUFFQSxNQUFJO0FBQ0YsVUFBTUMsT0FBTyxHQUFHLE1BQU0saUNBQXVCSCxLQUF2QixFQUE4QkMsUUFBOUIsQ0FBdEI7O0FBRUEsUUFBSUUsT0FBTyxJQUFJQSxPQUFPLENBQUNDLEdBQVIsSUFBZSxXQUE5QixFQUEyQztBQUN6Q0wsTUFBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJILE9BQXJCO0FBQ0QsS0FGRCxNQUVPO0FBQ0xKLE1BQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CQyxRQUFBQSxPQUFPLEVBQUU7QUFEVSxPQUFyQjtBQUdEO0FBQ0YsR0FWRCxDQVVFLE9BQU9DLEtBQVAsRUFBYztBQUNoQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVosRUFBbUNGLEtBQW5DO0FBQ0VULElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CQyxNQUFBQSxPQUFPLEVBQUU7QUFEVSxLQUFyQjtBQUdEO0FBQ0YsQ0FuQk07Ozs7QUFxQkEsTUFBTUksTUFBTSxHQUFHLENBQUNiLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ2xDO0FBQ0EsUUFBTTtBQUFFSyxJQUFBQTtBQUFGLE1BQVVOLEdBQUcsQ0FBQ0ksSUFBcEI7O0FBRUEsTUFBSTtBQUNGLHFDQUF1QjtBQUFFRSxNQUFBQSxHQUFHLEVBQUVBO0FBQVAsS0FBdkIsRUFDR1EsSUFESCxDQUNRVCxPQUFPLElBQUk7QUFDZixVQUFJQSxPQUFPLENBQUNFLE1BQVIsS0FBbUIsR0FBdkIsRUFBNEI7QUFDMUJOLFFBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSCxPQUFPLENBQUNVLElBQTdCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xkLFFBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSCxPQUFyQjtBQUNEO0FBQ0YsS0FQSCxFQVFHVyxLQVJILENBUVMsQ0FBQztBQUFFQyxNQUFBQSxNQUFGO0FBQVVDLE1BQUFBLE9BQVY7QUFBbUJDLE1BQUFBO0FBQW5CLEtBQUQsS0FBbUM7QUFDeENsQixNQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsUUFBQUEsT0FBTyxFQUFFO0FBRFUsT0FBckI7QUFHRCxLQVpIO0FBYUQsR0FkRCxDQWNFLE9BQU9DLEtBQVAsRUFBYztBQUNkVCxJQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsTUFBQUEsT0FBTyxFQUFFO0FBRFUsS0FBckI7QUFHRDtBQUNGLENBdkJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZVVzZXJSZWdpc3RyYXRpb24sXG4gIHZlcmlmeVVzZXJSZWdpc3RyYXRpb24sXG59IGZyb20gXCIuLi9odHRwcmVxdWVzdHMvaWRwXCI7XG5cbmV4cG9ydCBjb25zdCBSZWdpc3RlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB0aGlzUmVzID0gYXdhaXQgY3JlYXRlVXNlclJlZ2lzdHJhdGlvbihlbWFpbCwgcGFzc3dvcmQpO1xuXG4gICAgaWYgKHRoaXNSZXMgJiYgdGhpc1Jlcy5qd3QgIT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodGhpc1Jlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHtcbiAgICAgICAgbWVzc2FnZTogXCJyZWdpc3RyYXRpb24gZmFpbGVkXCJcbiAgICAgIH0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgY29uc29sZS5sb2coXCJoZWxsbyB3aGF0IHRoZSBoZWxsXCIsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDQwMykuc2VuZCh7XG4gICAgICBtZXNzYWdlOiBcInJlZ2lzdHJhdGlvbiBmYWlsZWRcIlxuICAgIH0pO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgVmVyaWZ5ID0gKHJlcSwgcmVzKSA9PiB7XG4gIC8vIGp3dCBvYmplY3Qgc2hvdWxkIGJlIHNlbnQgaW4gcmVxdWVzdCBzbyB3ZSBjYW4gcGFzcyBpdCB0byB0aGUgSURQIGNhbGxcbiAgY29uc3QgeyBqd3QgfSA9IHJlcS5ib2R5O1xuXG4gIHRyeSB7XG4gICAgdmVyaWZ5VXNlclJlZ2lzdHJhdGlvbih7IGp3dDogand0IH0pXG4gICAgICAudGhlbih0aGlzUmVzID0+IHtcbiAgICAgICAgaWYgKHRoaXNSZXMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCh0aGlzUmVzLmRhdGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHRoaXNSZXMpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKCh7IGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UgfSkgPT4ge1xuICAgICAgICByZXMuc3RhdHVzKDQwMykuc2VuZCh7XG4gICAgICAgICAgbWVzc2FnZTogXCJ2ZXJpZmljYXRpb24gZmFpbGVkXCJcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXMuc3RhdHVzKDQwMykuc2VuZCh7XG4gICAgICBtZXNzYWdlOiBcInZlcmlmaWNhdGlvbiBmYWlsZWRcIlxuICAgIH0pO1xuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "register.js"
      ],
      "names": [
        "Register",
        "req",
        "res",
        "email",
        "password",
        "body",
        "thisRes",
        "jwt",
        "status",
        "send",
        "message",
        "error",
        "console",
        "log",
        "Verify",
        "then",
        "data",
        "catch",
        "config",
        "request",
        "response"
      ],
      "mappings": ";;;;;;;AAAA;;AAKO,MAAMA,QAAQ,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,GAAG,CAACI,IAAhC;;AAEA,MAAI;AACF,UAAMC,OAAO,GAAG,MAAM,iCAAuBH,KAAvB,EAA8BC,QAA9B,CAAtB;;AAEA,QAAIE,OAAO,IAAIA,OAAO,CAACC,GAAR,IAAe,WAA9B,EAA2C;AACzCL,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,OAArB;AACD,KAFD,MAEO;AACLJ,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD;AACF,GAVD,CAUE,OAAOC,KAAP,EAAc;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACET,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CAnBM;;;;AAqBA,MAAMI,MAAM,GAAG,CAACb,GAAD,EAAMC,GAAN,KAAc;AAClC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAUN,GAAG,CAACI,IAApB;;AAEA,MAAI;AACF,qCAAuB;AAAEE,MAAAA,GAAG,EAAEA;AAAP,KAAvB,EACGQ,IADH,CACQT,OAAO,IAAI;AACf,UAAIA,OAAO,CAACE,MAAR,KAAmB,GAAvB,EAA4B;AAC1BN,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,OAAO,CAACU,IAA7B;AACD,OAFD,MAEO;AACLd,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,OAArB;AACD;AACF,KAPH,EAQGW,KARH,CAQS,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,KAAD,KAAmC;AACxClB,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD,KAZH;AAaD,GAdD,CAcE,OAAOC,KAAP,EAAc;AACdT,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CAvBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import {\n  createUserRegistration,\n  verifyUserRegistration,\n} from \"../httprequests/idp\";\n\nexport const Register = async (req, res) => {\n  const { email, password } = req.body;\n\n  try {\n    const thisRes = await createUserRegistration(email, password);\n\n    if (thisRes && thisRes.jwt != \"undefined\") {\n      res.status(200).send(thisRes);\n    } else {\n      res.status(403).send({\n        message: \"registration failed\"\n      });\n    }\n  } catch (error) {\n  console.log(\"hello what the hell\", error);\n    res.status(403).send({\n      message: \"registration failed\"\n    });\n  }\n};\n\nexport const Verify = (req, res) => {\n  // jwt object should be sent in request so we can pass it to the IDP call\n  const { jwt } = req.body;\n\n  try {\n    verifyUserRegistration({ jwt: jwt })\n      .then(thisRes => {\n        if (thisRes.status === 200) {\n          res.status(200).send(thisRes.data);\n        } else {\n          res.status(403).send(thisRes);\n        }\n      })\n      .catch(({ config, request, response }) => {\n        res.status(403).send({\n          message: \"verification failed\"\n        });\n      });\n  } catch (error) {\n    res.status(403).send({\n      message: \"verification failed\"\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551309670902
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "resetPassword.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResetPassword = exports.CheckPassword = exports.RequestForgetPassword = void 0;\n\nvar _logger = _interopRequireDefault(require(\"../../../util/logger\"));\n\nvar _idp = require(\"../httprequests/idp\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst RequestForgetPassword = async (req, res) => {\n  const {\n    username\n  } = req.body;\n\n  try {\n    const response = await (0, _idp.requestResetPassword)({\n      username\n    });\n\n    if (response && response.status === 200) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send(error);\n  }\n};\n\nexports.RequestForgetPassword = RequestForgetPassword;\n\nconst CheckPassword = async (req, res) => {\n  const {\n    jwt\n  } = req.body;\n\n  try {\n    const response = await (0, _idp.pwResetJwtValid)({\n      jwt\n    });\n\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send(error);\n  }\n};\n\nexports.CheckPassword = CheckPassword;\n\nconst ResetPassword = async (req, res) => {\n  try {\n    const response = await (0, _idp.resetPassword)(req.body);\n\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send(error);\n  }\n};\n\nexports.ResetPassword = ResetPassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0UGFzc3dvcmQuanMiXSwibmFtZXMiOlsiUmVxdWVzdEZvcmdldFBhc3N3b3JkIiwicmVxIiwicmVzIiwidXNlcm5hbWUiLCJib2R5IiwicmVzcG9uc2UiLCJzdGF0dXMiLCJzZW5kIiwiZXJyb3IiLCJsb2dnZXIiLCJDaGVja1Bhc3N3b3JkIiwiand0IiwiUmVzZXRQYXNzd29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBTU8sTUFBTUEscUJBQXFCLEdBQUcsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQ3ZELFFBQU07QUFBRUMsSUFBQUE7QUFBRixNQUFlRixHQUFHLENBQUNHLElBQXpCOztBQUVBLE1BQUk7QUFDRixVQUFNQyxRQUFRLEdBQUcsTUFBTSwrQkFBcUI7QUFBRUYsTUFBQUE7QUFBRixLQUFyQixDQUF2Qjs7QUFDQSxRQUFJRSxRQUFRLElBQUlBLFFBQVEsQ0FBQ0MsTUFBVCxLQUFvQixHQUFwQyxFQUF5QztBQUN2Q0osTUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLFFBQVEsQ0FBQ0EsUUFBOUI7QUFDRCxLQUZELE1BRU87QUFDTEgsTUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLFFBQXJCO0FBQ0Q7QUFDRixHQVBELENBT0UsT0FBT0csS0FBUCxFQUFjO0FBQ2RDLG9CQUFPRCxLQUFQLENBQWFBLEtBQWI7O0FBQ0FOLElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxLQUFyQjtBQUNEO0FBQ0YsQ0FkTTs7OztBQWdCQSxNQUFNRSxhQUFhLEdBQUcsT0FBT1QsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQy9DLFFBQU07QUFBRVMsSUFBQUE7QUFBRixNQUFVVixHQUFHLENBQUNHLElBQXBCOztBQUVBLE1BQUk7QUFDRixVQUFNQyxRQUFRLEdBQUcsTUFBTSwwQkFBZ0I7QUFBRU0sTUFBQUE7QUFBRixLQUFoQixDQUF2Qjs7QUFDQSxRQUFJTixRQUFRLENBQUNDLE1BQVQsR0FBa0IsR0FBdEIsRUFBMkI7QUFDekJKLE1BQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixRQUFRLENBQUNBLFFBQTlCO0FBQ0QsS0FGRCxNQUVPO0FBQ0xILE1BQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixRQUFyQjtBQUNEO0FBQ0YsR0FQRCxDQU9FLE9BQU9HLEtBQVAsRUFBYztBQUNkQyxvQkFBT0QsS0FBUCxDQUFhQSxLQUFiOztBQUNBTixJQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsS0FBckI7QUFDRDtBQUNGLENBZE07Ozs7QUFnQkEsTUFBTUksYUFBYSxHQUFHLE9BQU9YLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUMvQyxNQUFJO0FBQ0YsVUFBTUcsUUFBUSxHQUFHLE1BQU0sd0JBQWNKLEdBQUcsQ0FBQ0csSUFBbEIsQ0FBdkI7O0FBRUEsUUFBSUMsUUFBUSxDQUFDQyxNQUFULEdBQWtCLEdBQXRCLEVBQTJCO0FBQ3pCSixNQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsUUFBUSxDQUFDQSxRQUE5QjtBQUNELEtBRkQsTUFFTztBQUNMSCxNQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsUUFBckI7QUFDRDtBQUNGLEdBUkQsQ0FRRSxPQUFPRyxLQUFQLEVBQWM7QUFDZEMsb0JBQU9ELEtBQVAsQ0FBYUEsS0FBYjs7QUFDQU4sSUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEtBQXJCO0FBQ0Q7QUFDRixDQWJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2dnZXIgZnJvbSAnLi4vLi4vLi4vdXRpbC9sb2dnZXInO1xuXG5pbXBvcnQge1xuICByZXF1ZXN0UmVzZXRQYXNzd29yZCxcbiAgcmVzZXRQYXNzd29yZCxcbiAgcHdSZXNldEp3dFZhbGlkLFxufSBmcm9tIFwiLi4vaHR0cHJlcXVlc3RzL2lkcFwiO1xuXG5leHBvcnQgY29uc3QgUmVxdWVzdEZvcmdldFBhc3N3b3JkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdXNlcm5hbWUgfSA9IHJlcS5ib2R5O1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0UmVzZXRQYXNzd29yZCh7IHVzZXJuYW1lIH0pO1xuICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQocmVzcG9uc2UucmVzcG9uc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMuc3RhdHVzKDQwMykuc2VuZChyZXNwb25zZSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGxvZ2dlci5lcnJvcihlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoZXJyb3IpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgQ2hlY2tQYXNzd29yZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IGp3dCB9ID0gcmVxLmJvZHk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHB3UmVzZXRKd3RWYWxpZCh7IGp3dCB9KTtcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzIDwgMzAwKSB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChyZXNwb25zZS5yZXNwb25zZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHJlc3BvbnNlKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDQwMykuc2VuZChlcnJvcik7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBSZXNldFBhc3N3b3JkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXNldFBhc3N3b3JkKHJlcS5ib2R5KTtcblxuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPCAzMDApIHtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlc3BvbnNlLnJlc3BvbnNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQocmVzcG9uc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKGVycm9yKTtcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resetPassword.js"
      ],
      "names": [
        "RequestForgetPassword",
        "req",
        "res",
        "username",
        "body",
        "response",
        "status",
        "send",
        "error",
        "logger",
        "CheckPassword",
        "jwt",
        "ResetPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAMO,MAAMA,qBAAqB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAeF,GAAG,CAACG,IAAzB;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAM,+BAAqB;AAAEF,MAAAA;AAAF,KAArB,CAAvB;;AACA,QAAIE,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApC,EAAyC;AACvCJ,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAAQ,CAACA,QAA9B;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD;AACF,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AACF,CAdM;;;;AAgBA,MAAME,aAAa,GAAG,OAAOT,GAAP,EAAYC,GAAZ,KAAoB;AAC/C,QAAM;AAAES,IAAAA;AAAF,MAAUV,GAAG,CAACG,IAApB;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAM,0BAAgB;AAAEM,MAAAA;AAAF,KAAhB,CAAvB;;AACA,QAAIN,QAAQ,CAACC,MAAT,GAAkB,GAAtB,EAA2B;AACzBJ,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAAQ,CAACA,QAA9B;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD;AACF,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AACF,CAdM;;;;AAgBA,MAAMI,aAAa,GAAG,OAAOX,GAAP,EAAYC,GAAZ,KAAoB;AAC/C,MAAI;AACF,UAAMG,QAAQ,GAAG,MAAM,wBAAcJ,GAAG,CAACG,IAAlB,CAAvB;;AAEA,QAAIC,QAAQ,CAACC,MAAT,GAAkB,GAAtB,EAA2B;AACzBJ,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAAQ,CAACA,QAA9B;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD;AACF,GARD,CAQE,OAAOG,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AACF,CAbM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import logger from '../../../util/logger';\n\nimport {\n  requestResetPassword,\n  resetPassword,\n  pwResetJwtValid,\n} from \"../httprequests/idp\";\n\nexport const RequestForgetPassword = async (req, res) => {\n  const { username } = req.body;\n\n  try {\n    const response = await requestResetPassword({ username });\n    if (response && response.status === 200) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send(error);\n  }\n};\n\nexport const CheckPassword = async (req, res) => {\n  const { jwt } = req.body;\n\n  try {\n    const response = await pwResetJwtValid({ jwt });\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send(error);\n  }\n};\n\nexport const ResetPassword = async (req, res) => {\n  try {\n    const response = await resetPassword(req.body);\n\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send(error);\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551308976530
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests",
        "sourceFileName": "idp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserToken = exports.resetPassword = exports.requestResetPassword = exports.pwResetJwtValid = exports.verifyUserRegistration = exports.createUserRegistration = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"dotenv\").config();\n\n_axios.default.defaults.withCredentials = true;\n\nconst createUserRegistration = async (username, password) => {\n  const data = {\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    console.log(\"what the hell, \", res.data);\n    return res.data;\n  }).catch(error => {\n    console.log(\"what the hell error\", error);\n  });\n};\n\nexports.createUserRegistration = createUserRegistration;\n\nconst verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.verifyUserRegistration = verifyUserRegistration;\n\nconst pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.pwResetJwtValid = pwResetJwtValid;\n\nconst requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      email: username.username\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    console.log(\"what the heck\", error);\n    return {\n      status: 403\n    };\n  });\n};\n\nexports.requestResetPassword = requestResetPassword;\n\nconst resetPassword = ({\n  jwt,\n  password\n}) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      jwt,\n      password\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    return {\n      status: 403\n    };\n  });\n}; // user: login\n\n\nexports.resetPassword = resetPassword;\n\nconst getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(`${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`).toString(\"base64\")}`\n    },\n    data: _querystring.default.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n  return (0, _axios.default)(options).then(res => res.data).catch(error => error);\n};\n\nexports.getUserToken = getUserToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "idp.js"
      ],
      "names": [
        "require",
        "config",
        "axios",
        "defaults",
        "withCredentials",
        "createUserRegistration",
        "username",
        "password",
        "data",
        "options",
        "method",
        "headers",
        "Authorization",
        "JSON",
        "parse",
        "process",
        "env",
        "BFF_CLIENT_TOKEN",
        "access_token",
        "stringify",
        "processData",
        "url",
        "then",
        "res",
        "console",
        "log",
        "catch",
        "error",
        "verifyUserRegistration",
        "tokenObj",
        "pwResetJwtValid",
        "jwt",
        "requestResetPassword",
        "email",
        "status",
        "resetPassword",
        "getUserToken",
        "grant_type",
        "Buffer",
        "from",
        "BFF_CLIENT_ID",
        "BFF_CLIENT_SECRET",
        "toString",
        "querystring"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEAC,eAAMC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEO,MAAMC,sBAAsB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAMC,IAAI,GAAG;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAb;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeX,IAAf,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAAG,CAACf,IAAnC;AACA,WAAOe,GAAG,CAACf,IAAX;AACD,GAJI,EAKJkB,KALI,CAKEC,KAAK,IAAI;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,GAPI,CAAP;AAQD,CAxBM;;;;AA0BA,MAAMC,sBAAsB,GAAGC,QAAQ,IAAI;AAChD,QAAMpB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeU,QAAf,CATQ;AAUdT,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMG,eAAe,GAAGC,GAAG,IAAI;AACpC,QAAMtB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeY,GAAf,CATQ;AAUdX,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMK,oBAAoB,GAAG1B,QAAQ,IAAI;AAC9C,QAAMG,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEc,MAAAA,KAAK,EAAE3B,QAAQ,CAACA;AAAlB,KAAf,CATQ;AAUdc,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,KAA7B;AACE,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GAPI,CAAP;AAQD,CAvBM;;;;AAyBA,MAAMC,aAAa,GAAG,CAAC;AAAEJ,EAAAA,GAAF;AAAOxB,EAAAA;AAAP,CAAD,KAAuB;AAClD,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEY,MAAAA,GAAF;AAAOxB,MAAAA;AAAP,KAAf,CATQ;AAUda,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AACd,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GANI,CAAP;AAOD,CAtBM,C,CAwBP;;;;;AACO,MAAME,YAAY,GAAG,CAAC9B,QAAD,EAAWC,QAAX,KAAwB;AAClD,QAAMC,IAAI,GAAG;AACX6B,IAAAA,UAAU,EAAE,UADD;AAEX/B,IAAAA,QAFW;AAGXC,IAAAA;AAHW,GAAb;AAMA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,SAAQ0B,MAAM,CAACC,IAAP,CACrB,GAAExB,OAAO,CAACC,GAAR,CAAYwB,aAAc,IAAGzB,OAAO,CAACC,GAAR,CAAYyB,iBAAkB,EADxC,EAEtBC,QAFsB,CAEb,QAFa,CAEH;AALd,KAFK;AASdlC,IAAAA,IAAI,EAAEmC,qBAAYxB,SAAZ,CAAsBX,IAAtB,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAIA,GAAG,CAACf,IADZ,EAEJkB,KAFI,CAEEC,KAAK,IAAIA,KAFX,CAAP;AAGD,CAxBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests",
      "sourcesContent": [
        "import axios from 'axios';\nimport querystring from 'querystring';\n\nrequire(\"dotenv\").config();\n\naxios.defaults.withCredentials = true;\n\nexport const createUserRegistration = async (username, password) => {\n  const data = { username, password };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n\n  return axios(options)\n    .then(res => {\n      console.log(\"what the hell, \", res.data)\n      return res.data;\n    })\n    .catch(error => {\n      console.log(\"what the hell error\", error) \n    });\n};\n\nexport const verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ email: username.username }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n    console.log(\"what the heck\", error)\n      return { status: 403 };\n    });\n};\n\nexport const resetPassword = ({ jwt, password }) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ jwt, password }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return { status: 403 };\n    });\n};\n\n// user: login\nexport const getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`\n      ).toString(\"base64\")}`\n    },\n    data: querystring.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n\n  return axios(options)\n    .then(res => res.data)\n    .catch(error => error);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551309730061
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar UserController = _interopRequireWildcard(require(\"./controller/\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst UserRoutes = _express.default.Router();\n\nUserRoutes.put(\"/user/:id\", UserController.UpdateUser);\nvar _default = UserRoutes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJVc2VyUm91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsInB1dCIsIlVzZXJDb250cm9sbGVyIiwiVXBkYXRlVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxVQUFVLEdBQUdDLGlCQUFRQyxNQUFSLEVBQW5COztBQUVBRixVQUFVLENBQUNHLEdBQVgsQ0FBZSxXQUFmLEVBQTRCQyxjQUFjLENBQUNDLFVBQTNDO2VBRWVMLFUiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9Vc2VyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgKiBhcyBVc2VyQ29udHJvbGxlciBmcm9tICcuL2NvbnRyb2xsZXIvJztcblxuY29uc3QgVXNlclJvdXRlcyA9IGV4cHJlc3MuUm91dGVyKCk7XG5cblVzZXJSb3V0ZXMucHV0KFwiL3VzZXIvOmlkXCIsIFVzZXJDb250cm9sbGVyLlVwZGF0ZVVzZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBVc2VyUm91dGVzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "UserRoutes",
        "express",
        "Router",
        "put",
        "UserController",
        "UpdateUser"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAEAF,UAAU,CAACG,GAAX,CAAe,WAAf,EAA4BC,cAAc,CAACC,UAA3C;eAEeL,U",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User",
      "sourcesContent": [
        "import express from 'express';\nimport * as UserController from './controller/';\n\nconst UserRoutes = express.Router();\n\nUserRoutes.put(\"/user/:id\", UserController.UpdateUser);\n\nexport default UserRoutes;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551243215792
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"UpdateUser\", {\n  enumerable: true,\n  get: function () {\n    return _updateUser.UpdateUser;\n  }\n});\n\nvar _updateUser = require(\"./updateUser.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvVXNlci9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXBkYXRlVXNlciB9IGZyb20gJy4vdXBkYXRlVXNlci5qcyc7XG5cbmV4cG9ydCB7XG4gIFVwZGF0ZVVzZXIsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;AAAA",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "sourcesContent": [
        "import { UpdateUser } from './updateUser.js';\n\nexport {\n  UpdateUser,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551241385904
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
        "sourceFileName": "updateUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateUser = void 0;\n\nvar _logger = _interopRequireDefault(require(\"../../../util/logger\"));\n\nvar _cookie = _interopRequireDefault(require(\"../../../util/cookie\"));\n\nvar _user = require(\"../httpRequests/user\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst UpdateUser = async (req, res) => {\n  let user = req.body;\n  user.id = req.params.id;\n\n  const jwt = _cookie.default.getAccess(req);\n\n  try {\n    const response = await (0, _user.updateUser)(jwt, user);\n\n    if (response != \"undefined\") {\n      res.status(200).send(response);\n    } else {\n      res.status(403).send({\n        message: \"user update failed\"\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(403).send({\n      message: \"user update failed\"\n    });\n  }\n};\n\nexports.UpdateUser = UpdateUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZVVzZXIuanMiXSwibmFtZXMiOlsiVXBkYXRlVXNlciIsInJlcSIsInJlcyIsInVzZXIiLCJib2R5IiwiaWQiLCJwYXJhbXMiLCJqd3QiLCJjb29raWUiLCJnZXRBY2Nlc3MiLCJyZXNwb25zZSIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFJTyxNQUFNQSxVQUFVLEdBQUcsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQzVDLE1BQUlDLElBQUksR0FBR0YsR0FBRyxDQUFDRyxJQUFmO0FBQ0FELEVBQUFBLElBQUksQ0FBQ0UsRUFBTCxHQUFVSixHQUFHLENBQUNLLE1BQUosQ0FBV0QsRUFBckI7O0FBRUEsUUFBTUUsR0FBRyxHQUFHQyxnQkFBT0MsU0FBUCxDQUFpQlIsR0FBakIsQ0FBWjs7QUFFQSxNQUFJO0FBQ0YsVUFBTVMsUUFBUSxHQUFHLE1BQU0sc0JBQVdILEdBQVgsRUFBZ0JKLElBQWhCLENBQXZCOztBQUVBLFFBQUlPLFFBQVEsSUFBSSxXQUFoQixFQUE2QjtBQUMzQlIsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLFFBQXJCO0FBQ0QsS0FGRCxNQUVPO0FBQ0xSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CQyxRQUFBQSxPQUFPLEVBQUU7QUFEVSxPQUFyQjtBQUdEO0FBQ0YsR0FWRCxDQVVFLE9BQU9DLEtBQVAsRUFBYztBQUNkQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsS0FBWjtBQUNBWixJQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsTUFBQUEsT0FBTyxFQUFFO0FBRFUsS0FBckI7QUFHRDtBQUNGLENBdEJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvVXNlci9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi8uLi8uLi91dGlsL2xvZ2dlcic7XG5pbXBvcnQgY29va2llIGZyb20gJy4uLy4uLy4uL3V0aWwvY29va2llJztcblxuaW1wb3J0IHtcbiAgdXBkYXRlVXNlcixcbn0gZnJvbSBcIi4uL2h0dHBSZXF1ZXN0cy91c2VyXCI7XG5cbmV4cG9ydCBjb25zdCBVcGRhdGVVc2VyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGxldCB1c2VyID0gcmVxLmJvZHk7XG4gIHVzZXIuaWQgPSByZXEucGFyYW1zLmlkO1xuXG4gIGNvbnN0IGp3dCA9IGNvb2tpZS5nZXRBY2Nlc3MocmVxKTtcblxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdXBkYXRlVXNlcihqd3QsIHVzZXIpO1xuXG4gICAgaWYgKHJlc3BvbnNlICE9IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlc3BvbnNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoe1xuICAgICAgICBtZXNzYWdlOiBcInVzZXIgdXBkYXRlIGZhaWxlZFwiXG4gICAgICB9KTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHtcbiAgICAgIG1lc3NhZ2U6IFwidXNlciB1cGRhdGUgZmFpbGVkXCJcbiAgICB9KTtcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "updateUser.js"
      ],
      "names": [
        "UpdateUser",
        "req",
        "res",
        "user",
        "body",
        "id",
        "params",
        "jwt",
        "cookie",
        "getAccess",
        "response",
        "status",
        "send",
        "message",
        "error",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;;;AAIO,MAAMA,UAAU,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,MAAIC,IAAI,GAAGF,GAAG,CAACG,IAAf;AACAD,EAAAA,IAAI,CAACE,EAAL,GAAUJ,GAAG,CAACK,MAAJ,CAAWD,EAArB;;AAEA,QAAME,GAAG,GAAGC,gBAAOC,SAAP,CAAiBR,GAAjB,CAAZ;;AAEA,MAAI;AACF,UAAMS,QAAQ,GAAG,MAAM,sBAAWH,GAAX,EAAgBJ,IAAhB,CAAvB;;AAEA,QAAIO,QAAQ,IAAI,WAAhB,EAA6B;AAC3BR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD,KAFD,MAEO;AACLR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD;AACF,GAVD,CAUE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAZ,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CAtBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "sourcesContent": [
        "import logger from '../../../util/logger';\nimport cookie from '../../../util/cookie';\n\nimport {\n  updateUser,\n} from \"../httpRequests/user\";\n\nexport const UpdateUser = async (req, res) => {\n  let user = req.body;\n  user.id = req.params.id;\n\n  const jwt = cookie.getAccess(req);\n\n  try {\n    const response = await updateUser(jwt, user);\n\n    if (response != \"undefined\") {\n      res.status(200).send(response);\n    } else {\n      res.status(403).send({\n        message: \"user update failed\"\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(403).send({\n      message: \"user update failed\"\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313357793
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nvar _util = require(\"util\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst {\n  combine,\n  printf,\n  timestamp\n} = _winston.format;\nconst {\n  NODE_ENV\n} = process.env;\nconst chalkColors = {\n  INFO: \"seagreen\",\n  DEBUG: \"dodgerblue\",\n  ERROR: \"firebrick\"\n};\n\nfunction formatObject(param) {\n  if ((0, _util.isObject)(param)) {\n    return JSON.stringify(param);\n  }\n\n  return `\"${param}\"`;\n}\n\nconst logFormatter = printf(info => {\n  info.level = info.level.toUpperCase();\n  return _chalk.default.keyword(chalkColors[info.level])(`[${info.timestamp}] [${info.level}]: {\"message\": ${formatObject(info.message)}}`);\n});\nconst logger = (0, _winston.createLogger)({\n  level: NODE_ENV === \"production\" ? \"error\" : \"debug\",\n  format: combine(timestamp({\n    format: () => {\n      return new Date().toLocaleString();\n    }\n  }), logFormatter),\n  transports: [new _winston.transports.Console({})]\n});\nvar _default = logger;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJjb21iaW5lIiwicHJpbnRmIiwidGltZXN0YW1wIiwiZm9ybWF0IiwiTk9ERV9FTlYiLCJwcm9jZXNzIiwiZW52IiwiY2hhbGtDb2xvcnMiLCJJTkZPIiwiREVCVUciLCJFUlJPUiIsImZvcm1hdE9iamVjdCIsInBhcmFtIiwiSlNPTiIsInN0cmluZ2lmeSIsImxvZ0Zvcm1hdHRlciIsImluZm8iLCJsZXZlbCIsInRvVXBwZXJDYXNlIiwiY2hhbGsiLCJrZXl3b3JkIiwibWVzc2FnZSIsImxvZ2dlciIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsInRyYW5zcG9ydHMiLCJDb25zb2xlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQSxNQUFNO0FBQUVBLEVBQUFBLE9BQUY7QUFBV0MsRUFBQUEsTUFBWDtBQUFtQkMsRUFBQUE7QUFBbkIsSUFBaUNDLGVBQXZDO0FBRUEsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWVDLE9BQU8sQ0FBQ0MsR0FBN0I7QUFDQSxNQUFNQyxXQUFXLEdBQUc7QUFDbEJDLEVBQUFBLElBQUksRUFBRSxVQURZO0FBRWxCQyxFQUFBQSxLQUFLLEVBQUUsWUFGVztBQUdsQkMsRUFBQUEsS0FBSyxFQUFFO0FBSFcsQ0FBcEI7O0FBTUEsU0FBU0MsWUFBVCxDQUFzQkMsS0FBdEIsRUFBNkI7QUFDM0IsTUFBSSxvQkFBU0EsS0FBVCxDQUFKLEVBQXFCO0FBQ25CLFdBQU9DLElBQUksQ0FBQ0MsU0FBTCxDQUFlRixLQUFmLENBQVA7QUFDRDs7QUFDRCxTQUFRLElBQUdBLEtBQU0sR0FBakI7QUFDRDs7QUFFRCxNQUFNRyxZQUFZLEdBQUdkLE1BQU0sQ0FBQ2UsSUFBSSxJQUFJO0FBQ2xDQSxFQUFBQSxJQUFJLENBQUNDLEtBQUwsR0FBYUQsSUFBSSxDQUFDQyxLQUFMLENBQVdDLFdBQVgsRUFBYjtBQUNBLFNBQU9DLGVBQU1DLE9BQU4sQ0FBY2IsV0FBVyxDQUFDUyxJQUFJLENBQUNDLEtBQU4sQ0FBekIsRUFDSixJQUFHRCxJQUFJLENBQUNkLFNBQVUsTUFBS2MsSUFBSSxDQUFDQyxLQUFNLGtCQUFpQk4sWUFBWSxDQUM5REssSUFBSSxDQUFDSyxPQUR5RCxDQUU5RCxHQUhHLENBQVA7QUFLRCxDQVAwQixDQUEzQjtBQVNBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkwsRUFBQUEsS0FBSyxFQUFFYixRQUFRLEtBQUssWUFBYixHQUE0QixPQUE1QixHQUFzQyxPQURuQjtBQUUxQkQsRUFBQUEsTUFBTSxFQUFFSCxPQUFPLENBQ2JFLFNBQVMsQ0FBQztBQUNSQyxJQUFBQSxNQUFNLEVBQUUsTUFBTTtBQUNaLGFBQU8sSUFBSW9CLElBQUosR0FBV0MsY0FBWCxFQUFQO0FBQ0Q7QUFITyxHQUFELENBREksRUFNYlQsWUFOYSxDQUZXO0FBVTFCVSxFQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFJQSxvQkFBV0MsT0FBZixDQUF1QixFQUF2QixDQUFEO0FBVmMsQ0FBYixDQUFmO2VBYWVKLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUxvZ2dlciwgZm9ybWF0LCB0cmFuc3BvcnRzIH0gZnJvbSBcIndpbnN0b25cIjtcbmltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSBcInV0aWxcIjtcbmltcG9ydCBjaGFsayBmcm9tIFwiY2hhbGtcIjtcbmNvbnN0IHsgY29tYmluZSwgcHJpbnRmLCB0aW1lc3RhbXAgfSA9IGZvcm1hdDtcblxuY29uc3QgeyBOT0RFX0VOViB9ID0gcHJvY2Vzcy5lbnY7XG5jb25zdCBjaGFsa0NvbG9ycyA9IHtcbiAgSU5GTzogXCJzZWFncmVlblwiLFxuICBERUJVRzogXCJkb2RnZXJibHVlXCIsXG4gIEVSUk9SOiBcImZpcmVicmlja1wiXG59O1xuXG5mdW5jdGlvbiBmb3JtYXRPYmplY3QocGFyYW0pIHtcbiAgaWYgKGlzT2JqZWN0KHBhcmFtKSkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShwYXJhbSk7XG4gIH1cbiAgcmV0dXJuIGBcIiR7cGFyYW19XCJgO1xufVxuXG5jb25zdCBsb2dGb3JtYXR0ZXIgPSBwcmludGYoaW5mbyA9PiB7XG4gIGluZm8ubGV2ZWwgPSBpbmZvLmxldmVsLnRvVXBwZXJDYXNlKCk7XG4gIHJldHVybiBjaGFsay5rZXl3b3JkKGNoYWxrQ29sb3JzW2luZm8ubGV2ZWxdKShcbiAgICBgWyR7aW5mby50aW1lc3RhbXB9XSBbJHtpbmZvLmxldmVsfV06IHtcIm1lc3NhZ2VcIjogJHtmb3JtYXRPYmplY3QoXG4gICAgICBpbmZvLm1lc3NhZ2VcbiAgICApfX1gXG4gICk7XG59KTtcblxuY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcbiAgbGV2ZWw6IE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IFwiZXJyb3JcIiA6IFwiZGVidWdcIixcbiAgZm9ybWF0OiBjb21iaW5lKFxuICAgIHRpbWVzdGFtcCh7XG4gICAgICBmb3JtYXQ6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICBsb2dGb3JtYXR0ZXJcbiAgKSxcbiAgdHJhbnNwb3J0czogW25ldyB0cmFuc3BvcnRzLkNvbnNvbGUoe30pXVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGxvZ2dlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "combine",
        "printf",
        "timestamp",
        "format",
        "NODE_ENV",
        "process",
        "env",
        "chalkColors",
        "INFO",
        "DEBUG",
        "ERROR",
        "formatObject",
        "param",
        "JSON",
        "stringify",
        "logFormatter",
        "info",
        "level",
        "toUpperCase",
        "chalk",
        "keyword",
        "message",
        "logger",
        "Date",
        "toLocaleString",
        "transports",
        "Console"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AACA,MAAM;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,IAAiCC,eAAvC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAACC,GAA7B;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,UADY;AAElBC,EAAAA,KAAK,EAAE,YAFW;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAApB;;AAMA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAI,oBAASA,KAAT,CAAJ,EAAqB;AACnB,WAAOC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAP;AACD;;AACD,SAAQ,IAAGA,KAAM,GAAjB;AACD;;AAED,MAAMG,YAAY,GAAGd,MAAM,CAACe,IAAI,IAAI;AAClCA,EAAAA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,CAAWC,WAAX,EAAb;AACA,SAAOC,eAAMC,OAAN,CAAcb,WAAW,CAACS,IAAI,CAACC,KAAN,CAAzB,EACJ,IAAGD,IAAI,CAACd,SAAU,MAAKc,IAAI,CAACC,KAAM,kBAAiBN,YAAY,CAC9DK,IAAI,CAACK,OADyD,CAE9D,GAHG,CAAP;AAKD,CAP0B,CAA3B;AASA,MAAMC,MAAM,GAAG,2BAAa;AAC1BL,EAAAA,KAAK,EAAEb,QAAQ,KAAK,YAAb,GAA4B,OAA5B,GAAsC,OADnB;AAE1BD,EAAAA,MAAM,EAAEH,OAAO,CACbE,SAAS,CAAC;AACRC,IAAAA,MAAM,EAAE,MAAM;AACZ,aAAO,IAAIoB,IAAJ,GAAWC,cAAX,EAAP;AACD;AAHO,GAAD,CADI,EAMbT,YANa,CAFW;AAU1BU,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,CAAuB,EAAvB,CAAD;AAVc,CAAb,CAAf;eAaeJ,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "sourcesContent": [
        "import { createLogger, format, transports } from \"winston\";\nimport { isObject } from \"util\";\nimport chalk from \"chalk\";\nconst { combine, printf, timestamp } = format;\n\nconst { NODE_ENV } = process.env;\nconst chalkColors = {\n  INFO: \"seagreen\",\n  DEBUG: \"dodgerblue\",\n  ERROR: \"firebrick\"\n};\n\nfunction formatObject(param) {\n  if (isObject(param)) {\n    return JSON.stringify(param);\n  }\n  return `\"${param}\"`;\n}\n\nconst logFormatter = printf(info => {\n  info.level = info.level.toUpperCase();\n  return chalk.keyword(chalkColors[info.level])(\n    `[${info.timestamp}] [${info.level}]: {\"message\": ${formatObject(\n      info.message\n    )}}`\n  );\n});\n\nconst logger = createLogger({\n  level: NODE_ENV === \"production\" ? \"error\" : \"debug\",\n  format: combine(\n    timestamp({\n      format: () => {\n        return new Date().toLocaleString();\n      }\n    }),\n    logFormatter\n  ),\n  transports: [new transports.Console({})]\n});\n\nexport default logger;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551122578240
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
        "sourceFileName": "authSteps.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.authMiddleware = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _rsaPemFromModExp = _interopRequireDefault(require(\"rsa-pem-from-mod-exp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst setPublicKey = dataString => {\n  process.env.BFF_PUBLIC_KEY = dataString;\n}; // handles error in auth steps\n\n\nconst handleError = {\n  throw: (request, res, next, errorPublic, errorPrivate = null) => {\n    // throw an error to exit the auth async function\n    throw new Error(errorPrivate != null ? errorPrivate : errorPublic);\n  },\n  catch: error => {\n    console.log('Exiting due to error');\n    console.log(error);\n  }\n};\nconst authStep = {\n  cookie: (req, res, next) => {\n    if (typeof req.cookies === 'undefined' || typeof req.cookies.access_token === 'undefined') {\n      handleError.throw(req, res, next, 'access_token is required for this request');\n      return false;\n    }\n\n    return true;\n  },\n  getKeyID: (req, res, next) => {\n    const {\n      header\n    } = _jsonwebtoken.default.decode(req.cookies.access_token, {\n      complete: true\n    });\n\n    if (typeof header.kid != 'undefined') return header.kid;\n    handleError.throw(req, res, next, 'could not get key ID from provided jwt');\n    return false;\n  },\n  getKey: (req, res, next) => {\n    const foundKey = JSON.parse(process.env.BFF_TOKEN_KEYS).keys.filter(obj => Object.values(obj).includes(req.keyid))[0];\n\n    if (typeof foundKey != 'undefined') {\n      authStep.setKey(foundKey);\n      return foundKey;\n    }\n\n    handleError.throw(req, res, next, 'access_token is required for this request');\n    return false;\n  },\n  setKey: foundKey => {\n    if (typeof process.env.BFF_PUBLIC_KEY === 'undefined') {\n      setPublicKey(JSON.stringify((0, _rsaPemFromModExp.default)(foundKey.n, foundKey.e)));\n    }\n  },\n  validateJWT: (req, res, next) => {\n    _jsonwebtoken.default.verify(req.cookies.access_token, JSON.parse(process.env.BFF_PUBLIC_KEY), {\n      algorithms: ['RS256']\n    }, (error, authData) => {\n      if (error) handleError.throw(req, res, next, 'Could not validate JWT', error);\n      req.authorization = authData;\n      authStep.success(req, res, next);\n    });\n  },\n  success: (req, res, next) => {\n    next();\n  }\n}; // for each request, validate auth token\n// along the way, we pass authorization data into the request to be used by graphql requests\n\nconst authMiddleware = async (req, res, next) => {\n  try {\n    authStep.cookie(req, res, next);\n    logger.info(\"verify token in cookie: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n\n  try {\n    req.keyid = authStep.getKeyID(req, res, next);\n    logger.info(\"get the keyID from the auth token: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n\n  try {\n    req.key = authStep.getKey(req, res, next);\n    logger.info(\"get the public key using the keyID: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n\n  try {\n    authStep.validateJWT(req, res, next);\n    logger.info(\"validate JWT: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n};\n\nexports.authMiddleware = authMiddleware;\nvar _default = authMiddleware;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "authSteps.js"
      ],
      "names": [
        "setPublicKey",
        "dataString",
        "process",
        "env",
        "BFF_PUBLIC_KEY",
        "handleError",
        "throw",
        "request",
        "res",
        "next",
        "errorPublic",
        "errorPrivate",
        "Error",
        "catch",
        "error",
        "console",
        "log",
        "authStep",
        "cookie",
        "req",
        "cookies",
        "access_token",
        "getKeyID",
        "header",
        "jwt",
        "decode",
        "complete",
        "kid",
        "getKey",
        "foundKey",
        "JSON",
        "parse",
        "BFF_TOKEN_KEYS",
        "keys",
        "filter",
        "obj",
        "Object",
        "values",
        "includes",
        "keyid",
        "setKey",
        "stringify",
        "n",
        "e",
        "validateJWT",
        "verify",
        "algorithms",
        "authData",
        "authorization",
        "success",
        "authMiddleware",
        "logger",
        "info",
        "key"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAIC,UAAD,IAAgB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,GAA6BH,UAA7B;AACD,CAFD,C,CAIA;;;AACA,MAAMI,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CAACC,OAAD,EAAUC,GAAV,EAAeC,IAAf,EAAqBC,WAArB,EAAkCC,YAAY,GAAG,IAAjD,KAA0D;AAC/D;AACA,UAAM,IAAIC,KAAJ,CAAUD,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsCD,WAAhD,CAAN;AACD,GAJiB;AAKlBG,EAAAA,KAAK,EAAGC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AARiB,CAApB;AAWA,MAAMG,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,CAACC,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAI,OAAOU,GAAG,CAACC,OAAX,KAAuB,WAAvB,IAAsC,OAAOD,GAAG,CAACC,OAAJ,CAAYC,YAAnB,KAAoC,WAA9E,EAA2F;AACzFhB,MAAAA,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,2CAAlC;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GARc;AAUfa,EAAAA,QAAQ,EAAE,CAACH,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC5B,UAAM;AAAEc,MAAAA;AAAF,QAAaC,sBAAIC,MAAJ,CAAWN,GAAG,CAACC,OAAJ,CAAYC,YAAvB,EAAqC;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAArC,CAAnB;;AAEA,QAAI,OAAOH,MAAM,CAACI,GAAd,IAAqB,WAAzB,EAAsC,OAAOJ,MAAM,CAACI,GAAd;AAEtCtB,IAAAA,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,wCAAlC;AACA,WAAO,KAAP;AACD,GAjBc;AAmBfmB,EAAAA,MAAM,EAAE,CAACT,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC1B,UAAMoB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW7B,OAAO,CAACC,GAAR,CAAY6B,cAAvB,EAAuCC,IAAvC,CAA4CC,MAA5C,CAAoDC,GAAD,IAClEC,MAAM,CAACC,MAAP,CAAcF,GAAd,EAAmBG,QAAnB,CAA4BnB,GAAG,CAACoB,KAAhC,CADe,EAEf,CAFe,CAAjB;;AAIA,QAAI,OAAOV,QAAP,IAAmB,WAAvB,EAAoC;AAClCZ,MAAAA,QAAQ,CAACuB,MAAT,CAAgBX,QAAhB;AACA,aAAOA,QAAP;AACD;;AACDxB,IAAAA,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,2CAAlC;AACA,WAAO,KAAP;AACD,GA9Bc;AAgCf+B,EAAAA,MAAM,EAAGX,QAAD,IAAc;AACpB,QAAI,OAAO3B,OAAO,CAACC,GAAR,CAAYC,cAAnB,KAAsC,WAA1C,EAAuD;AACrDJ,MAAAA,YAAY,CAAC8B,IAAI,CAACW,SAAL,CAAe,+BAAOZ,QAAQ,CAACa,CAAhB,EAAmBb,QAAQ,CAACc,CAA5B,CAAf,CAAD,CAAZ;AACD;AACF,GApCc;AAsCfC,EAAAA,WAAW,EAAE,CAACzB,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC/Be,0BAAIqB,MAAJ,CAAW1B,GAAG,CAACC,OAAJ,CAAYC,YAAvB,EAAqCS,IAAI,CAACC,KAAL,CAAW7B,OAAO,CAACC,GAAR,CAAYC,cAAvB,CAArC,EAA6E;AAAE0C,MAAAA,UAAU,EAAE,CAAC,OAAD;AAAd,KAA7E,EAAwG,CAAChC,KAAD,EAAQiC,QAAR,KAAqB;AAC3H,UAAIjC,KAAJ,EAAWT,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,wBAAlC,EAA4DK,KAA5D;AACXK,MAAAA,GAAG,CAAC6B,aAAJ,GAAoBD,QAApB;AACA9B,MAAAA,QAAQ,CAACgC,OAAT,CAAiB9B,GAAjB,EAAsBX,GAAtB,EAA2BC,IAA3B;AACD,KAJD;AAKD,GA5Cc;AA8CfwC,EAAAA,OAAO,EAAE,CAAC9B,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC3BA,IAAAA,IAAI;AACL;AAhDc,CAAjB,C,CAmDA;AACA;;AACO,MAAMyC,cAAc,GAAG,OAAO/B,GAAP,EAAYX,GAAZ,EAAiBC,IAAjB,KAA0B;AAEpD,MAAI;AACFQ,IAAAA,QAAQ,CAACC,MAAT,CAAgBC,GAAhB,EAAqBX,GAArB,EAA0BC,IAA1B;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,8BAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;;AAED,MAAI;AACFK,IAAAA,GAAG,CAACoB,KAAJ,GAAYtB,QAAQ,CAACK,QAAT,CAAkBH,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,CAAZ;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,yCAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;;AAED,MAAI;AACFK,IAAAA,GAAG,CAACkC,GAAJ,GAAUpC,QAAQ,CAACW,MAAT,CAAgBT,GAAhB,EAAqBX,GAArB,EAA0BC,IAA1B,CAAV;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,0CAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;;AAED,MAAI;AACFG,IAAAA,QAAQ,CAAC2B,WAAT,CAAqBzB,GAArB,EAA0BX,GAA1B,EAA+BC,IAA/B;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,oBAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;AAEF,CAlCI;;;eAoCQoC,c",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "sourcesContent": [
        "import path from 'path';\nimport fs from 'fs';\nimport jwt from 'jsonwebtoken';\nimport getPem from 'rsa-pem-from-mod-exp';\n\nconst setPublicKey = (dataString) => {\n  process.env.BFF_PUBLIC_KEY = dataString;\n};\n\n// handles error in auth steps\nconst handleError = {\n  throw: (request, res, next, errorPublic, errorPrivate = null) => {\n    // throw an error to exit the auth async function\n    throw new Error(errorPrivate != null ? errorPrivate : errorPublic);\n  },\n  catch: (error) => {\n    console.log('Exiting due to error');\n    console.log(error);\n  }\n};\n\nconst authStep = {\n  cookie: (req, res, next) => {\n    if (typeof req.cookies === 'undefined' || typeof req.cookies.access_token === 'undefined') {\n      handleError.throw(req, res, next, 'access_token is required for this request');\n      return false;\n    }\n\n    return true;\n  },\n\n  getKeyID: (req, res, next) => {\n    const { header } = jwt.decode(req.cookies.access_token, { complete: true });\n\n    if (typeof header.kid != 'undefined') return header.kid;\n\n    handleError.throw(req, res, next, 'could not get key ID from provided jwt');\n    return false;\n  },\n\n  getKey: (req, res, next) => {\n    const foundKey = JSON.parse(process.env.BFF_TOKEN_KEYS).keys.filter((obj) =>\n      Object.values(obj).includes(req.keyid)\n    )[0];\n\n    if (typeof foundKey != 'undefined') {\n      authStep.setKey(foundKey);\n      return foundKey;\n    }\n    handleError.throw(req, res, next, 'access_token is required for this request');\n    return false;\n  },\n\n  setKey: (foundKey) => {\n    if (typeof process.env.BFF_PUBLIC_KEY === 'undefined') {\n      setPublicKey(JSON.stringify(getPem(foundKey.n, foundKey.e)));\n    }\n  },\n\n  validateJWT: (req, res, next) => {\n    jwt.verify(req.cookies.access_token, JSON.parse(process.env.BFF_PUBLIC_KEY), { algorithms: ['RS256'] }, (error, authData) => {\n      if (error) handleError.throw(req, res, next, 'Could not validate JWT', error);\n      req.authorization = authData;\n      authStep.success(req, res, next);\n    });\n  },\n\n  success: (req, res, next) => {\n    next();\n  }\n};\n\n// for each request, validate auth token\n// along the way, we pass authorization data into the request to be used by graphql requests\nexport const authMiddleware = async (req, res, next) => {\n\n    try {\n      authStep.cookie(req, res, next);\n      logger.info(\"verify token in cookie: done\")\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n    try {\n      req.keyid = authStep.getKeyID(req, res, next);\n      logger.info(\"get the keyID from the auth token: done\")\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n    try {\n      req.key = authStep.getKey(req, res, next);\n      logger.info(\"get the public key using the keyID: done\");\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n    try {\n      authStep.validateJWT(req, res, next);\n      logger.info(\"validate JWT: done\");\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n  };\n\nexport default authMiddleware;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551306649980
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = startGraphql;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./resolvers\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nvar _logger = _interopRequireDefault(require(\"../util/logger\"));\n\nvar _authSteps = _interopRequireDefault(require(\"../util/authSteps\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire('dotenv').config();\n\nfunction startGraphql(app) {\n  // *** fake data ***//\n  app.get('/api/advisors/:userId/clients', (req, res) => {\n    const response = [{\n      \"userAccount\": \"2\",\n      \"primaryOwnerFirstName\": \"lewis\",\n      \"primaryOwnerLastName\": \"Dackam\"\n    }, {\n      \"userAccount\": \"1\",\n      \"primaryOwnerFirstName\": \"Olivia\",\n      \"primaryOwnerLastName\": \"Blue\"\n    }];\n    res.send(response);\n  });\n  app.post('/api/analytic/top-holdings', (req, res) => {\n    const response = [{\n      \"ticker\": \"AAPL\",\n      \"securityName\": \"APPLE INC\",\n      \"price\": 339.39,\n      \"holdingValue\": 300000\n    }, {\n      \"ticker\": \"NTFL\",\n      \"securityName\": \"NETFLIX\",\n      \"price\": 499,\n      \"holdingValue\": 490000\n    }];\n    res.send(response);\n  });\n  app.post('/api/analytic/advisor-aum', (req, res) => {\n    const response = [{\n      \"date\": \"2018-12-06\",\n      \"aumValue\": \"12.9999\",\n      \"marketChanged\": \"333999\",\n      \"flowChanged\": \"12000\"\n    }, {\n      \"date\": \"1998-11-11\",\n      \"aumValue\": \"1.2\",\n      \"marketChanged\": \"11.11\",\n      \"flowChanged\": \"1111\"\n    }];\n    res.send(response);\n  });\n  app.post('/api/analytic/top-clients', (req, res) => {\n    const response = [{\n      \"userAccount\": \"1\",\n      \"aumPercentage\": 75.5,\n      \"aumValue\": 175900\n    }, {\n      \"userAccount\": \"2\",\n      \"aumPercentage\": 88.5,\n      \"aumValue\": 80000\n    }];\n    res.send(response);\n  });\n  const server = new _apolloServerExpress.ApolloServer({\n    typeDefs: _schema.default,\n    resolvers: _resolvers.default,\n    dataSources: () => _api.default,\n    context: async ({\n      req\n    }) => {\n      if (!(await (0, _authSteps.default)(req))) {\n        throw new _apolloServerExpress.AuthenticationError('must authenticate');\n      }\n\n      ;\n      return {\n        token: 12131313,\n        env: process.env.BFF_HOST\n      };\n    },\n    formatError: error => {\n      _logger.default.error(error);\n\n      return new Error(\"Internal server error\");\n    }\n  });\n  server.applyMiddleware({\n    cors: true,\n    bodyParser: true,\n    app,\n    path: '/graphql'\n  });\n  return server;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJzdGFydEdyYXBocWwiLCJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZXNwb25zZSIsInNlbmQiLCJwb3N0Iiwic2VydmVyIiwiQXBvbGxvU2VydmVyIiwidHlwZURlZnMiLCJzY2hlbWEiLCJyZXNvbHZlcnMiLCJkYXRhU291cmNlcyIsImFwaSIsImNvbnRleHQiLCJBdXRoZW50aWNhdGlvbkVycm9yIiwidG9rZW4iLCJlbnYiLCJwcm9jZXNzIiwiQkZGX0hPU1QiLCJmb3JtYXRFcnJvciIsImVycm9yIiwibG9nZ2VyIiwiRXJyb3IiLCJhcHBseU1pZGRsZXdhcmUiLCJjb3JzIiwiYm9keVBhcnNlciIsInBhdGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFLQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQVpBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFjZSxTQUFTQyxZQUFULENBQXNCQyxHQUF0QixFQUEyQjtBQUN4QztBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSwrQkFBUixFQUF5QyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNyRCxVQUFNQyxRQUFRLEdBQUcsQ0FDZjtBQUNFLHFCQUFnQixHQURsQjtBQUVFLCtCQUEwQixPQUY1QjtBQUdFLDhCQUF5QjtBQUgzQixLQURlLEVBTWY7QUFDRSxxQkFBZ0IsR0FEbEI7QUFFRSwrQkFBMEIsUUFGNUI7QUFHRSw4QkFBeUI7QUFIM0IsS0FOZSxDQUFqQjtBQWFFRCxJQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0QsUUFBVDtBQUNELEdBZkg7QUFpQkFKLEVBQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTLDRCQUFULEVBQXVDLENBQUNKLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ25ELFVBQU1DLFFBQVEsR0FBRyxDQUNmO0FBQ0UsZ0JBQVcsTUFEYjtBQUVFLHNCQUFpQixXQUZuQjtBQUdFLGVBQVUsTUFIWjtBQUlFLHNCQUFpQjtBQUpuQixLQURlLEVBT2Y7QUFDRSxnQkFBVyxNQURiO0FBRUUsc0JBQWlCLFNBRm5CO0FBR0UsZUFBVSxHQUhaO0FBSUUsc0JBQWlCO0FBSm5CLEtBUGUsQ0FBakI7QUFlQUQsSUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQVNELFFBQVQ7QUFDRCxHQWpCRDtBQW1CQUosRUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVMsMkJBQVQsRUFBc0MsQ0FBQ0osR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDbEQsVUFBTUMsUUFBUSxHQUFHLENBQ2Y7QUFDRSxjQUFTLFlBRFg7QUFFRSxrQkFBYSxTQUZmO0FBR0UsdUJBQWtCLFFBSHBCO0FBSUUscUJBQWdCO0FBSmxCLEtBRGUsRUFPZjtBQUNFLGNBQVMsWUFEWDtBQUVFLGtCQUFhLEtBRmY7QUFHRSx1QkFBa0IsT0FIcEI7QUFJRSxxQkFBZ0I7QUFKbEIsS0FQZSxDQUFqQjtBQWVBRCxJQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0QsUUFBVDtBQUNELEdBakJEO0FBb0JBSixFQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBUywyQkFBVCxFQUFzQyxDQUFDSixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNsRCxVQUFNQyxRQUFRLEdBQUcsQ0FDZDtBQUVFLHFCQUFnQixHQUZsQjtBQUlFLHVCQUFrQixJQUpwQjtBQU1FLGtCQUFhO0FBTmYsS0FEYyxFQVVkO0FBRUUscUJBQWdCLEdBRmxCO0FBSUUsdUJBQWtCLElBSnBCO0FBTUUsa0JBQVk7QUFOZCxLQVZjLENBQWpCO0FBcUJDRCxJQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0QsUUFBVDtBQUNELEdBdkJGO0FBeUJBLFFBQU1HLE1BQU0sR0FBRyxJQUFJQyxpQ0FBSixDQUFpQjtBQUM3QkMsSUFBQUEsUUFBUSxFQUFFQyxlQURtQjtBQUU3QkMsSUFBQUEsU0FBUyxFQUFUQSxrQkFGNkI7QUFHN0JDLElBQUFBLFdBQVcsRUFBRSxNQUFNQyxZQUhVO0FBSTdCQyxJQUFBQSxPQUFPLEVBQUUsT0FBTztBQUFFWixNQUFBQTtBQUFGLEtBQVAsS0FBbUI7QUFDMUIsVUFBSSxFQUFDLE1BQU0sd0JBQVNBLEdBQVQsQ0FBUCxDQUFKLEVBQTBCO0FBQ3hCLGNBQU0sSUFBSWEsd0NBQUosQ0FBd0IsbUJBQXhCLENBQU47QUFDRDs7QUFBQTtBQUVELGFBQU87QUFDTEMsUUFBQUEsS0FBSyxFQUFFLFFBREY7QUFFTEMsUUFBQUEsR0FBRyxFQUFFQyxPQUFPLENBQUNELEdBQVIsQ0FBWUU7QUFGWixPQUFQO0FBSUQsS0FiNEI7QUFjN0JDLElBQUFBLFdBQVcsRUFBRUMsS0FBSyxJQUFJO0FBQ3BCQyxzQkFBT0QsS0FBUCxDQUFhQSxLQUFiOztBQUNBLGFBQU8sSUFBSUUsS0FBSixDQUFVLHVCQUFWLENBQVA7QUFDRDtBQWpCNEIsR0FBakIsQ0FBZjtBQW9CQ2hCLEVBQUFBLE1BQU0sQ0FBQ2lCLGVBQVAsQ0FBdUI7QUFBRUMsSUFBQUEsSUFBSSxFQUFFLElBQVI7QUFBY0MsSUFBQUEsVUFBVSxFQUFFLElBQTFCO0FBQWdDMUIsSUFBQUEsR0FBaEM7QUFBcUMyQixJQUFBQSxJQUFJLEVBQUU7QUFBM0MsR0FBdkI7QUFFQSxTQUFPcEIsTUFBUDtBQUNGIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKVxuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IFxuICBBcG9sbG9TZXJ2ZXIsXG4gIEF1dGhlbnRpY2F0aW9uRXJyb3Jcbn0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcblxuaW1wb3J0IHNjaGVtYSBmcm9tICcuL3NjaGVtYSc7XG5pbXBvcnQgcmVzb2x2ZXJzIGZyb20gJy4vcmVzb2x2ZXJzJztcbmltcG9ydCBhcGkgZnJvbSAnLi9hcGknO1xuaW1wb3J0IGxvZ2dlciBmcm9tIFwiLi4vdXRpbC9sb2dnZXJcIjtcbmltcG9ydCBhdXRoU3RlcCBmcm9tICcuLi91dGlsL2F1dGhTdGVwcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0YXJ0R3JhcGhxbChhcHApIHsgXG4gIC8vICoqKiBmYWtlIGRhdGEgKioqLy9cbiAgYXBwLmdldCgnL2FwaS9hZHZpc29ycy86dXNlcklkL2NsaWVudHMnLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IFtcbiAgICAgIHtcbiAgICAgICAgXCJ1c2VyQWNjb3VudFwiIDogXCIyXCIsXG4gICAgICAgIFwicHJpbWFyeU93bmVyRmlyc3ROYW1lXCIgOiBcImxld2lzXCIsXG4gICAgICAgIFwicHJpbWFyeU93bmVyTGFzdE5hbWVcIiA6IFwiRGFja2FtXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIFwidXNlckFjY291bnRcIiA6IFwiMVwiLFxuICAgICAgICBcInByaW1hcnlPd25lckZpcnN0TmFtZVwiIDogXCJPbGl2aWFcIixcbiAgICAgICAgXCJwcmltYXJ5T3duZXJMYXN0TmFtZVwiIDogXCJCbHVlXCJcbiAgICAgIH1cbiAgICAgIF07XG4gIFxuICAgICAgcmVzLnNlbmQocmVzcG9uc2UpO1xuICAgIH0pO1xuICBcbiAgYXBwLnBvc3QoJy9hcGkvYW5hbHl0aWMvdG9wLWhvbGRpbmdzJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBbXG4gICAgICB7XG4gICAgICAgIFwidGlja2VyXCIgOiBcIkFBUExcIiwgXG4gICAgICAgIFwic2VjdXJpdHlOYW1lXCIgOiBcIkFQUExFIElOQ1wiLFxuICAgICAgICBcInByaWNlXCIgOiAzMzkuMzksXG4gICAgICAgIFwiaG9sZGluZ1ZhbHVlXCIgOiAzMDAwMDBcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIFwidGlja2VyXCIgOiBcIk5URkxcIiwgXG4gICAgICAgIFwic2VjdXJpdHlOYW1lXCIgOiBcIk5FVEZMSVhcIixcbiAgICAgICAgXCJwcmljZVwiIDogNDk5LFxuICAgICAgICBcImhvbGRpbmdWYWx1ZVwiIDogNDkwMDAwXG4gICAgICB9LFxuICAgIF07XG4gIFxuICAgIHJlcy5zZW5kKHJlc3BvbnNlKTtcbiAgfSk7XG4gIFxuICBhcHAucG9zdCgnL2FwaS9hbmFseXRpYy9hZHZpc29yLWF1bScsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gW1xuICAgICAge1xuICAgICAgICBcImRhdGVcIiA6IFwiMjAxOC0xMi0wNlwiLFxuICAgICAgICBcImF1bVZhbHVlXCIgOiBcIjEyLjk5OTlcIixcbiAgICAgICAgXCJtYXJrZXRDaGFuZ2VkXCIgOiBcIjMzMzk5OVwiLFxuICAgICAgICBcImZsb3dDaGFuZ2VkXCIgOiBcIjEyMDAwXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBcImRhdGVcIiA6IFwiMTk5OC0xMS0xMVwiLFxuICAgICAgICBcImF1bVZhbHVlXCIgOiBcIjEuMlwiLFxuICAgICAgICBcIm1hcmtldENoYW5nZWRcIiA6IFwiMTEuMTFcIixcbiAgICAgICAgXCJmbG93Q2hhbmdlZFwiIDogXCIxMTExXCIsXG4gICAgICB9LFxuICAgIF07XG4gIFxuICAgIHJlcy5zZW5kKHJlc3BvbnNlKTtcbiAgfSk7XG4gIFxuICBcbiAgYXBwLnBvc3QoJy9hcGkvYW5hbHl0aWMvdG9wLWNsaWVudHMnLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IFtcbiAgICAgICB7XG4gICBcbiAgICAgICAgIFwidXNlckFjY291bnRcIiA6IFwiMVwiLFxuICAgXG4gICAgICAgICBcImF1bVBlcmNlbnRhZ2VcIiA6IDc1LjUsXG4gICBcbiAgICAgICAgIFwiYXVtVmFsdWVcIiA6IDE3NTkwMFxuICAgXG4gICAgICAgfSxcbiAgICAgICB7XG4gICBcbiAgICAgICAgIFwidXNlckFjY291bnRcIiA6IFwiMlwiLFxuICAgXG4gICAgICAgICBcImF1bVBlcmNlbnRhZ2VcIiA6IDg4LjUsXG4gICBcbiAgICAgICAgIFwiYXVtVmFsdWVcIiA6ODAwMDAgXG4gICBcbiAgICAgICB9XG4gICAgIF07XG4gICBcbiAgICAgcmVzLnNlbmQocmVzcG9uc2UpO1xuICAgfSk7XG4gICBcbiAgY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7XG4gICAgIHR5cGVEZWZzOiBzY2hlbWEsXG4gICAgIHJlc29sdmVycyxcbiAgICAgZGF0YVNvdXJjZXM6ICgpID0+IGFwaSxcbiAgICAgY29udGV4dDogYXN5bmMgKHsgcmVxIH0pID0+IHtcbiAgICAgICBpZiAoIWF3YWl0IGF1dGhTdGVwKHJlcSkpIHtcbiAgICAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKCdtdXN0IGF1dGhlbnRpY2F0ZScpO1xuICAgICAgIH07XG5cbiAgICAgICByZXR1cm4geyBcbiAgICAgICAgIHRva2VuOiAxMjEzMTMxMyxcbiAgICAgICAgIGVudjogcHJvY2Vzcy5lbnYuQkZGX0hPU1RcbiAgICAgICB9XG4gICAgIH0sXG4gICAgIGZvcm1hdEVycm9yOiBlcnJvciA9PiB7XG4gICAgICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIpO1xuICAgICB9XG4gICB9KTtcbiAgIFxuICAgc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGNvcnM6IHRydWUsIGJvZHlQYXJzZXI6IHRydWUsIGFwcCwgcGF0aDogJy9ncmFwaHFsJyB9KTtcblxuICAgcmV0dXJuIHNlcnZlcjtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "startGraphql",
        "app",
        "get",
        "req",
        "res",
        "response",
        "send",
        "post",
        "server",
        "ApolloServer",
        "typeDefs",
        "schema",
        "resolvers",
        "dataSources",
        "api",
        "context",
        "AuthenticationError",
        "token",
        "env",
        "process",
        "BFF_HOST",
        "formatError",
        "error",
        "logger",
        "Error",
        "applyMiddleware",
        "cors",
        "bodyParser",
        "path"
      ],
      "mappings": ";;;;;;;AAEA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;AAZAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAce,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACxC;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,+BAAR,EAAyC,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrD,UAAMC,QAAQ,GAAG,CACf;AACE,qBAAgB,GADlB;AAEE,+BAA0B,OAF5B;AAGE,8BAAyB;AAH3B,KADe,EAMf;AACE,qBAAgB,GADlB;AAEE,+BAA0B,QAF5B;AAGE,8BAAyB;AAH3B,KANe,CAAjB;AAaED,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAfH;AAiBAJ,EAAAA,GAAG,CAACM,IAAJ,CAAS,4BAAT,EAAuC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AACnD,UAAMC,QAAQ,GAAG,CACf;AACE,gBAAW,MADb;AAEE,sBAAiB,WAFnB;AAGE,eAAU,MAHZ;AAIE,sBAAiB;AAJnB,KADe,EAOf;AACE,gBAAW,MADb;AAEE,sBAAiB,SAFnB;AAGE,eAAU,GAHZ;AAIE,sBAAiB;AAJnB,KAPe,CAAjB;AAeAD,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAjBD;AAmBAJ,EAAAA,GAAG,CAACM,IAAJ,CAAS,2BAAT,EAAsC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClD,UAAMC,QAAQ,GAAG,CACf;AACE,cAAS,YADX;AAEE,kBAAa,SAFf;AAGE,uBAAkB,QAHpB;AAIE,qBAAgB;AAJlB,KADe,EAOf;AACE,cAAS,YADX;AAEE,kBAAa,KAFf;AAGE,uBAAkB,OAHpB;AAIE,qBAAgB;AAJlB,KAPe,CAAjB;AAeAD,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAjBD;AAoBAJ,EAAAA,GAAG,CAACM,IAAJ,CAAS,2BAAT,EAAsC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClD,UAAMC,QAAQ,GAAG,CACd;AAEE,qBAAgB,GAFlB;AAIE,uBAAkB,IAJpB;AAME,kBAAa;AANf,KADc,EAUd;AAEE,qBAAgB,GAFlB;AAIE,uBAAkB,IAJpB;AAME,kBAAY;AANd,KAVc,CAAjB;AAqBCD,IAAAA,GAAG,CAACE,IAAJ,CAASD,QAAT;AACD,GAvBF;AAyBA,QAAMG,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC7BC,IAAAA,QAAQ,EAAEC,eADmB;AAE7BC,IAAAA,SAAS,EAATA,kBAF6B;AAG7BC,IAAAA,WAAW,EAAE,MAAMC,YAHU;AAI7BC,IAAAA,OAAO,EAAE,OAAO;AAAEZ,MAAAA;AAAF,KAAP,KAAmB;AAC1B,UAAI,EAAC,MAAM,wBAASA,GAAT,CAAP,CAAJ,EAA0B;AACxB,cAAM,IAAIa,wCAAJ,CAAwB,mBAAxB,CAAN;AACD;;AAAA;AAED,aAAO;AACLC,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,CAAYE;AAFZ,OAAP;AAID,KAb4B;AAc7BC,IAAAA,WAAW,EAAEC,KAAK,IAAI;AACpBC,sBAAOD,KAAP,CAAaA,KAAb;;AACA,aAAO,IAAIE,KAAJ,CAAU,uBAAV,CAAP;AACD;AAjB4B,GAAjB,CAAf;AAoBChB,EAAAA,MAAM,CAACiB,eAAP,CAAuB;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,UAAU,EAAE,IAA1B;AAAgC1B,IAAAA,GAAhC;AAAqC2B,IAAAA,IAAI,EAAE;AAA3C,GAAvB;AAEA,SAAOpB,MAAP;AACF",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "require('dotenv').config()\n\nimport express from 'express';\nimport { \n  ApolloServer,\n  AuthenticationError\n} from 'apollo-server-express';\n\nimport schema from './schema';\nimport resolvers from './resolvers';\nimport api from './api';\nimport logger from \"../util/logger\";\nimport authStep from '../util/authSteps';\n\nexport default function startGraphql(app) { \n  // *** fake data ***//\n  app.get('/api/advisors/:userId/clients', (req, res) => {\n    const response = [\n      {\n        \"userAccount\" : \"2\",\n        \"primaryOwnerFirstName\" : \"lewis\",\n        \"primaryOwnerLastName\" : \"Dackam\"\n      },\n      {\n        \"userAccount\" : \"1\",\n        \"primaryOwnerFirstName\" : \"Olivia\",\n        \"primaryOwnerLastName\" : \"Blue\"\n      }\n      ];\n  \n      res.send(response);\n    });\n  \n  app.post('/api/analytic/top-holdings', (req, res) => {\n    const response = [\n      {\n        \"ticker\" : \"AAPL\", \n        \"securityName\" : \"APPLE INC\",\n        \"price\" : 339.39,\n        \"holdingValue\" : 300000\n      },\n      {\n        \"ticker\" : \"NTFL\", \n        \"securityName\" : \"NETFLIX\",\n        \"price\" : 499,\n        \"holdingValue\" : 490000\n      },\n    ];\n  \n    res.send(response);\n  });\n  \n  app.post('/api/analytic/advisor-aum', (req, res) => {\n    const response = [\n      {\n        \"date\" : \"2018-12-06\",\n        \"aumValue\" : \"12.9999\",\n        \"marketChanged\" : \"333999\",\n        \"flowChanged\" : \"12000\",\n      },\n      {\n        \"date\" : \"1998-11-11\",\n        \"aumValue\" : \"1.2\",\n        \"marketChanged\" : \"11.11\",\n        \"flowChanged\" : \"1111\",\n      },\n    ];\n  \n    res.send(response);\n  });\n  \n  \n  app.post('/api/analytic/top-clients', (req, res) => {\n    const response = [\n       {\n   \n         \"userAccount\" : \"1\",\n   \n         \"aumPercentage\" : 75.5,\n   \n         \"aumValue\" : 175900\n   \n       },\n       {\n   \n         \"userAccount\" : \"2\",\n   \n         \"aumPercentage\" : 88.5,\n   \n         \"aumValue\" :80000 \n   \n       }\n     ];\n   \n     res.send(response);\n   });\n   \n  const server = new ApolloServer({\n     typeDefs: schema,\n     resolvers,\n     dataSources: () => api,\n     context: async ({ req }) => {\n       if (!await authStep(req)) {\n         throw new AuthenticationError('must authenticate');\n       };\n\n       return { \n         token: 12131313,\n         env: process.env.BFF_HOST\n       }\n     },\n     formatError: error => {\n       logger.error(error);\n       return new Error(\"Internal server error\");\n     }\n   });\n   \n   server.applyMiddleware({ cors: true, bodyParser: true, app, path: '/graphql' });\n\n   return server;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551307065992
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _schema = _interopRequireDefault(require(\"./AumHistory/schema\"));\n\nvar _schema2 = _interopRequireDefault(require(\"./TopClients/schema\"));\n\nvar _schema3 = _interopRequireDefault(require(\"./TopHoldings/schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst LinkSchema = _apolloServerExpress.gql`\n  type Query {\n    _: Boolean \n  }\n\n  type Mutation {\n    _: Boolean \n  }\n\n  type Subscription {\n    _: Boolean \n  }\n`;\nvar _default = [LinkSchema, _schema.default, _schema2.default, _schema3.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJMaW5rU2NoZW1hIiwiZ3FsIiwiQXVtSGlzdG9yeVNjaGVtYSIsIlRvcENsaWVudHNTY2hlbWEiLCJUb3BIb2xkaW5nc1NjaGVtYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTs7Ozs7Ozs7Ozs7O0NBQXZCO2VBY2UsQ0FDYkQsVUFEYSxFQUViRSxlQUZhLEVBR2JDLGdCQUhhLEVBSWJDLGdCQUphLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmltcG9ydCBBdW1IaXN0b3J5U2NoZW1hIGZyb20gJy4vQXVtSGlzdG9yeS9zY2hlbWEnO1xuaW1wb3J0IFRvcENsaWVudHNTY2hlbWEgZnJvbSAnLi9Ub3BDbGllbnRzL3NjaGVtYSc7XG5pbXBvcnQgVG9wSG9sZGluZ3NTY2hlbWEgZnJvbSAnLi9Ub3BIb2xkaW5ncy9zY2hlbWEnOyBcblxuY29uc3QgTGlua1NjaGVtYSA9IGdxbGBcbiAgdHlwZSBRdWVyeSB7XG4gICAgXzogQm9vbGVhbiBcbiAgfVxuXG4gIHR5cGUgTXV0YXRpb24ge1xuICAgIF86IEJvb2xlYW4gXG4gIH1cblxuICB0eXBlIFN1YnNjcmlwdGlvbiB7XG4gICAgXzogQm9vbGVhbiBcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgW1xuICBMaW5rU2NoZW1hLFxuICBBdW1IaXN0b3J5U2NoZW1hLFxuICBUb3BDbGllbnRzU2NoZW1hLFxuICBUb3BIb2xkaW5nc1NjaGVtYSxcbl07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "LinkSchema",
        "gql",
        "AumHistorySchema",
        "TopClientsSchema",
        "TopHoldingsSchema"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAEA,MAAMA,UAAU,GAAGC,wBAAI;;;;;;;;;;;;CAAvB;eAce,CACbD,UADa,EAEbE,eAFa,EAGbC,gBAHa,EAIbC,gBAJa,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nimport AumHistorySchema from './AumHistory/schema';\nimport TopClientsSchema from './TopClients/schema';\nimport TopHoldingsSchema from './TopHoldings/schema'; \n\nconst LinkSchema = gql`\n  type Query {\n    _: Boolean \n  }\n\n  type Mutation {\n    _: Boolean \n  }\n\n  type Subscription {\n    _: Boolean \n  }\n`;\n\nexport default [\n  LinkSchema,\n  AumHistorySchema,\n  TopClientsSchema,\n  TopHoldingsSchema,\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220711466
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nconst schema = _apolloServerExpress.gql`\n  enum AllowedDateRangeType {\n    FIXED\n    CUSTOM\n  }\n\n  enum AllowedDateRange {\n    FIVE_DAYS\n    ONE_MONTH\n    SIX_MONTH\n    YEAR_TO_DATE\n    ONE_YEAR\n    FIVE_YEAR\n  }\n\n  enum AllowedDateIntervalUnit {\n    D\n    M\n    Q\n    S\n    Y\n  }\n\n  extend type Query {\n    aumHistory(\n      dateRangeType: AllowedDateRangeType, \n      dateRange: AllowedDateRange, \n      dateInterval: Int,\n      dateIntervalUnit: AllowedDateIntervalUnit,\n      ): [AdvisorAUM!] \n  }\n\n  type AdvisorAUM {\n    date: String!\n    aumValue: Float!\n    marketChanged: Float!\n    aumPercentage: Float!\n  }\n`;\nvar _default = schema;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLHdCQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQUFuQjtlQXdDZUQsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGV3aXNkYWNrYW0vRG9jdW1lbnRzL2FsdHJ1aXN0LWJhY2tlbmQtZm9yLWZyb250ZW5kL3NyYy9ncmFwaHFsL0F1bUhpc3RvcnkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5jb25zdCBzY2hlbWEgPSBncWxgXG4gIGVudW0gQWxsb3dlZERhdGVSYW5nZVR5cGUge1xuICAgIEZJWEVEXG4gICAgQ1VTVE9NXG4gIH1cblxuICBlbnVtIEFsbG93ZWREYXRlUmFuZ2Uge1xuICAgIEZJVkVfREFZU1xuICAgIE9ORV9NT05USFxuICAgIFNJWF9NT05USFxuICAgIFlFQVJfVE9fREFURVxuICAgIE9ORV9ZRUFSXG4gICAgRklWRV9ZRUFSXG4gIH1cblxuICBlbnVtIEFsbG93ZWREYXRlSW50ZXJ2YWxVbml0IHtcbiAgICBEXG4gICAgTVxuICAgIFFcbiAgICBTXG4gICAgWVxuICB9XG5cbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIGF1bUhpc3RvcnkoXG4gICAgICBkYXRlUmFuZ2VUeXBlOiBBbGxvd2VkRGF0ZVJhbmdlVHlwZSwgXG4gICAgICBkYXRlUmFuZ2U6IEFsbG93ZWREYXRlUmFuZ2UsIFxuICAgICAgZGF0ZUludGVydmFsOiBJbnQsXG4gICAgICBkYXRlSW50ZXJ2YWxVbml0OiBBbGxvd2VkRGF0ZUludGVydmFsVW5pdCxcbiAgICAgICk6IFtBZHZpc29yQVVNIV0gXG4gIH1cblxuICB0eXBlIEFkdmlzb3JBVU0ge1xuICAgIGRhdGU6IFN0cmluZyFcbiAgICBhdW1WYWx1ZTogRmxvYXQhXG4gICAgbWFya2V0Q2hhbmdlZDogRmxvYXQhXG4gICAgYXVtUGVyY2VudGFnZTogRmxvYXQhXG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHNjaGVtYTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,MAAM,GAAGC,wBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnB;eAwCeD,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst schema = gql`\n  enum AllowedDateRangeType {\n    FIXED\n    CUSTOM\n  }\n\n  enum AllowedDateRange {\n    FIVE_DAYS\n    ONE_MONTH\n    SIX_MONTH\n    YEAR_TO_DATE\n    ONE_YEAR\n    FIVE_YEAR\n  }\n\n  enum AllowedDateIntervalUnit {\n    D\n    M\n    Q\n    S\n    Y\n  }\n\n  extend type Query {\n    aumHistory(\n      dateRangeType: AllowedDateRangeType, \n      dateRange: AllowedDateRange, \n      dateInterval: Int,\n      dateIntervalUnit: AllowedDateIntervalUnit,\n      ): [AdvisorAUM!] \n  }\n\n  type AdvisorAUM {\n    date: String!\n    aumValue: Float!\n    marketChanged: Float!\n    aumPercentage: Float!\n  }\n`;\n\nexport default schema;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220199020
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nconst schema = _apolloServerExpress.gql`\n  extend type Query {\n     topClients(sortBy: String, limit: Int, offset: Int): [Client!] \n  }\n\n  type Client {\n    primaryOwnerFirstName: String!\n    primaryOwnerLastName: String!\n    aumValue: Float!\n    aumPercentage: Float!\n  }\n`;\nvar _default = schema;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLHdCQUFJOzs7Ozs7Ozs7OztDQUFuQjtlQWFlRCxNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wQ2xpZW50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmNvbnN0IHNjaGVtYSA9IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgICB0b3BDbGllbnRzKHNvcnRCeTogU3RyaW5nLCBsaW1pdDogSW50LCBvZmZzZXQ6IEludCk6IFtDbGllbnQhXSBcbiAgfVxuXG4gIHR5cGUgQ2xpZW50IHtcbiAgICBwcmltYXJ5T3duZXJGaXJzdE5hbWU6IFN0cmluZyFcbiAgICBwcmltYXJ5T3duZXJMYXN0TmFtZTogU3RyaW5nIVxuICAgIGF1bVZhbHVlOiBGbG9hdCFcbiAgICBhdW1QZXJjZW50YWdlOiBGbG9hdCFcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgc2NoZW1hO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,MAAM,GAAGC,wBAAI;;;;;;;;;;;CAAnB;eAaeD,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst schema = gql`\n  extend type Query {\n     topClients(sortBy: String, limit: Int, offset: Int): [Client!] \n  }\n\n  type Client {\n    primaryOwnerFirstName: String!\n    primaryOwnerLastName: String!\n    aumValue: Float!\n    aumPercentage: Float!\n  }\n`;\n\nexport default schema;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551207570217
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nconst schema = _apolloServerExpress.gql`\n  extend type Query {\n     topHoldings(sortBy:String, limit: Int, offset: Int): [Holding!] \n  }\n\n  type Holding {\n    ticker: String!,\n    securityName: String!,\n    price: Float!,\n    holdingValue: Float!,\n  }\n`;\nvar _default = schema;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLHdCQUFJOzs7Ozs7Ozs7OztDQUFuQjtlQWFlRCxNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wSG9sZGluZ3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5jb25zdCBzY2hlbWEgPSBncWxgXG4gIGV4dGVuZCB0eXBlIFF1ZXJ5IHtcbiAgICAgdG9wSG9sZGluZ3Moc29ydEJ5OlN0cmluZywgbGltaXQ6IEludCwgb2Zmc2V0OiBJbnQpOiBbSG9sZGluZyFdIFxuICB9XG5cbiAgdHlwZSBIb2xkaW5nIHtcbiAgICB0aWNrZXI6IFN0cmluZyEsXG4gICAgc2VjdXJpdHlOYW1lOiBTdHJpbmchLFxuICAgIHByaWNlOiBGbG9hdCEsXG4gICAgaG9sZGluZ1ZhbHVlOiBGbG9hdCEsXG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHNjaGVtYTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,MAAM,GAAGC,wBAAI;;;;;;;;;;;CAAnB;eAaeD,M",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst schema = gql`\n  extend type Query {\n     topHoldings(sortBy:String, limit: Int, offset: Int): [Holding!] \n  }\n\n  type Holding {\n    ticker: String!,\n    securityName: String!,\n    price: Float!,\n    holdingValue: Float!,\n  }\n`;\n\nexport default schema;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551207583313
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _resolvers = _interopRequireDefault(require(\"./AumHistory/resolvers.js\"));\n\nvar _resolvers2 = _interopRequireDefault(require(\"./TopClients/resolvers\"));\n\nvar _resolvers3 = _interopRequireDefault(require(\"./TopHoldings/resolvers.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = [_resolvers.default, _resolvers2.default, _resolvers3.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJhdW1IaXN0b3J5UmVzb2x2ZXJzIiwidG9wQ2xpZW50c1Jlc29sdmVycyIsInRvcEhvbGRpbmdzUmVzb2x2ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7ZUFFZSxDQUNiQSxrQkFEYSxFQUViQyxtQkFGYSxFQUdiQyxtQkFIYSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXVtSGlzdG9yeVJlc29sdmVycyBmcm9tICcuL0F1bUhpc3RvcnkvcmVzb2x2ZXJzLmpzJztcbmltcG9ydCB0b3BDbGllbnRzUmVzb2x2ZXJzIGZyb20gJy4vVG9wQ2xpZW50cy9yZXNvbHZlcnMnO1xuaW1wb3J0IHRvcEhvbGRpbmdzUmVzb2x2ZXJzIGZyb20gJy4vVG9wSG9sZGluZ3MvcmVzb2x2ZXJzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgW1xuICBhdW1IaXN0b3J5UmVzb2x2ZXJzLFxuICB0b3BDbGllbnRzUmVzb2x2ZXJzLFxuICB0b3BIb2xkaW5nc1Jlc29sdmVycyxcbl07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "aumHistoryResolvers",
        "topClientsResolvers",
        "topHoldingsResolvers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;eAEe,CACbA,kBADa,EAEbC,mBAFa,EAGbC,mBAHa,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "import aumHistoryResolvers from './AumHistory/resolvers.js';\nimport topClientsResolvers from './TopClients/resolvers';\nimport topHoldingsResolvers from './TopHoldings/resolvers.js';\n\nexport default [\n  aumHistoryResolvers,\n  topClientsResolvers,\n  topHoldingsResolvers,\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220731892
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst resolvers = {\n  AllowedDateRangeType: {\n    FIXED: 'fixed',\n    CUSTOM: 'custom'\n  },\n  AllowedDateRange: {\n    FIVE_DAYS: '5D',\n    ONE_MONTH: '1M',\n    SIX_MONTH: '6M',\n    YEAR_TO_DATE: 'YTD',\n    // refers to the period beginning the first day of the current calendar year up to the current date\n    ONE_YEAR: '1Y',\n    FIVE_YEAR: '5Y'\n  },\n  Query: {\n    // args: dateRangeType, dateRange, dateIntervalUnit, dateInterval\n    aumHistory: async (parent, args, {\n      dataSources: {\n        AumHistoryAPI\n      },\n      token\n    }) => {\n      const data = await AumHistoryAPI.GET(args, token);\n      console.log(\"here we go\", data);\n      return data.map(client => client);\n    }\n  }\n};\nvar _default = resolvers;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlcnMiLCJBbGxvd2VkRGF0ZVJhbmdlVHlwZSIsIkZJWEVEIiwiQ1VTVE9NIiwiQWxsb3dlZERhdGVSYW5nZSIsIkZJVkVfREFZUyIsIk9ORV9NT05USCIsIlNJWF9NT05USCIsIllFQVJfVE9fREFURSIsIk9ORV9ZRUFSIiwiRklWRV9ZRUFSIiwiUXVlcnkiLCJhdW1IaXN0b3J5IiwicGFyZW50IiwiYXJncyIsImRhdGFTb3VyY2VzIiwiQXVtSGlzdG9yeUFQSSIsInRva2VuIiwiZGF0YSIsIkdFVCIsImNvbnNvbGUiLCJsb2ciLCJtYXAiLCJjbGllbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsb0JBQW9CLEVBQUU7QUFDcEJDLElBQUFBLEtBQUssRUFBRSxPQURhO0FBRXBCQyxJQUFBQSxNQUFNLEVBQUU7QUFGWSxHQUROO0FBS2hCQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNoQkMsSUFBQUEsU0FBUyxFQUFFLElBREs7QUFFaEJDLElBQUFBLFNBQVMsRUFBRSxJQUZLO0FBR2hCQyxJQUFBQSxTQUFTLEVBQUUsSUFISztBQUloQkMsSUFBQUEsWUFBWSxFQUFFLEtBSkU7QUFJSztBQUNyQkMsSUFBQUEsUUFBUSxFQUFFLElBTE07QUFNaEJDLElBQUFBLFNBQVMsRUFBRTtBQU5LLEdBTEY7QUFhaEJDLEVBQUFBLEtBQUssRUFBRTtBQUNMO0FBQ0FDLElBQUFBLFVBQVUsRUFBRSxPQUFPQyxNQUFQLEVBQWVDLElBQWYsRUFBcUI7QUFBRUMsTUFBQUEsV0FBVyxFQUFFO0FBQUVDLFFBQUFBO0FBQUYsT0FBZjtBQUFrQ0MsTUFBQUE7QUFBbEMsS0FBckIsS0FBbUU7QUFDN0UsWUFBTUMsSUFBSSxHQUFHLE1BQU1GLGFBQWEsQ0FBQ0csR0FBZCxDQUFrQkwsSUFBbEIsRUFBd0JHLEtBQXhCLENBQW5CO0FBQ0FHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVosRUFBMEJILElBQTFCO0FBQ0EsYUFBT0EsSUFBSSxDQUFDSSxHQUFMLENBQVNDLE1BQU0sSUFBSUEsTUFBbkIsQ0FBUDtBQUNEO0FBTkk7QUFiUyxDQUFsQjtlQXVCZXZCLFMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbC9BdW1IaXN0b3J5Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmVzb2x2ZXJzID0ge1xuICBBbGxvd2VkRGF0ZVJhbmdlVHlwZToge1xuICAgIEZJWEVEOiAnZml4ZWQnLFxuICAgIENVU1RPTTogJ2N1c3RvbScsXG4gIH0sXG4gIEFsbG93ZWREYXRlUmFuZ2U6IHtcbiAgICBGSVZFX0RBWVM6ICc1RCcsXG4gICAgT05FX01PTlRIOiAnMU0nLFxuICAgIFNJWF9NT05USDogJzZNJyxcbiAgICBZRUFSX1RPX0RBVEU6ICdZVEQnLCAvLyByZWZlcnMgdG8gdGhlIHBlcmlvZCBiZWdpbm5pbmcgdGhlIGZpcnN0IGRheSBvZiB0aGUgY3VycmVudCBjYWxlbmRhciB5ZWFyIHVwIHRvIHRoZSBjdXJyZW50IGRhdGVcbiAgICBPTkVfWUVBUjogJzFZJyxcbiAgICBGSVZFX1lFQVI6ICc1WScsXG4gIH0sXG4gIFF1ZXJ5OiB7XG4gICAgLy8gYXJnczogZGF0ZVJhbmdlVHlwZSwgZGF0ZVJhbmdlLCBkYXRlSW50ZXJ2YWxVbml0LCBkYXRlSW50ZXJ2YWxcbiAgICBhdW1IaXN0b3J5OiBhc3luYyAocGFyZW50LCBhcmdzLCB7IGRhdGFTb3VyY2VzOiB7IEF1bUhpc3RvcnlBUEkgfSwgdG9rZW4gfSkgPT4ge1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IEF1bUhpc3RvcnlBUEkuR0VUKGFyZ3MsIHRva2VuKTsgXG4gICAgICBjb25zb2xlLmxvZyhcImhlcmUgd2UgZ29cIiwgZGF0YSk7XG4gICAgICByZXR1cm4gZGF0YS5tYXAoY2xpZW50ID0+IGNsaWVudCk7XG4gICAgfSBcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZXJzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "AllowedDateRangeType",
        "FIXED",
        "CUSTOM",
        "AllowedDateRange",
        "FIVE_DAYS",
        "ONE_MONTH",
        "SIX_MONTH",
        "YEAR_TO_DATE",
        "ONE_YEAR",
        "FIVE_YEAR",
        "Query",
        "aumHistory",
        "parent",
        "args",
        "dataSources",
        "AumHistoryAPI",
        "token",
        "data",
        "GET",
        "console",
        "log",
        "map",
        "client"
      ],
      "mappings": ";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,KAAK,EAAE,OADa;AAEpBC,IAAAA,MAAM,EAAE;AAFY,GADN;AAKhBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,IADK;AAEhBC,IAAAA,SAAS,EAAE,IAFK;AAGhBC,IAAAA,SAAS,EAAE,IAHK;AAIhBC,IAAAA,YAAY,EAAE,KAJE;AAIK;AACrBC,IAAAA,QAAQ,EAAE,IALM;AAMhBC,IAAAA,SAAS,EAAE;AANK,GALF;AAahBC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,UAAU,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqB;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA;AAAF,OAAf;AAAkCC,MAAAA;AAAlC,KAArB,KAAmE;AAC7E,YAAMC,IAAI,GAAG,MAAMF,aAAa,CAACG,GAAd,CAAkBL,IAAlB,EAAwBG,KAAxB,CAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;AACA,aAAOA,IAAI,CAACI,GAAL,CAASC,MAAM,IAAIA,MAAnB,CAAP;AACD;AANI;AAbS,CAAlB;eAuBevB,S",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "sourcesContent": [
        "const resolvers = {\n  AllowedDateRangeType: {\n    FIXED: 'fixed',\n    CUSTOM: 'custom',\n  },\n  AllowedDateRange: {\n    FIVE_DAYS: '5D',\n    ONE_MONTH: '1M',\n    SIX_MONTH: '6M',\n    YEAR_TO_DATE: 'YTD', // refers to the period beginning the first day of the current calendar year up to the current date\n    ONE_YEAR: '1Y',\n    FIVE_YEAR: '5Y',\n  },\n  Query: {\n    // args: dateRangeType, dateRange, dateIntervalUnit, dateInterval\n    aumHistory: async (parent, args, { dataSources: { AumHistoryAPI }, token }) => {\n      const data = await AumHistoryAPI.GET(args, token); \n      console.log(\"here we go\", data);\n      return data.map(client => client);\n    } \n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551220796427
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nconst mergeObjectWithSameId = (firstArray, secondArray) => Object.values(firstArray.concat(secondArray).reduce((acc, next) => {\n  acc[next.userAccount] = Object.assign(acc[next.userAccount] || {}, next);\n  return acc;\n}, {}));\n\nconst resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topClients: async (parent, args, {\n      dataSources: {\n        topClientsAPI,\n        usersAPI\n      },\n      userID,\n      token\n    }) => {\n      const topClients = await topClientsAPI.GET(args, token);\n      const users = await usersAPI.GET(userID); // i need the names first name\n\n      const mergedResponses = mergeObjectWithSameId(topClients, users);\n      return mergedResponses.map(client => client);\n    }\n  }\n};\nvar _default = resolvers;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJtZXJnZU9iamVjdFdpdGhTYW1lSWQiLCJmaXJzdEFycmF5Iiwic2Vjb25kQXJyYXkiLCJPYmplY3QiLCJ2YWx1ZXMiLCJjb25jYXQiLCJyZWR1Y2UiLCJhY2MiLCJuZXh0IiwidXNlckFjY291bnQiLCJhc3NpZ24iLCJyZXNvbHZlcnMiLCJRdWVyeSIsInRvcENsaWVudHMiLCJwYXJlbnQiLCJhcmdzIiwiZGF0YVNvdXJjZXMiLCJ0b3BDbGllbnRzQVBJIiwidXNlcnNBUEkiLCJ1c2VySUQiLCJ0b2tlbiIsIkdFVCIsInVzZXJzIiwibWVyZ2VkUmVzcG9uc2VzIiwibWFwIiwiY2xpZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEscUJBQXFCLEdBQUcsQ0FBQ0MsVUFBRCxFQUFhQyxXQUFiLEtBQzVCQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsVUFBVSxDQUFDSSxNQUFYLENBQWtCSCxXQUFsQixFQUErQkksTUFBL0IsQ0FBc0MsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDakVELEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxXQUFOLENBQUgsR0FBd0JOLE1BQU0sQ0FBQ08sTUFBUCxDQUFjSCxHQUFHLENBQUNDLElBQUksQ0FBQ0MsV0FBTixDQUFILElBQXlCLEVBQXZDLEVBQTJDRCxJQUEzQyxDQUF4QjtBQUNBLFNBQU9ELEdBQVA7QUFDRCxDQUhhLEVBR1gsRUFIVyxDQUFkLENBREY7O0FBTUEsTUFBTUksU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTDtBQUNBQyxJQUFBQSxVQUFVLEVBQUUsT0FDVkMsTUFEVSxFQUNGQyxJQURFLEVBQ0k7QUFBRUMsTUFBQUEsV0FBVyxFQUFFO0FBQUVDLFFBQUFBLGFBQUY7QUFBaUJDLFFBQUFBO0FBQWpCLE9BQWY7QUFBMkNDLE1BQUFBLE1BQTNDO0FBQW1EQyxNQUFBQTtBQUFuRCxLQURKLEtBQ2tFO0FBQzFFLFlBQU1QLFVBQVUsR0FBRyxNQUFNSSxhQUFhLENBQUNJLEdBQWQsQ0FBa0JOLElBQWxCLEVBQXdCSyxLQUF4QixDQUF6QjtBQUNBLFlBQU1FLEtBQUssR0FBRyxNQUFNSixRQUFRLENBQUNHLEdBQVQsQ0FBYUYsTUFBYixDQUFwQixDQUYwRSxDQUVoQzs7QUFDMUMsWUFBTUksZUFBZSxHQUFHdkIscUJBQXFCLENBQUNhLFVBQUQsRUFBYVMsS0FBYixDQUE3QztBQUNBLGFBQU9DLGVBQWUsQ0FBQ0MsR0FBaEIsQ0FBb0JDLE1BQU0sSUFBSUEsTUFBOUIsQ0FBUDtBQUNEO0FBUkU7QUFEUyxDQUFsQjtlQWFlZCxTIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wQ2xpZW50cyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1lcmdlT2JqZWN0V2l0aFNhbWVJZCA9IChmaXJzdEFycmF5LCBzZWNvbmRBcnJheSkgPT4gXG4gIE9iamVjdC52YWx1ZXMoZmlyc3RBcnJheS5jb25jYXQoc2Vjb25kQXJyYXkpLnJlZHVjZSgoYWNjLCBuZXh0KSA9PiB7XG4gICAgYWNjW25leHQudXNlckFjY291bnRdID0gT2JqZWN0LmFzc2lnbihhY2NbbmV4dC51c2VyQWNjb3VudF0gfHwge30sIG5leHQpOyBcbiAgICByZXR1cm4gYWNjXG4gIH0sIHt9KSk7XG5cbmNvbnN0IHJlc29sdmVycyA9IHtcbiAgUXVlcnk6IHtcbiAgICAvLyBhcmdzOiBzb3J0QnksIGxpbWl0LCBvZmZzZXRcbiAgICB0b3BDbGllbnRzOiBhc3luYyAoXG4gICAgICBwYXJlbnQsIGFyZ3MsIHsgZGF0YVNvdXJjZXM6IHsgdG9wQ2xpZW50c0FQSSwgdXNlcnNBUEl9LCB1c2VySUQsIHRva2VufSkgPT4ge1xuICAgICAgICBjb25zdCB0b3BDbGllbnRzID0gYXdhaXQgdG9wQ2xpZW50c0FQSS5HRVQoYXJncywgdG9rZW4pOyBcbiAgICAgICAgY29uc3QgdXNlcnMgPSBhd2FpdCB1c2Vyc0FQSS5HRVQodXNlcklEKTsgLy8gaSBuZWVkIHRoZSBuYW1lcyBmaXJzdCBuYW1lXG4gICAgICAgIGNvbnN0IG1lcmdlZFJlc3BvbnNlcyA9IG1lcmdlT2JqZWN0V2l0aFNhbWVJZCh0b3BDbGllbnRzLCB1c2Vycyk7IFxuICAgICAgICByZXR1cm4gbWVyZ2VkUmVzcG9uc2VzLm1hcChjbGllbnQgPT4gY2xpZW50KTtcbiAgICAgIH0gXG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVycztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "mergeObjectWithSameId",
        "firstArray",
        "secondArray",
        "Object",
        "values",
        "concat",
        "reduce",
        "acc",
        "next",
        "userAccount",
        "assign",
        "resolvers",
        "Query",
        "topClients",
        "parent",
        "args",
        "dataSources",
        "topClientsAPI",
        "usersAPI",
        "userID",
        "token",
        "GET",
        "users",
        "mergedResponses",
        "map",
        "client"
      ],
      "mappings": ";;;;;;;AAAA,MAAMA,qBAAqB,GAAG,CAACC,UAAD,EAAaC,WAAb,KAC5BC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACI,MAAX,CAAkBH,WAAlB,EAA+BI,MAA/B,CAAsC,CAACC,GAAD,EAAMC,IAAN,KAAe;AACjED,EAAAA,GAAG,CAACC,IAAI,CAACC,WAAN,CAAH,GAAwBN,MAAM,CAACO,MAAP,CAAcH,GAAG,CAACC,IAAI,CAACC,WAAN,CAAH,IAAyB,EAAvC,EAA2CD,IAA3C,CAAxB;AACA,SAAOD,GAAP;AACD,CAHa,EAGX,EAHW,CAAd,CADF;;AAMA,MAAMI,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,UAAU,EAAE,OACVC,MADU,EACFC,IADE,EACI;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,OAAf;AAA2CC,MAAAA,MAA3C;AAAmDC,MAAAA;AAAnD,KADJ,KACkE;AAC1E,YAAMP,UAAU,GAAG,MAAMI,aAAa,CAACI,GAAd,CAAkBN,IAAlB,EAAwBK,KAAxB,CAAzB;AACA,YAAME,KAAK,GAAG,MAAMJ,QAAQ,CAACG,GAAT,CAAaF,MAAb,CAApB,CAF0E,CAEhC;;AAC1C,YAAMI,eAAe,GAAGvB,qBAAqB,CAACa,UAAD,EAAaS,KAAb,CAA7C;AACA,aAAOC,eAAe,CAACC,GAAhB,CAAoBC,MAAM,IAAIA,MAA9B,CAAP;AACD;AARE;AADS,CAAlB;eAaed,S",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "sourcesContent": [
        "const mergeObjectWithSameId = (firstArray, secondArray) => \n  Object.values(firstArray.concat(secondArray).reduce((acc, next) => {\n    acc[next.userAccount] = Object.assign(acc[next.userAccount] || {}, next); \n    return acc\n  }, {}));\n\nconst resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topClients: async (\n      parent, args, { dataSources: { topClientsAPI, usersAPI}, userID, token}) => {\n        const topClients = await topClientsAPI.GET(args, token); \n        const users = await usersAPI.GET(userID); // i need the names first name\n        const mergedResponses = mergeObjectWithSameId(topClients, users); \n        return mergedResponses.map(client => client);\n      } \n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218318996
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topHoldings: async (parent, args, {\n      dataSources: {\n        topHoldingsAPI\n      },\n      token\n    }) => {\n      const data = await topHoldingsAPI.GET(args, token);\n      return data.map(client => client);\n    }\n  }\n};\nvar _default = resolvers;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlcnMiLCJRdWVyeSIsInRvcEhvbGRpbmdzIiwicGFyZW50IiwiYXJncyIsImRhdGFTb3VyY2VzIiwidG9wSG9sZGluZ3NBUEkiLCJ0b2tlbiIsImRhdGEiLCJHRVQiLCJtYXAiLCJjbGllbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0w7QUFDQUMsSUFBQUEsV0FBVyxFQUFFLE9BQU9DLE1BQVAsRUFBZUMsSUFBZixFQUFxQjtBQUFFQyxNQUFBQSxXQUFXLEVBQUU7QUFBRUMsUUFBQUE7QUFBRixPQUFmO0FBQW1DQyxNQUFBQTtBQUFuQyxLQUFyQixLQUFvRTtBQUMvRSxZQUFNQyxJQUFJLEdBQUcsTUFBTUYsY0FBYyxDQUFDRyxHQUFmLENBQW1CTCxJQUFuQixFQUF5QkcsS0FBekIsQ0FBbkI7QUFDQSxhQUFPQyxJQUFJLENBQUNFLEdBQUwsQ0FBU0MsTUFBTSxJQUFJQSxNQUFuQixDQUFQO0FBQ0Q7QUFMSTtBQURTLENBQWxCO2VBVWVYLFMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbC9Ub3BIb2xkaW5ncyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlc29sdmVycyA9IHtcbiAgUXVlcnk6IHtcbiAgICAvLyBhcmdzOiBzb3J0QnksIGxpbWl0LCBvZmZzZXRcbiAgICB0b3BIb2xkaW5nczogYXN5bmMgKHBhcmVudCwgYXJncywgeyBkYXRhU291cmNlczogeyB0b3BIb2xkaW5nc0FQSSB9LCB0b2tlbiB9KSA9PiB7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgdG9wSG9sZGluZ3NBUEkuR0VUKGFyZ3MsIHRva2VuKTsgXG4gICAgICByZXR1cm4gZGF0YS5tYXAoY2xpZW50ID0+IGNsaWVudCk7XG4gICAgfSBcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZXJzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "Query",
        "topHoldings",
        "parent",
        "args",
        "dataSources",
        "topHoldingsAPI",
        "token",
        "data",
        "GET",
        "map",
        "client"
      ],
      "mappings": ";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,WAAW,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqB;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA;AAAF,OAAf;AAAmCC,MAAAA;AAAnC,KAArB,KAAoE;AAC/E,YAAMC,IAAI,GAAG,MAAMF,cAAc,CAACG,GAAf,CAAmBL,IAAnB,EAAyBG,KAAzB,CAAnB;AACA,aAAOC,IAAI,CAACE,GAAL,CAASC,MAAM,IAAIA,MAAnB,CAAP;AACD;AALI;AADS,CAAlB;eAUeX,S",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "sourcesContent": [
        "const resolvers = {\n  Query: {\n    // args: sortBy, limit, offset\n    topHoldings: async (parent, args, { dataSources: { topHoldingsAPI }, token }) => {\n      const data = await topHoldingsAPI.GET(args, token); \n      return data.map(client => client);\n    } \n  }\n};\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218350687
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/initializeEnvs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
        "sourceFileName": "initializeEnvs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = initializeEnvs;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nvar _logger = _interopRequireDefault(require(\"./util/logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire('dotenv').config();\n\nconst getClientToken = payload => {\n  const data = {\n    grant_type: \"client_credentials\"\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${Buffer.from(`${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`).toString(\"base64\")}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: _querystring.default.stringify(data),\n    url: \"http://localhost:8080/oauth/token\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res.data;\n  });\n}; // public key\n\n\nconst getTokenKeys = payload => {\n  const options = {\n    method: \"GET\",\n    url: \"http://localhost:8080/oauth/token_keys\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res.data;\n  });\n};\n\nconst setClientToken = dataString => {\n  process.env.BFF_CLIENT_TOKEN = dataString; // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst setTokenKeys = dataString => {\n  process.env.BFF_TOKEN_KEYS = dataString; // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst setPublicKey = dataString => {\n  process.env.BFF_PUBLIC_KEY = dataString;\n};\n\nconst initializeClientToken = async () => {\n  if (typeof BFF_CLIENT_TOKEN === \"undefined\") {\n    try {\n      setClientToken(JSON.stringify((await getClientToken())));\n\n      _logger.default.info(\"\\n ///setClientToken\");\n\n      _logger.default.info(process.env.BFF_CLIENT_TOKEN);\n    } catch (data) {\n      _logger.default.info(\"\\n setClientToken Error\", data); // console.log(response.data);\n\n    }\n  }\n};\n\nconst initializePublicKeys = async () => {\n  if (typeof BFF_TOKEN_KEYS === \"undefined\") {\n    try {\n      setTokenKeys(JSON.stringify((await getTokenKeys())));\n\n      _logger.default.info(\"\\n ///setTokenKeys\");\n\n      _logger.default.info(process.env.BFF_TOKEN_KEYS);\n    } catch (data) {\n      console.info(\"\\n setTokenKeys Error\", data); // console.log(response.data);\n    }\n  }\n};\n\nfunction initializeEnvs() {\n  initializeClientToken();\n  initializePublicKeys();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "initializeEnvs.js"
      ],
      "names": [
        "require",
        "config",
        "getClientToken",
        "payload",
        "data",
        "grant_type",
        "options",
        "method",
        "headers",
        "Authorization",
        "Buffer",
        "from",
        "process",
        "env",
        "BFF_CLIENT_ID",
        "BFF_CLIENT_SECRET",
        "toString",
        "querystring",
        "stringify",
        "url",
        "then",
        "res",
        "getTokenKeys",
        "setClientToken",
        "dataString",
        "BFF_CLIENT_TOKEN",
        "setTokenKeys",
        "BFF_TOKEN_KEYS",
        "setPublicKey",
        "BFF_PUBLIC_KEY",
        "initializeClientToken",
        "JSON",
        "logger",
        "info",
        "initializePublicKeys",
        "console",
        "initializeEnvs"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,IAAI;AAChC,QAAMC,IAAI,GAAG;AACXC,IAAAA,UAAU,EAAE;AADD,GAAb;AAIA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEPC,MAAAA,aAAa,EAAG,SAAQC,MAAM,CAACC,IAAP,CACrB,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,IAAGF,OAAO,CAACC,GAAR,CAAYE,iBAAkB,EADxC,EAEtBC,QAFsB,CAEb,QAFa,CAEH,EAJd;AAKP,uBAAiB;AALV,KAFK;AASdZ,IAAAA,IAAI,EAAEa,qBAAYC,SAAZ,CAAsBd,IAAtB,CATQ;AAUde,IAAAA,GAAG,EAAE;AAVS,GAAhB;AAaA,SAAO,oBAAMb,OAAN,EAAec,IAAf,CAAoBC,GAAG,IAAI;AAChC,WAAOA,GAAG,CAACjB,IAAX;AACD,GAFM,CAAP;AAGD,CArBD,C,CAuBA;;;AACA,MAAMkB,YAAY,GAAGnB,OAAO,IAAI;AAC9B,QAAMG,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdY,IAAAA,GAAG,EAAE;AAFS,GAAhB;AAKA,SAAO,oBAAMb,OAAN,EAAec,IAAf,CAAoBC,GAAG,IAAI;AAChC,WAAOA,GAAG,CAACjB,IAAX;AACD,GAFM,CAAP;AAGD,CATD;;AAWA,MAAMmB,cAAc,GAAIC,UAAD,IAAgB;AACrCZ,EAAAA,OAAO,CAACC,GAAR,CAAYY,gBAAZ,GAA+BD,UAA/B,CADqC,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CATD;;AAWA,MAAME,YAAY,GAAIF,UAAD,IAAgB;AACnCZ,EAAAA,OAAO,CAACC,GAAR,CAAYc,cAAZ,GAA6BH,UAA7B,CADmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CATD;;AAWA,MAAMI,YAAY,GAAIJ,UAAD,IAAgB;AACnCZ,EAAAA,OAAO,CAACC,GAAR,CAAYgB,cAAZ,GAA6BL,UAA7B;AACD,CAFD;;AAIA,MAAMM,qBAAqB,GAAG,YAAY;AACxC,MAAI,OAAOL,gBAAP,KAA4B,WAAhC,EAA6C;AAC3C,QAAI;AACFF,MAAAA,cAAc,CAACQ,IAAI,CAACb,SAAL,EAAe,MAAMhB,cAAc,EAAnC,EAAD,CAAd;;AACA8B,sBAAOC,IAAP,CAAY,sBAAZ;;AACAD,sBAAOC,IAAP,CAAYrB,OAAO,CAACC,GAAR,CAAYY,gBAAxB;AACD,KAJD,CAIE,OAAOrB,IAAP,EAAa;AACb4B,sBAAOC,IAAP,CAAY,yBAAZ,EAAuC7B,IAAvC,EADa,CAEb;;AACD;AACF;AACF,CAXD;;AAaA,MAAM8B,oBAAoB,GAAG,YAAY;AACvC,MAAI,OAAOP,cAAP,KAA0B,WAA9B,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACK,IAAI,CAACb,SAAL,EAAe,MAAMI,YAAY,EAAjC,EAAD,CAAZ;;AACAU,sBAAOC,IAAP,CAAY,oBAAZ;;AACAD,sBAAOC,IAAP,CAAYrB,OAAO,CAACC,GAAR,CAAYc,cAAxB;AACD,KAJD,CAIE,OAAOvB,IAAP,EAAa;AACb+B,MAAAA,OAAO,CAACF,IAAR,CAAa,uBAAb,EAAsC7B,IAAtC,EADa,CAEb;AACD;AACF;AACF,CAXD;;AAae,SAASgC,cAAT,GAA0B;AACvCN,EAAAA,qBAAqB;AACrBI,EAAAA,oBAAoB;AACrB",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "sourcesContent": [
        "import axios from 'axios'; \nimport querystring from 'querystring';\nimport logger from './util/logger';\n\nrequire('dotenv').config();\n\nconst getClientToken = payload => {\n  const data = {\n    grant_type: \"client_credentials\"\n  };\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`\n      ).toString(\"base64\")}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: querystring.stringify(data),\n    url: \"http://localhost:8080/oauth/token\"\n  };\n\n  return axios(options).then(res => {\n    return res.data;\n  });\n};\n\n// public key\nconst getTokenKeys = payload => {\n  const options = {\n    method: \"GET\",\n    url: \"http://localhost:8080/oauth/token_keys\"\n  };\n\n  return axios(options).then(res => {\n    return res.data;\n  });\n};\n\nconst setClientToken = (dataString) => {\n  process.env.BFF_CLIENT_TOKEN = dataString;\n  // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst setTokenKeys = (dataString) => {\n  process.env.BFF_TOKEN_KEYS = dataString;\n  // {\n  //   \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRldi1qd3QtMSJ9.eyJzY29wZSI6WyJ1c2Vycy5hZG1pbiJdLCJleHAiOjE1NDk0Mjg4MDAsImF1dGhvcml0aWVzIjpbInVzZXJzLmFkbWluIl0sImp0aSI6ImZmNmE2ZjNlLTIyNTgtNDJjNi1iYjIxLTMyMTBkNjAxNzVhMCIsImNsaWVudF9pZCI6ImFsdHJ1aXN0LWFwcCJ9.joDyoBWkjjY5LCEtI8WaeJjlAGKBeJFddA5KdRhTRxJYnEcxpvyArPfLX0E9p3-S4Qp4cnCmvF5L9RaPdCoHmuuDD6eVYNDR5bjbKSdmFhpyh85ctdptZhIuPSme7yymO3gQRbUSPc_mGKLDzb3zG8zS8RAFyQYVjvvQduzqT4dot2OPhszZ5nscXGHPJxYCg3j57R7Xz5tsB2DAeouO6y20WlFwhvAc0mCHYzgDTZ9XW4Kt7hu43qxanwWuiS4g0RLAW8QvsgqfOcmutkCBkoxmpZH7qG3NMXN_yUfHVF3VhtDo-5A0R2bjpqKF72GiGzf9nJW5hqVy-KtbjjAhTw\",\n  //   \"token_type\": \"bearer\",\n  //   \"expires_in\": 35999,\n  //   \"scope\": \"users.admin\",\n  //   \"jti\": \"ff6a6f3e-2258-42c6-bb21-3210d60175a0\"\n  // }\n};\n\nconst setPublicKey = (dataString) => {\n  process.env.BFF_PUBLIC_KEY = dataString;\n};\n\nconst initializeClientToken = async () => {\n  if (typeof BFF_CLIENT_TOKEN === \"undefined\") {\n    try {\n      setClientToken(JSON.stringify(await getClientToken()));\n      logger.info(\"\\n ///setClientToken\");\n      logger.info(process.env.BFF_CLIENT_TOKEN);\n    } catch (data) {\n      logger.info(\"\\n setClientToken Error\", data);\n      // console.log(response.data);\n    }\n  }\n}\n\nconst initializePublicKeys = async () => {\n  if (typeof BFF_TOKEN_KEYS === \"undefined\") {\n    try {\n      setTokenKeys(JSON.stringify(await getTokenKeys()));\n      logger.info(\"\\n ///setTokenKeys\");\n      logger.info(process.env.BFF_TOKEN_KEYS);\n    } catch (data) {\n      console.info(\"\\n setTokenKeys Error\", data);\n      // console.log(response.data);\n    }\n  }\n}\n\nexport default function initializeEnvs() {\n  initializeClientToken();\n  initializePublicKeys();\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551295076504
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _api = _interopRequireDefault(require(\"./AumHistory/api\"));\n\nvar _api2 = _interopRequireDefault(require(\"./TopClients/api\"));\n\nvar _api3 = _interopRequireDefault(require(\"./TopHoldings/api\"));\n\nvar _api4 = _interopRequireDefault(require(\"./Users/api\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  AumHistoryAPI: new _api.default(),\n  topClientsAPI: new _api2.default(),\n  topHoldingsAPI: new _api3.default(),\n  usersAPI: new _api4.default()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJBdW1IaXN0b3J5QVBJIiwidG9wQ2xpZW50c0FQSSIsIlRvcENsaWVudHNBUEkiLCJ0b3BIb2xkaW5nc0FQSSIsIlRvcEhvbGRpbmdzQVBJIiwidXNlcnNBUEkiLCJVc2Vyc0FQSSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O2VBRWU7QUFDYkEsRUFBQUEsYUFBYSxFQUFFLElBQUlBLFlBQUosRUFERjtBQUViQyxFQUFBQSxhQUFhLEVBQUUsSUFBSUMsYUFBSixFQUZGO0FBR2JDLEVBQUFBLGNBQWMsRUFBRSxJQUFJQyxhQUFKLEVBSEg7QUFJYkMsRUFBQUEsUUFBUSxFQUFFLElBQUlDLGFBQUo7QUFKRyxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXVtSGlzdG9yeUFQSSBmcm9tICcuL0F1bUhpc3RvcnkvYXBpJztcbmltcG9ydCBUb3BDbGllbnRzQVBJIGZyb20gJy4vVG9wQ2xpZW50cy9hcGknO1xuaW1wb3J0IFRvcEhvbGRpbmdzQVBJIGZyb20gJy4vVG9wSG9sZGluZ3MvYXBpJztcbmltcG9ydCBVc2Vyc0FQSSBmcm9tICcuL1VzZXJzL2FwaSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgQXVtSGlzdG9yeUFQSTogbmV3IEF1bUhpc3RvcnlBUEksXG4gIHRvcENsaWVudHNBUEk6IG5ldyBUb3BDbGllbnRzQVBJLFxuICB0b3BIb2xkaW5nc0FQSTogbmV3IFRvcEhvbGRpbmdzQVBJLFxuICB1c2Vyc0FQSTogbmV3IFVzZXJzQVBJXG59O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "AumHistoryAPI",
        "topClientsAPI",
        "TopClientsAPI",
        "topHoldingsAPI",
        "TopHoldingsAPI",
        "usersAPI",
        "UsersAPI"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;eAEe;AACbA,EAAAA,aAAa,EAAE,IAAIA,YAAJ,EADF;AAEbC,EAAAA,aAAa,EAAE,IAAIC,aAAJ,EAFF;AAGbC,EAAAA,cAAc,EAAE,IAAIC,aAAJ,EAHH;AAIbC,EAAAA,QAAQ,EAAE,IAAIC,aAAJ;AAJG,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql",
      "sourcesContent": [
        "import AumHistoryAPI from './AumHistory/api';\nimport TopClientsAPI from './TopClients/api';\nimport TopHoldingsAPI from './TopHoldings/api';\nimport UsersAPI from './Users/api';\n\nexport default {\n  AumHistoryAPI: new AumHistoryAPI,\n  topClientsAPI: new TopClientsAPI,\n  topHoldingsAPI: new TopHoldingsAPI,\n  usersAPI: new UsersAPI\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218842805
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass AUMHistoryAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const {\n      dateRangeType,\n      dateRange,\n      dateIntervalUnit,\n      dateInterval\n    } = args;\n    return this.post('advisor-aum', // path\n    {\n      dateRangeType: dateRangeType || 'fixed',\n      dateRange: dateRange || '5D',\n      dateInterval: dateInterval || 0,\n      dateIntervalUnit: dateIntervalUnit || 'D'\n    } // request body\n    );\n  }\n\n}\n\nexports.default = AUMHistoryAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJBVU1IaXN0b3J5QVBJIiwiUkVTVERhdGFTb3VyY2UiLCJiYXNlVVJMIiwiY29udGV4dCIsImVudiIsIkdFVCIsImFyZ3MiLCJ0b2tlbiIsImRhdGVSYW5nZVR5cGUiLCJkYXRlUmFuZ2UiLCJkYXRlSW50ZXJ2YWxVbml0IiwiZGF0ZUludGVydmFsIiwicG9zdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVlLE1BQU1BLGFBQU4sU0FBNEJDLG9DQUE1QixDQUEyQztBQUN4RCxNQUFJQyxPQUFKLEdBQWM7QUFDWixXQUFRLEdBQUUsS0FBS0MsT0FBTCxDQUFhQyxHQUFJLGdCQUEzQjtBQUNEOztBQUVELFFBQU1DLEdBQU4sQ0FBVUMsSUFBVixFQUFnQkMsS0FBaEIsRUFBdUI7QUFDckIsVUFBTTtBQUNKQyxNQUFBQSxhQURJO0FBRUpDLE1BQUFBLFNBRkk7QUFHSkMsTUFBQUEsZ0JBSEk7QUFJSkMsTUFBQUE7QUFKSSxRQUtGTCxJQUxKO0FBTUEsV0FBTyxLQUFLTSxJQUFMLENBQ04sYUFETSxFQUNTO0FBQ2Q7QUFDRUosTUFBQUEsYUFBYSxFQUFFQSxhQUFhLElBQUksT0FEbEM7QUFFRUMsTUFBQUEsU0FBUyxFQUFFQSxTQUFTLElBQUksSUFGMUI7QUFHRUUsTUFBQUEsWUFBWSxFQUFFQSxZQUFZLElBQUksQ0FIaEM7QUFJRUQsTUFBQUEsZ0JBQWdCLEVBQUVBLGdCQUFnQixJQUFJO0FBSnhDLEtBRkssQ0FPRjtBQVBFLEtBQVA7QUFTRDs7QUFyQnVEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvQXVtSGlzdG9yeSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJFU1REYXRhU291cmNlIH0gZnJvbSAnYXBvbGxvLWRhdGFzb3VyY2UtcmVzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFVTUhpc3RvcnlBUEkgZXh0ZW5kcyBSRVNURGF0YVNvdXJjZSB7XG4gIGdldCBiYXNlVVJMKCkge1xuICAgIHJldHVybiBgJHt0aGlzLmNvbnRleHQuZW52fS9hcGkvYW5hbHl0aWMvYDtcbiAgfVxuXG4gIGFzeW5jIEdFVChhcmdzLCB0b2tlbikge1xuICAgIGNvbnN0IHsgXG4gICAgICBkYXRlUmFuZ2VUeXBlLCBcbiAgICAgIGRhdGVSYW5nZSwgXG4gICAgICBkYXRlSW50ZXJ2YWxVbml0LCBcbiAgICAgIGRhdGVJbnRlcnZhbCBcbiAgICB9ID0gYXJncztcbiAgICByZXR1cm4gdGhpcy5wb3N0KFxuICAgICAnYWR2aXNvci1hdW0nLCAvLyBwYXRoXG4gICAgICB7XG4gICAgICAgIGRhdGVSYW5nZVR5cGU6IGRhdGVSYW5nZVR5cGUgfHwgJ2ZpeGVkJyxcbiAgICAgICAgZGF0ZVJhbmdlOiBkYXRlUmFuZ2UgfHwgJzVEJyxcbiAgICAgICAgZGF0ZUludGVydmFsOiBkYXRlSW50ZXJ2YWwgfHwgMCxcbiAgICAgICAgZGF0ZUludGVydmFsVW5pdDogZGF0ZUludGVydmFsVW5pdCB8fCAnRCdcbiAgICAgIH0sIC8vIHJlcXVlc3QgYm9keVxuICAgICk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "AUMHistoryAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "args",
        "token",
        "dateRangeType",
        "dateRange",
        "dateIntervalUnit",
        "dateInterval",
        "post"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,aAAN,SAA4BC,oCAA5B,CAA2C;AACxD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrB,UAAM;AACJC,MAAAA,aADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFL,IALJ;AAMA,WAAO,KAAKM,IAAL,CACN,aADM,EACS;AACd;AACEJ,MAAAA,aAAa,EAAEA,aAAa,IAAI,OADlC;AAEEC,MAAAA,SAAS,EAAEA,SAAS,IAAI,IAF1B;AAGEE,MAAAA,YAAY,EAAEA,YAAY,IAAI,CAHhC;AAIED,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAI;AAJxC,KAFK,CAOF;AAPE,KAAP;AASD;;AArBuD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/AumHistory",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class AUMHistoryAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const { \n      dateRangeType, \n      dateRange, \n      dateIntervalUnit, \n      dateInterval \n    } = args;\n    return this.post(\n     'advisor-aum', // path\n      {\n        dateRangeType: dateRangeType || 'fixed',\n        dateRange: dateRange || '5D',\n        dateInterval: dateInterval || 0,\n        dateIntervalUnit: dateIntervalUnit || 'D'\n      }, // request body\n    );\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218223759
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass TopClientsAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const {\n      limit,\n      sortBy,\n      offset\n    } = args;\n    return this.post('top-clients', // path\n    {\n      sortMethod: sortBy || 'aumValue',\n      resultLimit: limit || 5,\n      offset: offset || 0\n    } // request body\n    );\n  }\n\n}\n\nexports.default = TopClientsAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJUb3BDbGllbnRzQVBJIiwiUkVTVERhdGFTb3VyY2UiLCJiYXNlVVJMIiwiY29udGV4dCIsImVudiIsIkdFVCIsImFyZ3MiLCJ0b2tlbiIsImxpbWl0Iiwic29ydEJ5Iiwib2Zmc2V0IiwicG9zdCIsInNvcnRNZXRob2QiLCJyZXN1bHRMaW1pdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVlLE1BQU1BLGFBQU4sU0FBNEJDLG9DQUE1QixDQUEyQztBQUN4RCxNQUFJQyxPQUFKLEdBQWM7QUFDWixXQUFRLEdBQUUsS0FBS0MsT0FBTCxDQUFhQyxHQUFJLGdCQUEzQjtBQUNEOztBQUVELFFBQU1DLEdBQU4sQ0FBVUMsSUFBVixFQUFnQkMsS0FBaEIsRUFBdUI7QUFDckIsVUFBTTtBQUFFQyxNQUFBQSxLQUFGO0FBQVNDLE1BQUFBLE1BQVQ7QUFBaUJDLE1BQUFBO0FBQWpCLFFBQTRCSixJQUFsQztBQUNBLFdBQU8sS0FBS0ssSUFBTCxDQUNOLGFBRE0sRUFDUztBQUNkO0FBQ0VDLE1BQUFBLFVBQVUsRUFBRUgsTUFBTSxJQUFJLFVBRHhCO0FBRUVJLE1BQUFBLFdBQVcsRUFBRUwsS0FBSyxJQUFJLENBRnhCO0FBR0VFLE1BQUFBLE1BQU0sRUFBRUEsTUFBTSxJQUFJO0FBSHBCLEtBRkssQ0FNRjtBQU5FLEtBQVA7QUFRRDs7QUFmdUQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvZ3JhcGhxbC9Ub3BDbGllbnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUkVTVERhdGFTb3VyY2UgfSBmcm9tICdhcG9sbG8tZGF0YXNvdXJjZS1yZXN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9wQ2xpZW50c0FQSSBleHRlbmRzIFJFU1REYXRhU291cmNlIHtcbiAgZ2V0IGJhc2VVUkwoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29udGV4dC5lbnZ9L2FwaS9hbmFseXRpYy9gO1xuICB9XG5cbiAgYXN5bmMgR0VUKGFyZ3MsIHRva2VuKSB7XG4gICAgY29uc3QgeyBsaW1pdCwgc29ydEJ5LCBvZmZzZXQgfSA9IGFyZ3M7XG4gICAgcmV0dXJuIHRoaXMucG9zdChcbiAgICAgJ3RvcC1jbGllbnRzJywgLy8gcGF0aFxuICAgICAge1xuICAgICAgICBzb3J0TWV0aG9kOiBzb3J0QnkgfHwgJ2F1bVZhbHVlJyxcbiAgICAgICAgcmVzdWx0TGltaXQ6IGxpbWl0IHx8IDUsXG4gICAgICAgIG9mZnNldDogb2Zmc2V0IHx8IDAsXG4gICAgICB9LCAvLyByZXF1ZXN0IGJvZHlcbiAgICApO1xuICB9XG59XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "TopClientsAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "args",
        "token",
        "limit",
        "sortBy",
        "offset",
        "post",
        "sortMethod",
        "resultLimit"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,aAAN,SAA4BC,oCAA5B,CAA2C;AACxD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,QAA4BJ,IAAlC;AACA,WAAO,KAAKK,IAAL,CACN,aADM,EACS;AACd;AACEC,MAAAA,UAAU,EAAEH,MAAM,IAAI,UADxB;AAEEI,MAAAA,WAAW,EAAEL,KAAK,IAAI,CAFxB;AAGEE,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAHpB,KAFK,CAMF;AANE,KAAP;AAQD;;AAfuD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopClients",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class TopClientsAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const { limit, sortBy, offset } = args;\n    return this.post(\n     'top-clients', // path\n      {\n        sortMethod: sortBy || 'aumValue',\n        resultLimit: limit || 5,\n        offset: offset || 0,\n      }, // request body\n    );\n  }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218283923
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass TopHoldingsAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const {\n      limit,\n      sortBy,\n      offset\n    } = args;\n    return this.post('top-holdings', // path\n    {\n      sortMethod: sortBy || 'securityName',\n      resultLimit: limit || 5,\n      offset: offset || 0\n    } // request body\n    );\n  }\n\n}\n\nexports.default = TopHoldingsAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJUb3BIb2xkaW5nc0FQSSIsIlJFU1REYXRhU291cmNlIiwiYmFzZVVSTCIsImNvbnRleHQiLCJlbnYiLCJHRVQiLCJhcmdzIiwidG9rZW4iLCJsaW1pdCIsInNvcnRCeSIsIm9mZnNldCIsInBvc3QiLCJzb3J0TWV0aG9kIiwicmVzdWx0TGltaXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFZSxNQUFNQSxjQUFOLFNBQTZCQyxvQ0FBN0IsQ0FBNEM7QUFDekQsTUFBSUMsT0FBSixHQUFjO0FBQ1osV0FBUSxHQUFFLEtBQUtDLE9BQUwsQ0FBYUMsR0FBSSxnQkFBM0I7QUFDRDs7QUFFRCxRQUFNQyxHQUFOLENBQVVDLElBQVYsRUFBZ0JDLEtBQWhCLEVBQXVCO0FBQ3JCLFVBQU07QUFBRUMsTUFBQUEsS0FBRjtBQUFTQyxNQUFBQSxNQUFUO0FBQWlCQyxNQUFBQTtBQUFqQixRQUE0QkosSUFBbEM7QUFDQSxXQUFPLEtBQUtLLElBQUwsQ0FDTixjQURNLEVBQ1U7QUFDZjtBQUNFQyxNQUFBQSxVQUFVLEVBQUVILE1BQU0sSUFBSSxjQUR4QjtBQUVFSSxNQUFBQSxXQUFXLEVBQUVMLEtBQUssSUFBSSxDQUZ4QjtBQUdFRSxNQUFBQSxNQUFNLEVBQUVBLE1BQU0sSUFBSTtBQUhwQixLQUZLLENBTUY7QUFORSxLQUFQO0FBUUQ7O0FBZndEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVG9wSG9sZGluZ3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSRVNURGF0YVNvdXJjZSB9IGZyb20gJ2Fwb2xsby1kYXRhc291cmNlLXJlc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb3BIb2xkaW5nc0FQSSBleHRlbmRzIFJFU1REYXRhU291cmNlIHtcbiAgZ2V0IGJhc2VVUkwoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29udGV4dC5lbnZ9L2FwaS9hbmFseXRpYy9gO1xuICB9XG5cbiAgYXN5bmMgR0VUKGFyZ3MsIHRva2VuKSB7XG4gICAgY29uc3QgeyBsaW1pdCwgc29ydEJ5LCBvZmZzZXQgfSA9IGFyZ3M7XG4gICAgcmV0dXJuIHRoaXMucG9zdChcbiAgICAgJ3RvcC1ob2xkaW5ncycsIC8vIHBhdGhcbiAgICAgIHtcbiAgICAgICAgc29ydE1ldGhvZDogc29ydEJ5IHx8ICdzZWN1cml0eU5hbWUnLFxuICAgICAgICByZXN1bHRMaW1pdDogbGltaXQgfHwgNSxcbiAgICAgICAgb2Zmc2V0OiBvZmZzZXQgfHwgMCxcbiAgICAgIH0sIC8vIHJlcXVlc3QgYm9keVxuICAgICk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "TopHoldingsAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "args",
        "token",
        "limit",
        "sortBy",
        "offset",
        "post",
        "sortMethod",
        "resultLimit"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,cAAN,SAA6BC,oCAA7B,CAA4C;AACzD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,QAA4BJ,IAAlC;AACA,WAAO,KAAKK,IAAL,CACN,cADM,EACU;AACf;AACEC,MAAAA,UAAU,EAAEH,MAAM,IAAI,cADxB;AAEEI,MAAAA,WAAW,EAAEL,KAAK,IAAI,CAFxB;AAGEE,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAHpB,KAFK,CAMF;AANE,KAAP;AAQD;;AAfwD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/TopHoldings",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class TopHoldingsAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/analytic/`;\n  }\n\n  async GET(args, token) {\n    const { limit, sortBy, offset } = args;\n    return this.post(\n     'top-holdings', // path\n      {\n        sortMethod: sortBy || 'securityName',\n        resultLimit: limit || 5,\n        offset: offset || 0,\n      }, // request body\n    );\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551218328936
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloDatasourceRest = require(\"apollo-datasource-rest\");\n\nclass UsersAPI extends _apolloDatasourceRest.RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/advisors/`;\n  }\n\n  async GET(userID) {\n    return this.get(`${userID}/clients`);\n  }\n\n}\n\nexports.default = UsersAPI;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJVc2Vyc0FQSSIsIlJFU1REYXRhU291cmNlIiwiYmFzZVVSTCIsImNvbnRleHQiLCJlbnYiLCJHRVQiLCJ1c2VySUQiLCJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFZSxNQUFNQSxRQUFOLFNBQXVCQyxvQ0FBdkIsQ0FBc0M7QUFDbkQsTUFBSUMsT0FBSixHQUFjO0FBQ1osV0FBUSxHQUFFLEtBQUtDLE9BQUwsQ0FBYUMsR0FBSSxnQkFBM0I7QUFDRDs7QUFFRCxRQUFNQyxHQUFOLENBQVVDLE1BQVYsRUFBa0I7QUFDaEIsV0FBTyxLQUFLQyxHQUFMLENBQVUsR0FBRUQsTUFBTyxVQUFuQixDQUFQO0FBQ0Q7O0FBUGtEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL2dyYXBocWwvVXNlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSRVNURGF0YVNvdXJjZSB9IGZyb20gJ2Fwb2xsby1kYXRhc291cmNlLXJlc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2Vyc0FQSSBleHRlbmRzIFJFU1REYXRhU291cmNlIHtcbiAgZ2V0IGJhc2VVUkwoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29udGV4dC5lbnZ9L2FwaS9hZHZpc29ycy9gO1xuICB9XG5cbiAgYXN5bmMgR0VUKHVzZXJJRCkge1xuICAgIHJldHVybiB0aGlzLmdldChgJHt1c2VySUR9L2NsaWVudHNgKTtcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "UsersAPI",
        "RESTDataSource",
        "baseURL",
        "context",
        "env",
        "GET",
        "userID",
        "get"
      ],
      "mappings": ";;;;;;;AAAA;;AAEe,MAAMA,QAAN,SAAuBC,oCAAvB,CAAsC;AACnD,MAAIC,OAAJ,GAAc;AACZ,WAAQ,GAAE,KAAKC,OAAL,CAAaC,GAAI,gBAA3B;AACD;;AAED,QAAMC,GAAN,CAAUC,MAAV,EAAkB;AAChB,WAAO,KAAKC,GAAL,CAAU,GAAED,MAAO,UAAnB,CAAP;AACD;;AAPkD",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/graphql/Users",
      "sourcesContent": [
        "import { RESTDataSource } from 'apollo-datasource-rest';\n\nexport default class UsersAPI extends RESTDataSource {\n  get baseURL() {\n    return `${this.context.env}/api/advisors/`;\n  }\n\n  async GET(userID) {\n    return this.get(`${userID}/clients`);\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551207390074
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/authSteps.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
        "sourceFileName": "authSteps.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.authMiddleware = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _rsaPemFromModExp = _interopRequireDefault(require(\"rsa-pem-from-mod-exp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst setPublicKey = dataString => {\n  process.env.BFF_PUBLIC_KEY = dataString;\n}; // handles error in auth steps\n\n\nconst handleError = {\n  throw: (request, res, next, errorPublic, errorPrivate = null) => {\n    // throw an error to exit the auth async function\n    throw new Error(errorPrivate != null ? errorPrivate : errorPublic);\n  },\n  catch: error => {\n    console.log('Exiting due to error');\n    console.log(error);\n  }\n};\nconst authStep = {\n  cookie: (req, res, next) => {\n    if (typeof req.cookies === 'undefined' || typeof req.cookies.access_token === 'undefined') {\n      handleError.throw(req, res, next, 'access_token is required for this request');\n      return false;\n    }\n\n    return true;\n  },\n  getKeyID: (req, res, next) => {\n    const {\n      header\n    } = _jsonwebtoken.default.decode(req.cookies.access_token, {\n      complete: true\n    });\n\n    if (typeof header.kid != 'undefined') return header.kid;\n    handleError.throw(req, res, next, 'could not get key ID from provided jwt');\n    return false;\n  },\n  getKey: (req, res, next) => {\n    const foundKey = JSON.parse(process.env.BFF_TOKEN_KEYS).keys.filter(obj => Object.values(obj).includes(req.keyid))[0];\n\n    if (typeof foundKey != 'undefined') {\n      authStep.setKey(foundKey);\n      return foundKey;\n    }\n\n    handleError.throw(req, res, next, 'access_token is required for this request');\n    return false;\n  },\n  //\n  setKey: foundKey => {\n    if (typeof process.env.BFF_PUBLIC_KEY === 'undefined') {\n      setPublicKey(JSON.stringify((0, _rsaPemFromModExp.default)(foundKey.n, foundKey.e)));\n    }\n  },\n  validateJWT: (req, res, next) => {\n    _jsonwebtoken.default.verify(req.cookies.access_token, JSON.parse(process.env.BFF_PUBLIC_KEY), {\n      algorithms: ['RS256']\n    }, (error, authData) => {\n      if (error) handleError.throw(req, res, next, 'Could not validate JWT', error);\n      req.authorization = authData;\n      authStep.success(req, res, next);\n    });\n  },\n  success: (req, res, next) => {\n    next();\n  }\n}; // for each request, validate auth token\n// along the way, we pass authorization data into the request to be used by graphql requests\n\nconst authMiddleware = async (req, res, next) => {\n  try {\n    authStep.cookie(req, res, next);\n    logger.info(\"verify token in cookie: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n\n  try {\n    req.keyid = authStep.getKeyID(req, res, next);\n    logger.info(\"get the keyID from the auth token: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n\n  try {\n    req.key = authStep.getKey(req, res, next);\n    logger.info(\"get the public key using the keyID: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n\n  try {\n    authStep.validateJWT(req, res, next);\n    logger.info(\"validate JWT: done\");\n  } catch (error) {\n    handleError.catch(error);\n    return;\n  }\n};\n\nexports.authMiddleware = authMiddleware;\nvar _default = authMiddleware;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "authSteps.js"
      ],
      "names": [
        "setPublicKey",
        "dataString",
        "process",
        "env",
        "BFF_PUBLIC_KEY",
        "handleError",
        "throw",
        "request",
        "res",
        "next",
        "errorPublic",
        "errorPrivate",
        "Error",
        "catch",
        "error",
        "console",
        "log",
        "authStep",
        "cookie",
        "req",
        "cookies",
        "access_token",
        "getKeyID",
        "header",
        "jwt",
        "decode",
        "complete",
        "kid",
        "getKey",
        "foundKey",
        "JSON",
        "parse",
        "BFF_TOKEN_KEYS",
        "keys",
        "filter",
        "obj",
        "Object",
        "values",
        "includes",
        "keyid",
        "setKey",
        "stringify",
        "n",
        "e",
        "validateJWT",
        "verify",
        "algorithms",
        "authData",
        "authorization",
        "success",
        "authMiddleware",
        "logger",
        "info",
        "key"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAIC,UAAD,IAAgB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,GAA6BH,UAA7B;AACD,CAFD,C,CAIA;;;AACA,MAAMI,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CAACC,OAAD,EAAUC,GAAV,EAAeC,IAAf,EAAqBC,WAArB,EAAkCC,YAAY,GAAG,IAAjD,KAA0D;AAC/D;AACA,UAAM,IAAIC,KAAJ,CAAUD,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsCD,WAAhD,CAAN;AACD,GAJiB;AAKlBG,EAAAA,KAAK,EAAGC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AARiB,CAApB;AAWA,MAAMG,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,CAACC,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAI,OAAOU,GAAG,CAACC,OAAX,KAAuB,WAAvB,IAAsC,OAAOD,GAAG,CAACC,OAAJ,CAAYC,YAAnB,KAAoC,WAA9E,EAA2F;AACzFhB,MAAAA,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,2CAAlC;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GARc;AAUfa,EAAAA,QAAQ,EAAE,CAACH,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC5B,UAAM;AAAEc,MAAAA;AAAF,QAAaC,sBAAIC,MAAJ,CAAWN,GAAG,CAACC,OAAJ,CAAYC,YAAvB,EAAqC;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAArC,CAAnB;;AAEA,QAAI,OAAOH,MAAM,CAACI,GAAd,IAAqB,WAAzB,EAAsC,OAAOJ,MAAM,CAACI,GAAd;AAEtCtB,IAAAA,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,wCAAlC;AACA,WAAO,KAAP;AACD,GAjBc;AAmBfmB,EAAAA,MAAM,EAAE,CAACT,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC1B,UAAMoB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW7B,OAAO,CAACC,GAAR,CAAY6B,cAAvB,EAAuCC,IAAvC,CAA4CC,MAA5C,CAAoDC,GAAD,IAClEC,MAAM,CAACC,MAAP,CAAcF,GAAd,EAAmBG,QAAnB,CAA4BnB,GAAG,CAACoB,KAAhC,CADe,EAEf,CAFe,CAAjB;;AAIA,QAAI,OAAOV,QAAP,IAAmB,WAAvB,EAAoC;AAClCZ,MAAAA,QAAQ,CAACuB,MAAT,CAAgBX,QAAhB;AACA,aAAOA,QAAP;AACD;;AACDxB,IAAAA,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,2CAAlC;AACA,WAAO,KAAP;AACD,GA9Bc;AAgCf;AACA+B,EAAAA,MAAM,EAAGX,QAAD,IAAc;AACpB,QAAI,OAAO3B,OAAO,CAACC,GAAR,CAAYC,cAAnB,KAAsC,WAA1C,EAAuD;AACrDJ,MAAAA,YAAY,CAAC8B,IAAI,CAACW,SAAL,CAAe,+BAAOZ,QAAQ,CAACa,CAAhB,EAAmBb,QAAQ,CAACc,CAA5B,CAAf,CAAD,CAAZ;AACD;AACF,GArCc;AAuCfC,EAAAA,WAAW,EAAE,CAACzB,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC/Be,0BAAIqB,MAAJ,CAAW1B,GAAG,CAACC,OAAJ,CAAYC,YAAvB,EAAqCS,IAAI,CAACC,KAAL,CAAW7B,OAAO,CAACC,GAAR,CAAYC,cAAvB,CAArC,EAA6E;AAAE0C,MAAAA,UAAU,EAAE,CAAC,OAAD;AAAd,KAA7E,EAAwG,CAAChC,KAAD,EAAQiC,QAAR,KAAqB;AAC3H,UAAIjC,KAAJ,EAAWT,WAAW,CAACC,KAAZ,CAAkBa,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,EAAkC,wBAAlC,EAA4DK,KAA5D;AACXK,MAAAA,GAAG,CAAC6B,aAAJ,GAAoBD,QAApB;AACA9B,MAAAA,QAAQ,CAACgC,OAAT,CAAiB9B,GAAjB,EAAsBX,GAAtB,EAA2BC,IAA3B;AACD,KAJD;AAKD,GA7Cc;AA+CfwC,EAAAA,OAAO,EAAE,CAAC9B,GAAD,EAAMX,GAAN,EAAWC,IAAX,KAAoB;AAC3BA,IAAAA,IAAI;AACL;AAjDc,CAAjB,C,CAoDA;AACA;;AACO,MAAMyC,cAAc,GAAG,OAAO/B,GAAP,EAAYX,GAAZ,EAAiBC,IAAjB,KAA0B;AAEpD,MAAI;AACFQ,IAAAA,QAAQ,CAACC,MAAT,CAAgBC,GAAhB,EAAqBX,GAArB,EAA0BC,IAA1B;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,8BAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;;AAED,MAAI;AACFK,IAAAA,GAAG,CAACoB,KAAJ,GAAYtB,QAAQ,CAACK,QAAT,CAAkBH,GAAlB,EAAuBX,GAAvB,EAA4BC,IAA5B,CAAZ;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,yCAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;;AAED,MAAI;AACFK,IAAAA,GAAG,CAACkC,GAAJ,GAAUpC,QAAQ,CAACW,MAAT,CAAgBT,GAAhB,EAAqBX,GAArB,EAA0BC,IAA1B,CAAV;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,0CAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;;AAED,MAAI;AACFG,IAAAA,QAAQ,CAAC2B,WAAT,CAAqBzB,GAArB,EAA0BX,GAA1B,EAA+BC,IAA/B;AACA0C,IAAAA,MAAM,CAACC,IAAP,CAAY,oBAAZ;AACD,GAHD,CAGE,OAAOtC,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACQ,KAAZ,CAAkBC,KAAlB;AACA;AACD;AAEF,CAlCI;;;eAoCQoC,c",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "sourcesContent": [
        "import path from 'path';\nimport fs from 'fs';\nimport jwt from 'jsonwebtoken';\nimport getPem from 'rsa-pem-from-mod-exp';\n\nconst setPublicKey = (dataString) => {\n  process.env.BFF_PUBLIC_KEY = dataString;\n};\n\n// handles error in auth steps\nconst handleError = {\n  throw: (request, res, next, errorPublic, errorPrivate = null) => {\n    // throw an error to exit the auth async function\n    throw new Error(errorPrivate != null ? errorPrivate : errorPublic);\n  },\n  catch: (error) => {\n    console.log('Exiting due to error');\n    console.log(error);\n  }\n};\n\nconst authStep = {\n  cookie: (req, res, next) => {\n    if (typeof req.cookies === 'undefined' || typeof req.cookies.access_token === 'undefined') {\n      handleError.throw(req, res, next, 'access_token is required for this request');\n      return false;\n    }\n\n    return true;\n  },\n\n  getKeyID: (req, res, next) => {\n    const { header } = jwt.decode(req.cookies.access_token, { complete: true });\n\n    if (typeof header.kid != 'undefined') return header.kid;\n\n    handleError.throw(req, res, next, 'could not get key ID from provided jwt');\n    return false;\n  },\n\n  getKey: (req, res, next) => {\n    const foundKey = JSON.parse(process.env.BFF_TOKEN_KEYS).keys.filter((obj) =>\n      Object.values(obj).includes(req.keyid)\n    )[0];\n\n    if (typeof foundKey != 'undefined') {\n      authStep.setKey(foundKey);\n      return foundKey;\n    }\n    handleError.throw(req, res, next, 'access_token is required for this request');\n    return false;\n  },\n\n  //\n  setKey: (foundKey) => {\n    if (typeof process.env.BFF_PUBLIC_KEY === 'undefined') {\n      setPublicKey(JSON.stringify(getPem(foundKey.n, foundKey.e)));\n    }\n  },\n\n  validateJWT: (req, res, next) => {\n    jwt.verify(req.cookies.access_token, JSON.parse(process.env.BFF_PUBLIC_KEY), { algorithms: ['RS256'] }, (error, authData) => {\n      if (error) handleError.throw(req, res, next, 'Could not validate JWT', error);\n      req.authorization = authData;\n      authStep.success(req, res, next);\n    });\n  },\n\n  success: (req, res, next) => {\n    next();\n  }\n};\n\n// for each request, validate auth token\n// along the way, we pass authorization data into the request to be used by graphql requests\nexport const authMiddleware = async (req, res, next) => {\n\n    try {\n      authStep.cookie(req, res, next);\n      logger.info(\"verify token in cookie: done\")\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n    try {\n      req.keyid = authStep.getKeyID(req, res, next);\n      logger.info(\"get the keyID from the auth token: done\")\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n    try {\n      req.key = authStep.getKey(req, res, next);\n      logger.info(\"get the public key using the keyID: done\");\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n    try {\n      authStep.validateJWT(req, res, next);\n      logger.info(\"validate JWT: done\");\n    } catch (error) {\n      handleError.catch(error);\n      return;\n    }\n\n  };\n\nexport default authMiddleware;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551310642403
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
        "sourceFileName": "router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./rest/Authentication/routes\"));\n\nvar _routes2 = _interopRequireDefault(require(\"./rest/User/routes\"));\n\nvar _routes3 = _interopRequireDefault(require(\"./rest/ThirdParty/routes\"));\n\nvar _authSteps = _interopRequireDefault(require(\"./util/authSteps\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = app => {\n  // Initializing route groups\n  const restRoutes = _express.default.Router();\n\n  restRoutes.use('/', _routes.default);\n  restRoutes.use('/', _routes2.default);\n  restRoutes.use('/', _routes3.default); // Set url for API group routes\n\n  app.use('/api', restRoutes); // Error handling 404\n\n  app.use((req, res) => {\n    const err = new Error('Invalid API endpoint');\n    err.url = req.protocol + \"://\" + req.get(\"host\") + req.originalUrl;\n    err.status = 404;\n    res.status(err.status);\n    res.send({\n      error: err\n    });\n  }); // Error handling 500\n\n  app.use((err, req, res, next) => {\n    res.status(err.status || 500);\n    res.send({\n      error: 'Failure on request'\n    });\n  });\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXN0Um91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImF1dGhSb3V0ZXMiLCJ1c2VyUm91dGVzIiwidGhpcmRQYXJ0eVJvdXRlcyIsInJlcSIsInJlcyIsImVyciIsIkVycm9yIiwidXJsIiwicHJvdG9jb2wiLCJnZXQiLCJvcmlnaW5hbFVybCIsInN0YXR1cyIsInNlbmQiLCJlcnJvciIsIm5leHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFFQTs7OztlQUVnQkEsR0FBRCxJQUFTO0FBQ3RCO0FBQ0EsUUFBTUMsVUFBVSxHQUFHQyxpQkFBUUMsTUFBUixFQUFuQjs7QUFFQUYsRUFBQUEsVUFBVSxDQUFDRyxHQUFYLENBQWUsR0FBZixFQUFvQkMsZUFBcEI7QUFDQUosRUFBQUEsVUFBVSxDQUFDRyxHQUFYLENBQWUsR0FBZixFQUFvQkUsZ0JBQXBCO0FBQ0FMLEVBQUFBLFVBQVUsQ0FBQ0csR0FBWCxDQUFlLEdBQWYsRUFBb0JHLGdCQUFwQixFQU5zQixDQVF0Qjs7QUFDQVAsRUFBQUEsR0FBRyxDQUFDSSxHQUFKLENBQVEsTUFBUixFQUFnQkgsVUFBaEIsRUFUc0IsQ0FXdEI7O0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLENBQUNJLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3BCLFVBQU1DLEdBQUcsR0FBRyxJQUFJQyxLQUFKLENBQVUsc0JBQVYsQ0FBWjtBQUVBRCxJQUFBQSxHQUFHLENBQUNFLEdBQUosR0FBVUosR0FBRyxDQUFDSyxRQUFKLEdBQWUsS0FBZixHQUF1QkwsR0FBRyxDQUFDTSxHQUFKLENBQVEsTUFBUixDQUF2QixHQUF5Q04sR0FBRyxDQUFDTyxXQUF2RDtBQUNBTCxJQUFBQSxHQUFHLENBQUNNLE1BQUosR0FBYSxHQUFiO0FBRUFQLElBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXTixHQUFHLENBQUNNLE1BQWY7QUFDQVAsSUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFBQ0MsTUFBQUEsS0FBSyxFQUFFUjtBQUFSLEtBQVQ7QUFDRCxHQVJELEVBWnNCLENBc0J0Qjs7QUFDQVYsRUFBQUEsR0FBRyxDQUFDSSxHQUFKLENBQVEsQ0FBQ00sR0FBRCxFQUFNRixHQUFOLEVBQVdDLEdBQVgsRUFBZ0JVLElBQWhCLEtBQXlCO0FBQy9CVixJQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBV04sR0FBRyxDQUFDTSxNQUFKLElBQWMsR0FBekI7QUFDQVAsSUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFBQ0MsTUFBQUEsS0FBSyxFQUFFO0FBQVIsS0FBVDtBQUNELEdBSEQ7QUFLRCxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCBhdXRoUm91dGVzIGZyb20gJy4vcmVzdC9BdXRoZW50aWNhdGlvbi9yb3V0ZXMnO1xuaW1wb3J0IHVzZXJSb3V0ZXMgZnJvbSAnLi9yZXN0L1VzZXIvcm91dGVzJztcbmltcG9ydCB0aGlyZFBhcnR5Um91dGVzIGZyb20gJy4vcmVzdC9UaGlyZFBhcnR5L3JvdXRlcyc7XG5cbmltcG9ydCBhdXRoU3RlcCBmcm9tICcuL3V0aWwvYXV0aFN0ZXBzJztcblxuZXhwb3J0IGRlZmF1bHQgKGFwcCkgPT4ge1xuICAvLyBJbml0aWFsaXppbmcgcm91dGUgZ3JvdXBzXG4gIGNvbnN0IHJlc3RSb3V0ZXMgPSBleHByZXNzLlJvdXRlcigpO1xuXG4gIHJlc3RSb3V0ZXMudXNlKCcvJywgYXV0aFJvdXRlcyk7XG4gIHJlc3RSb3V0ZXMudXNlKCcvJywgdXNlclJvdXRlcyk7XG4gIHJlc3RSb3V0ZXMudXNlKCcvJywgdGhpcmRQYXJ0eVJvdXRlcyk7XG5cbiAgLy8gU2V0IHVybCBmb3IgQVBJIGdyb3VwIHJvdXRlc1xuICBhcHAudXNlKCcvYXBpJywgcmVzdFJvdXRlcyk7XG4gIFxuICAvLyBFcnJvciBoYW5kbGluZyA0MDRcbiAgYXBwLnVzZSgocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0ludmFsaWQgQVBJIGVuZHBvaW50Jyk7XG5cbiAgICBlcnIudXJsID0gcmVxLnByb3RvY29sICsgXCI6Ly9cIiArIHJlcS5nZXQoXCJob3N0XCIpICsgcmVxLm9yaWdpbmFsVXJsO1xuICAgIGVyci5zdGF0dXMgPSA0MDQ7XG5cbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMpO1xuICAgIHJlcy5zZW5kKHtlcnJvcjogZXJyfSk7XG4gIH0pO1xuXG4gIC8vIEVycm9yIGhhbmRsaW5nIDUwMFxuICBhcHAudXNlKChlcnIsIHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gICAgcmVzLnNlbmQoe2Vycm9yOiAnRmFpbHVyZSBvbiByZXF1ZXN0J30pO1xuICB9KTtcblxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "router.js"
      ],
      "names": [
        "app",
        "restRoutes",
        "express",
        "Router",
        "use",
        "authRoutes",
        "userRoutes",
        "thirdPartyRoutes",
        "req",
        "res",
        "err",
        "Error",
        "url",
        "protocol",
        "get",
        "originalUrl",
        "status",
        "send",
        "error",
        "next"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;;;eAEgBA,GAAD,IAAS;AACtB;AACA,QAAMC,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAEAF,EAAAA,UAAU,CAACG,GAAX,CAAe,GAAf,EAAoBC,eAApB;AACAJ,EAAAA,UAAU,CAACG,GAAX,CAAe,GAAf,EAAoBE,gBAApB;AACAL,EAAAA,UAAU,CAACG,GAAX,CAAe,GAAf,EAAoBG,gBAApB,EANsB,CAQtB;;AACAP,EAAAA,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBH,UAAhB,EATsB,CAWtB;;AACAD,EAAAA,GAAG,CAACI,GAAJ,CAAQ,CAACI,GAAD,EAAMC,GAAN,KAAc;AACpB,UAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAU,sBAAV,CAAZ;AAEAD,IAAAA,GAAG,CAACE,GAAJ,GAAUJ,GAAG,CAACK,QAAJ,GAAe,KAAf,GAAuBL,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAAvB,GAAyCN,GAAG,CAACO,WAAvD;AACAL,IAAAA,GAAG,CAACM,MAAJ,GAAa,GAAb;AAEAP,IAAAA,GAAG,CAACO,MAAJ,CAAWN,GAAG,CAACM,MAAf;AACAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,MAAAA,KAAK,EAAER;AAAR,KAAT;AACD,GARD,EAZsB,CAsBtB;;AACAV,EAAAA,GAAG,CAACI,GAAJ,CAAQ,CAACM,GAAD,EAAMF,GAAN,EAAWC,GAAX,EAAgBU,IAAhB,KAAyB;AAC/BV,IAAAA,GAAG,CAACO,MAAJ,CAAWN,GAAG,CAACM,MAAJ,IAAc,GAAzB;AACAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAT;AACD,GAHD;AAKD,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src",
      "sourcesContent": [
        "import express from 'express';\n\nimport authRoutes from './rest/Authentication/routes';\nimport userRoutes from './rest/User/routes';\nimport thirdPartyRoutes from './rest/ThirdParty/routes';\n\nimport authStep from './util/authSteps';\n\nexport default (app) => {\n  // Initializing route groups\n  const restRoutes = express.Router();\n\n  restRoutes.use('/', authRoutes);\n  restRoutes.use('/', userRoutes);\n  restRoutes.use('/', thirdPartyRoutes);\n\n  // Set url for API group routes\n  app.use('/api', restRoutes);\n  \n  // Error handling 404\n  app.use((req, res) => {\n    const err = new Error('Invalid API endpoint');\n\n    err.url = req.protocol + \"://\" + req.get(\"host\") + req.originalUrl;\n    err.status = 404;\n\n    res.status(err.status);\n    res.send({error: err});\n  });\n\n  // Error handling 500\n  app.use((err, req, res, next) => {\n    res.status(err.status || 500);\n    res.send({error: 'Failure on request'});\n  });\n\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551312591258
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar AuthController = _interopRequireWildcard(require(\"./controller/\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst authRoutes = _express.default.Router(); //= ============================\n//  Register Flow Express Routes\n//= ============================\n// 1) user submits registration form\n\n\nauthRoutes.post(\"/register/submit\", AuthController.Register); // 2) user submits registration verification\n\nauthRoutes.post(\"/register/verify\", AuthController.Verify); //= ============================\n//  Login Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/submit\", AuthController.Login); //= ============================\n//  Reset Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/reset\", AuthController.RequestForgetPassword);\nauthRoutes.post(\"/login/resetCheck\", AuthController.CheckPassword);\nauthRoutes.put(\"/login/reset\", AuthController.ResetPassword);\nvar _default = authRoutes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJhdXRoUm91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJBdXRoQ29udHJvbGxlciIsIlJlZ2lzdGVyIiwiVmVyaWZ5IiwiTG9naW4iLCJSZXF1ZXN0Rm9yZ2V0UGFzc3dvcmQiLCJDaGVja1Bhc3N3b3JkIiwicHV0IiwiUmVzZXRQYXNzd29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxVQUFVLEdBQUdDLGlCQUFRQyxNQUFSLEVBQW5CLEMsQ0FFQTtBQUNBO0FBQ0E7QUFFQTs7O0FBQ0FGLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixrQkFBaEIsRUFBb0NDLGNBQWMsQ0FBQ0MsUUFBbkQsRSxDQUVBOztBQUNBTCxVQUFVLENBQUNHLElBQVgsQ0FBZ0Isa0JBQWhCLEVBQW9DQyxjQUFjLENBQUNFLE1BQW5ELEUsQ0FFQTtBQUNBO0FBQ0E7O0FBRUFOLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixlQUFoQixFQUFpQ0MsY0FBYyxDQUFDRyxLQUFoRCxFLENBRUE7QUFDQTtBQUNBOztBQUVBUCxVQUFVLENBQUNHLElBQVgsQ0FBZ0IsY0FBaEIsRUFBZ0NDLGNBQWMsQ0FBQ0kscUJBQS9DO0FBRUFSLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixtQkFBaEIsRUFBcUNDLGNBQWMsQ0FBQ0ssYUFBcEQ7QUFFQVQsVUFBVSxDQUFDVSxHQUFYLENBQWUsY0FBZixFQUErQk4sY0FBYyxDQUFDTyxhQUE5QztlQUVlWCxVIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCAqIGFzIEF1dGhDb250cm9sbGVyIGZyb20gJy4vY29udHJvbGxlci8nO1xuXG5jb25zdCBhdXRoUm91dGVzID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy89ID09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICBSZWdpc3RlciBGbG93IEV4cHJlc3MgUm91dGVzXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxKSB1c2VyIHN1Ym1pdHMgcmVnaXN0cmF0aW9uIGZvcm1cbmF1dGhSb3V0ZXMucG9zdChcIi9yZWdpc3Rlci9zdWJtaXRcIiwgQXV0aENvbnRyb2xsZXIuUmVnaXN0ZXIpO1xuXG4vLyAyKSB1c2VyIHN1Ym1pdHMgcmVnaXN0cmF0aW9uIHZlcmlmaWNhdGlvblxuYXV0aFJvdXRlcy5wb3N0KFwiL3JlZ2lzdGVyL3ZlcmlmeVwiLCBBdXRoQ29udHJvbGxlci5WZXJpZnkpO1xuXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIExvZ2luIEZsb3cgRXhwcmVzcyBSb3V0ZXNcbi8vPSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmF1dGhSb3V0ZXMucG9zdChcIi9sb2dpbi9zdWJtaXRcIiwgQXV0aENvbnRyb2xsZXIuTG9naW4pO1xuXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIFJlc2V0IEZsb3cgRXhwcmVzcyBSb3V0ZXNcbi8vPSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmF1dGhSb3V0ZXMucG9zdChcIi9sb2dpbi9yZXNldFwiLCBBdXRoQ29udHJvbGxlci5SZXF1ZXN0Rm9yZ2V0UGFzc3dvcmQpO1xuXG5hdXRoUm91dGVzLnBvc3QoXCIvbG9naW4vcmVzZXRDaGVja1wiLCBBdXRoQ29udHJvbGxlci5DaGVja1Bhc3N3b3JkKTtcblxuYXV0aFJvdXRlcy5wdXQoXCIvbG9naW4vcmVzZXRcIiwgQXV0aENvbnRyb2xsZXIuUmVzZXRQYXNzd29yZCk7XG5cbmV4cG9ydCBkZWZhdWx0IGF1dGhSb3V0ZXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "authRoutes",
        "express",
        "Router",
        "post",
        "AuthController",
        "Register",
        "Verify",
        "Login",
        "RequestForgetPassword",
        "CheckPassword",
        "put",
        "ResetPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB,C,CAEA;AACA;AACA;AAEA;;;AACAF,UAAU,CAACG,IAAX,CAAgB,kBAAhB,EAAoCC,cAAc,CAACC,QAAnD,E,CAEA;;AACAL,UAAU,CAACG,IAAX,CAAgB,kBAAhB,EAAoCC,cAAc,CAACE,MAAnD,E,CAEA;AACA;AACA;;AAEAN,UAAU,CAACG,IAAX,CAAgB,eAAhB,EAAiCC,cAAc,CAACG,KAAhD,E,CAEA;AACA;AACA;;AAEAP,UAAU,CAACG,IAAX,CAAgB,cAAhB,EAAgCC,cAAc,CAACI,qBAA/C;AAEAR,UAAU,CAACG,IAAX,CAAgB,mBAAhB,EAAqCC,cAAc,CAACK,aAApD;AAEAT,UAAU,CAACU,GAAX,CAAe,cAAf,EAA+BN,cAAc,CAACO,aAA9C;eAEeX,U",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication",
      "sourcesContent": [
        "import express from 'express';\nimport * as AuthController from './controller/';\n\nconst authRoutes = express.Router();\n\n//= ============================\n//  Register Flow Express Routes\n//= ============================\n\n// 1) user submits registration form\nauthRoutes.post(\"/register/submit\", AuthController.Register);\n\n// 2) user submits registration verification\nauthRoutes.post(\"/register/verify\", AuthController.Verify);\n\n//= ============================\n//  Login Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/submit\", AuthController.Login);\n\n//= ============================\n//  Reset Flow Express Routes\n//= ============================\n\nauthRoutes.post(\"/login/reset\", AuthController.RequestForgetPassword);\n\nauthRoutes.post(\"/login/resetCheck\", AuthController.CheckPassword);\n\nauthRoutes.put(\"/login/reset\", AuthController.ResetPassword);\n\nexport default authRoutes;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551295228428
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Login\", {\n  enumerable: true,\n  get: function () {\n    return _login.Login;\n  }\n});\nObject.defineProperty(exports, \"Register\", {\n  enumerable: true,\n  get: function () {\n    return _register.Register;\n  }\n});\nObject.defineProperty(exports, \"Verify\", {\n  enumerable: true,\n  get: function () {\n    return _register.Verify;\n  }\n});\nObject.defineProperty(exports, \"ResetPassword\", {\n  enumerable: true,\n  get: function () {\n    return _resetPassword.ResetPassword;\n  }\n});\nObject.defineProperty(exports, \"CheckPassword\", {\n  enumerable: true,\n  get: function () {\n    return _resetPassword.CheckPassword;\n  }\n});\nObject.defineProperty(exports, \"RequestForgetPassword\", {\n  enumerable: true,\n  get: function () {\n    return _resetPassword.RequestForgetPassword;\n  }\n});\n\nvar _login = require(\"./login\");\n\nvar _register = require(\"./register\");\n\nvar _resetPassword = require(\"./resetPassword\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvZ2luIH0gZnJvbSAnLi9sb2dpbic7XG5pbXBvcnQgeyBSZWdpc3RlciwgVmVyaWZ5IH0gZnJvbSAnLi9yZWdpc3Rlcic7XG5pbXBvcnQgeyBcbiAgUmVzZXRQYXNzd29yZCwgIFxuICBDaGVja1Bhc3N3b3JkLCBcbiAgUmVxdWVzdEZvcmdldFBhc3N3b3JkIFxufSBmcm9tICcuL3Jlc2V0UGFzc3dvcmQnO1xuXG5leHBvcnQge1xuIExvZ2luLFxuIFJlZ2lzdGVyLFxuIFZlcmlmeSxcbiBSZXNldFBhc3N3b3JkLFxuIENoZWNrUGFzc3dvcmQsXG4gUmVxdWVzdEZvcmdldFBhc3N3b3JkLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import { Login } from './login';\nimport { Register, Verify } from './register';\nimport { \n  ResetPassword,  \n  CheckPassword, \n  RequestForgetPassword \n} from './resetPassword';\n\nexport {\n Login,\n Register,\n Verify,\n ResetPassword,\n CheckPassword,\n RequestForgetPassword,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551240221600
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Login = void 0;\n\nvar _logger = _interopRequireDefault(require(\"../../../util/logger\"));\n\nvar _cookie = _interopRequireDefault(require(\"../../../util/cookie\"));\n\nvar _idp = require(\"../httpRequests/idp\");\n\nvar _user = require(\"../../User/httpRequests/user\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Login = (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n\n  try {\n    (0, _idp.getUserToken)(username, password).then(thisRes => {\n      // set the auth cookie\n      console.log(`your auth token is good for: ${thisRes.expires_in / 60} min`);\n\n      _cookie.default.setAccess(res, thisRes.access_token);\n\n      (0, _user.getUserInfo)(thisRes.access_token).then(response => {\n        thisRes.user = response;\n        res.status(200).send(thisRes);\n      });\n    }).catch(error => {\n      _logger.default.error(error);\n\n      res.status(403).send({\n        message: \"login failed\"\n      });\n    });\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send({\n      message: \"login failed\"\n    });\n  }\n};\n\nexports.Login = Login;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbIkxvZ2luIiwicmVxIiwicmVzIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImJvZHkiLCJ0aGVuIiwidGhpc1JlcyIsImNvbnNvbGUiLCJsb2ciLCJleHBpcmVzX2luIiwiY29va2llIiwic2V0QWNjZXNzIiwiYWNjZXNzX3Rva2VuIiwicmVzcG9uc2UiLCJ1c2VyIiwic3RhdHVzIiwic2VuZCIsImNhdGNoIiwiZXJyb3IiLCJsb2dnZXIiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBSUE7Ozs7QUFJTyxNQUFNQSxLQUFLLEdBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDakMsUUFBTTtBQUFFQyxJQUFBQSxRQUFGO0FBQVlDLElBQUFBO0FBQVosTUFBeUJILEdBQUcsQ0FBQ0ksSUFBbkM7O0FBRUEsTUFBSTtBQUNGLDJCQUFhRixRQUFiLEVBQXVCQyxRQUF2QixFQUNHRSxJQURILENBQ1FDLE9BQU8sSUFBSTtBQUNmO0FBQ0FDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUNHLGdDQUErQkYsT0FBTyxDQUFDRyxVQUFSLEdBQXFCLEVBQUcsTUFEMUQ7O0FBR0FDLHNCQUFPQyxTQUFQLENBQWlCVixHQUFqQixFQUFzQkssT0FBTyxDQUFDTSxZQUE5Qjs7QUFFQSw2QkFBWU4sT0FBTyxDQUFDTSxZQUFwQixFQUFrQ1AsSUFBbEMsQ0FBdUNRLFFBQVEsSUFBSTtBQUNqRFAsUUFBQUEsT0FBTyxDQUFDUSxJQUFSLEdBQWVELFFBQWY7QUFDQVosUUFBQUEsR0FBRyxDQUFDYyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJWLE9BQXJCO0FBQ0QsT0FIRDtBQUlELEtBWkgsRUFhR1csS0FiSCxDQWFVQyxLQUFELElBQVc7QUFDaEJDLHNCQUFPRCxLQUFQLENBQWFBLEtBQWI7O0FBQ0FqQixNQUFBQSxHQUFHLENBQUNjLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkksUUFBQUEsT0FBTyxFQUFFO0FBRFUsT0FBckI7QUFHRCxLQWxCSDtBQW1CRCxHQXBCRCxDQW9CRSxPQUFPRixLQUFQLEVBQWM7QUFDZEMsb0JBQU9ELEtBQVAsQ0FBYUEsS0FBYjs7QUFDQWpCLElBQUFBLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CSSxNQUFBQSxPQUFPLEVBQUU7QUFEVSxLQUFyQjtBQUdEO0FBQ0YsQ0E3Qk0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9BdXRoZW50aWNhdGlvbi9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi8uLi8uLi91dGlsL2xvZ2dlcic7XG5pbXBvcnQgY29va2llIGZyb20gJy4uLy4uLy4uL3V0aWwvY29va2llJztcblxuaW1wb3J0IHtcbiAgZ2V0VXNlclRva2VuLFxufSBmcm9tIFwiLi4vaHR0cFJlcXVlc3RzL2lkcFwiO1xuXG5pbXBvcnQge1xuICBnZXRVc2VySW5mbyxcbn0gZnJvbSBcIi4uLy4uL1VzZXIvaHR0cFJlcXVlc3RzL3VzZXJcIjtcblxuZXhwb3J0IGNvbnN0IExvZ2luID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdXNlcm5hbWUsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcbiAgXG4gIHRyeSB7XG4gICAgZ2V0VXNlclRva2VuKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgIC50aGVuKHRoaXNSZXMgPT4ge1xuICAgICAgICAvLyBzZXQgdGhlIGF1dGggY29va2llXG4gICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgIGB5b3VyIGF1dGggdG9rZW4gaXMgZ29vZCBmb3I6ICR7dGhpc1Jlcy5leHBpcmVzX2luIC8gNjB9IG1pbmBcbiAgICAgICAgKTtcbiAgICAgICAgY29va2llLnNldEFjY2VzcyhyZXMsIHRoaXNSZXMuYWNjZXNzX3Rva2VuKTtcblxuICAgICAgICBnZXRVc2VySW5mbyh0aGlzUmVzLmFjY2Vzc190b2tlbikudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgdGhpc1Jlcy51c2VyID0gcmVzcG9uc2U7XG4gICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodGhpc1Jlcyk7XG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoe1xuICAgICAgICAgIG1lc3NhZ2U6IFwibG9naW4gZmFpbGVkXCJcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHtcbiAgICAgIG1lc3NhZ2U6IFwibG9naW4gZmFpbGVkXCJcbiAgICB9KTtcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "Login",
        "req",
        "res",
        "username",
        "password",
        "body",
        "then",
        "thisRes",
        "console",
        "log",
        "expires_in",
        "cookie",
        "setAccess",
        "access_token",
        "response",
        "user",
        "status",
        "send",
        "catch",
        "error",
        "logger",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AAIA;;;;AAIO,MAAMA,KAAK,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,GAAG,CAACI,IAAnC;;AAEA,MAAI;AACF,2BAAaF,QAAb,EAAuBC,QAAvB,EACGE,IADH,CACQC,OAAO,IAAI;AACf;AACAC,MAAAA,OAAO,CAACC,GAAR,CACG,gCAA+BF,OAAO,CAACG,UAAR,GAAqB,EAAG,MAD1D;;AAGAC,sBAAOC,SAAP,CAAiBV,GAAjB,EAAsBK,OAAO,CAACM,YAA9B;;AAEA,6BAAYN,OAAO,CAACM,YAApB,EAAkCP,IAAlC,CAAuCQ,QAAQ,IAAI;AACjDP,QAAAA,OAAO,CAACQ,IAAR,GAAeD,QAAf;AACAZ,QAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,OAArB;AACD,OAHD;AAID,KAZH,EAaGW,KAbH,CAaUC,KAAD,IAAW;AAChBC,sBAAOD,KAAP,CAAaA,KAAb;;AACAjB,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBI,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD,KAlBH;AAmBD,GApBD,CAoBE,OAAOF,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAjB,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBI,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CA7BM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import logger from '../../../util/logger';\nimport cookie from '../../../util/cookie';\n\nimport {\n  getUserToken,\n} from \"../httpRequests/idp\";\n\nimport {\n  getUserInfo,\n} from \"../../User/httpRequests/user\";\n\nexport const Login = (req, res) => {\n  const { username, password } = req.body;\n  \n  try {\n    getUserToken(username, password)\n      .then(thisRes => {\n        // set the auth cookie\n        console.log(\n          `your auth token is good for: ${thisRes.expires_in / 60} min`\n        );\n        cookie.setAccess(res, thisRes.access_token);\n\n        getUserInfo(thisRes.access_token).then(response => {\n          thisRes.user = response;\n          res.status(200).send(thisRes);\n        });\n      })\n      .catch((error) => {\n        logger.error(error);\n        res.status(403).send({\n          message: \"login failed\"\n        });\n      });\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send({\n      message: \"login failed\"\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313370759
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers",
        "sourceFileName": "cookie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  getAccess: req => {\n    return req.cookies.access_token || null;\n  },\n  getRefresh: req => {\n    return req.cookies.refresh_token || null;\n  },\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvb2tpZS5qcyJdLCJuYW1lcyI6WyJnZXRBY2Nlc3MiLCJyZXEiLCJjb29raWVzIiwiYWNjZXNzX3Rva2VuIiwiZ2V0UmVmcmVzaCIsInJlZnJlc2hfdG9rZW4iLCJzZXRBY2Nlc3MiLCJyZXMiLCJjb29raWVWYWx1ZSIsImNvb2tpZSIsIm1heEFnZSIsImh0dHBPbmx5Iiwic2lnbmVkIiwib3ZlcndyaXRlIiwic2V0UmVmcmVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsU0FBUyxFQUFHQyxHQUFELElBQVM7QUFDbEIsV0FBT0EsR0FBRyxDQUFDQyxPQUFKLENBQVlDLFlBQVosSUFBNEIsSUFBbkM7QUFDRCxHQUhZO0FBS2JDLEVBQUFBLFVBQVUsRUFBR0gsR0FBRCxJQUFTO0FBQ25CLFdBQU9BLEdBQUcsQ0FBQ0MsT0FBSixDQUFZRyxhQUFaLElBQTZCLElBQXBDO0FBQ0QsR0FQWTtBQVNiQyxFQUFBQSxTQUFTLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxXQUFOLEtBQXNCO0FBQy9CRCxJQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyxjQUFYLEVBQTJCRCxXQUEzQixFQUF3QztBQUN0Q0UsTUFBQUEsTUFBTSxFQUFFLEtBRDhCO0FBRXRDQyxNQUFBQSxRQUFRLEVBQUUsSUFGNEI7QUFHdENDLE1BQUFBLE1BQU0sRUFBRSxLQUg4QjtBQUl0Q0MsTUFBQUEsU0FBUyxFQUFFO0FBSjJCLEtBQXhDO0FBTUQsR0FoQlk7QUFrQmJDLEVBQUFBLFVBQVUsRUFBRSxDQUFDUCxHQUFELEVBQU1DLFdBQU4sS0FBc0I7QUFDaENELElBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGVBQVgsRUFBNEJELFdBQTVCLEVBQXlDO0FBQ3ZDRSxNQUFBQSxNQUFNLEVBQUUsS0FEK0I7QUFFdkNDLE1BQUFBLFFBQVEsRUFBRSxJQUY2QjtBQUd2Q0MsTUFBQUEsTUFBTSxFQUFFLEtBSCtCO0FBSXZDQyxNQUFBQSxTQUFTLEVBQUU7QUFKNEIsS0FBekM7QUFNRDtBQXpCWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0QWNjZXNzOiAocmVxKSA9PiB7XG4gICAgcmV0dXJuIHJlcS5jb29raWVzLmFjY2Vzc190b2tlbiB8fCBudWxsO1xuICB9LFxuXG4gIGdldFJlZnJlc2g6IChyZXEpID0+IHtcbiAgICByZXR1cm4gcmVxLmNvb2tpZXMucmVmcmVzaF90b2tlbiB8fCBudWxsO1xuICB9LFxuXG4gIHNldEFjY2VzczogKHJlcywgY29va2llVmFsdWUpID0+IHtcbiAgICByZXMuY29va2llKCdhY2Nlc3NfdG9rZW4nLCBjb29raWVWYWx1ZSwge1xuICAgICAgbWF4QWdlOiA5OTk5OSxcbiAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgc2lnbmVkOiBmYWxzZSxcbiAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgIH0pO1xuICB9LFxuXG4gIHNldFJlZnJlc2g6IChyZXMsIGNvb2tpZVZhbHVlKSA9PiB7XG4gICAgcmVzLmNvb2tpZSgncmVmcmVzaF90b2tlbicsIGNvb2tpZVZhbHVlLCB7XG4gICAgICBtYXhBZ2U6IDk5OTk5LFxuICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICBzaWduZWQ6IGZhbHNlLFxuICAgICAgb3ZlcndyaXRlOiB0cnVlXG4gICAgfSk7XG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cookie.js"
      ],
      "names": [
        "getAccess",
        "req",
        "cookies",
        "access_token",
        "getRefresh",
        "refresh_token",
        "setAccess",
        "res",
        "cookieValue",
        "cookie",
        "maxAge",
        "httpOnly",
        "signed",
        "overwrite",
        "setRefresh"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,SAAS,EAAGC,GAAD,IAAS;AAClB,WAAOA,GAAG,CAACC,OAAJ,CAAYC,YAAZ,IAA4B,IAAnC;AACD,GAHY;AAKbC,EAAAA,UAAU,EAAGH,GAAD,IAAS;AACnB,WAAOA,GAAG,CAACC,OAAJ,CAAYG,aAAZ,IAA6B,IAApC;AACD,GAPY;AASbC,EAAAA,SAAS,EAAE,CAACC,GAAD,EAAMC,WAAN,KAAsB;AAC/BD,IAAAA,GAAG,CAACE,MAAJ,CAAW,cAAX,EAA2BD,WAA3B,EAAwC;AACtCE,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,QAAQ,EAAE,IAF4B;AAGtCC,MAAAA,MAAM,EAAE,KAH8B;AAItCC,MAAAA,SAAS,EAAE;AAJ2B,KAAxC;AAMD,GAhBY;AAkBbC,EAAAA,UAAU,EAAE,CAACP,GAAD,EAAMC,WAAN,KAAsB;AAChCD,IAAAA,GAAG,CAACE,MAAJ,CAAW,eAAX,EAA4BD,WAA5B,EAAyC;AACvCE,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,QAAQ,EAAE,IAF6B;AAGvCC,MAAAA,MAAM,EAAE,KAH+B;AAIvCC,MAAAA,SAAS,EAAE;AAJ4B,KAAzC;AAMD;AAzBY,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers",
      "sourcesContent": [
        "export default {\n  getAccess: (req) => {\n    return req.cookies.access_token || null;\n  },\n\n  getRefresh: (req) => {\n    return req.cookies.refresh_token || null;\n  },\n\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551236400889
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers/cookie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers",
        "sourceFileName": "cookie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  getAccess: req => {\n    return req.cookies.access_token || null;\n  },\n  getRefresh: req => {\n    return req.cookies.refresh_token || null;\n  },\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvb2tpZS5qcyJdLCJuYW1lcyI6WyJnZXRBY2Nlc3MiLCJyZXEiLCJjb29raWVzIiwiYWNjZXNzX3Rva2VuIiwiZ2V0UmVmcmVzaCIsInJlZnJlc2hfdG9rZW4iLCJzZXRBY2Nlc3MiLCJyZXMiLCJjb29raWVWYWx1ZSIsImNvb2tpZSIsIm1heEFnZSIsImh0dHBPbmx5Iiwic2lnbmVkIiwib3ZlcndyaXRlIiwic2V0UmVmcmVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsU0FBUyxFQUFHQyxHQUFELElBQVM7QUFDbEIsV0FBT0EsR0FBRyxDQUFDQyxPQUFKLENBQVlDLFlBQVosSUFBNEIsSUFBbkM7QUFDRCxHQUhZO0FBS2JDLEVBQUFBLFVBQVUsRUFBR0gsR0FBRCxJQUFTO0FBQ25CLFdBQU9BLEdBQUcsQ0FBQ0MsT0FBSixDQUFZRyxhQUFaLElBQTZCLElBQXBDO0FBQ0QsR0FQWTtBQVNiQyxFQUFBQSxTQUFTLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxXQUFOLEtBQXNCO0FBQy9CRCxJQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyxjQUFYLEVBQTJCRCxXQUEzQixFQUF3QztBQUN0Q0UsTUFBQUEsTUFBTSxFQUFFLEtBRDhCO0FBRXRDQyxNQUFBQSxRQUFRLEVBQUUsSUFGNEI7QUFHdENDLE1BQUFBLE1BQU0sRUFBRSxLQUg4QjtBQUl0Q0MsTUFBQUEsU0FBUyxFQUFFO0FBSjJCLEtBQXhDO0FBTUQsR0FoQlk7QUFrQmJDLEVBQUFBLFVBQVUsRUFBRSxDQUFDUCxHQUFELEVBQU1DLFdBQU4sS0FBc0I7QUFDaENELElBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGVBQVgsRUFBNEJELFdBQTVCLEVBQXlDO0FBQ3ZDRSxNQUFBQSxNQUFNLEVBQUUsS0FEK0I7QUFFdkNDLE1BQUFBLFFBQVEsRUFBRSxJQUY2QjtBQUd2Q0MsTUFBQUEsTUFBTSxFQUFFLEtBSCtCO0FBSXZDQyxNQUFBQSxTQUFTLEVBQUU7QUFKNEIsS0FBekM7QUFNRDtBQXpCWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0QWNjZXNzOiAocmVxKSA9PiB7XG4gICAgcmV0dXJuIHJlcS5jb29raWVzLmFjY2Vzc190b2tlbiB8fCBudWxsO1xuICB9LFxuXG4gIGdldFJlZnJlc2g6IChyZXEpID0+IHtcbiAgICByZXR1cm4gcmVxLmNvb2tpZXMucmVmcmVzaF90b2tlbiB8fCBudWxsO1xuICB9LFxuXG4gIHNldEFjY2VzczogKHJlcywgY29va2llVmFsdWUpID0+IHtcbiAgICByZXMuY29va2llKCdhY2Nlc3NfdG9rZW4nLCBjb29raWVWYWx1ZSwge1xuICAgICAgbWF4QWdlOiA5OTk5OSxcbiAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgc2lnbmVkOiBmYWxzZSxcbiAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgIH0pO1xuICB9LFxuXG4gIHNldFJlZnJlc2g6IChyZXMsIGNvb2tpZVZhbHVlKSA9PiB7XG4gICAgcmVzLmNvb2tpZSgncmVmcmVzaF90b2tlbicsIGNvb2tpZVZhbHVlLCB7XG4gICAgICBtYXhBZ2U6IDk5OTk5LFxuICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICBzaWduZWQ6IGZhbHNlLFxuICAgICAgb3ZlcndyaXRlOiB0cnVlXG4gICAgfSk7XG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cookie.js"
      ],
      "names": [
        "getAccess",
        "req",
        "cookies",
        "access_token",
        "getRefresh",
        "refresh_token",
        "setAccess",
        "res",
        "cookieValue",
        "cookie",
        "maxAge",
        "httpOnly",
        "signed",
        "overwrite",
        "setRefresh"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,SAAS,EAAGC,GAAD,IAAS;AAClB,WAAOA,GAAG,CAACC,OAAJ,CAAYC,YAAZ,IAA4B,IAAnC;AACD,GAHY;AAKbC,EAAAA,UAAU,EAAGH,GAAD,IAAS;AACnB,WAAOA,GAAG,CAACC,OAAJ,CAAYG,aAAZ,IAA6B,IAApC;AACD,GAPY;AASbC,EAAAA,SAAS,EAAE,CAACC,GAAD,EAAMC,WAAN,KAAsB;AAC/BD,IAAAA,GAAG,CAACE,MAAJ,CAAW,cAAX,EAA2BD,WAA3B,EAAwC;AACtCE,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,QAAQ,EAAE,IAF4B;AAGtCC,MAAAA,MAAM,EAAE,KAH8B;AAItCC,MAAAA,SAAS,EAAE;AAJ2B,KAAxC;AAMD,GAhBY;AAkBbC,EAAAA,UAAU,EAAE,CAACP,GAAD,EAAMC,WAAN,KAAsB;AAChCD,IAAAA,GAAG,CAACE,MAAJ,CAAW,eAAX,EAA4BD,WAA5B,EAAyC;AACvCE,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,QAAQ,EAAE,IAF6B;AAGvCC,MAAAA,MAAM,EAAE,KAH+B;AAIvCC,MAAAA,SAAS,EAAE;AAJ4B,KAAzC;AAMD;AAzBY,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/helpers",
      "sourcesContent": [
        "export default {\n  getAccess: (req) => {\n    return req.cookies.access_token || null;\n  },\n\n  getRefresh: (req) => {\n    return req.cookies.refresh_token || null;\n  },\n\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551236400889
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests/idp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests",
        "sourceFileName": "idp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserToken = exports.resetPassword = exports.requestResetPassword = exports.pwResetJwtValid = exports.verifyUserRegistration = exports.createUserRegistration = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"dotenv\").config();\n\n_axios.default.defaults.withCredentials = true;\n\nconst createUserRegistration = async (username, password) => {\n  const data = {\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    console.log(\"what the hell, \", res.data);\n    return res.data;\n  }).catch(error => {\n    console.log(\"what the hell error\", error);\n  });\n};\n\nexports.createUserRegistration = createUserRegistration;\n\nconst verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.verifyUserRegistration = verifyUserRegistration;\n\nconst pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.pwResetJwtValid = pwResetJwtValid;\n\nconst requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      email: username.username\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    console.log(\"what the heck\", error);\n    return {\n      status: 403\n    };\n  });\n};\n\nexports.requestResetPassword = requestResetPassword;\n\nconst resetPassword = ({\n  jwt,\n  password\n}) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      jwt,\n      password\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    return {\n      status: 403\n    };\n  });\n}; // user: login\n\n\nexports.resetPassword = resetPassword;\n\nconst getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(`${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`).toString(\"base64\")}`\n    },\n    data: _querystring.default.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n  return (0, _axios.default)(options).then(res => res.data).catch(error => error);\n};\n\nexports.getUserToken = getUserToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "idp.js"
      ],
      "names": [
        "require",
        "config",
        "axios",
        "defaults",
        "withCredentials",
        "createUserRegistration",
        "username",
        "password",
        "data",
        "options",
        "method",
        "headers",
        "Authorization",
        "JSON",
        "parse",
        "process",
        "env",
        "BFF_CLIENT_TOKEN",
        "access_token",
        "stringify",
        "processData",
        "url",
        "then",
        "res",
        "console",
        "log",
        "catch",
        "error",
        "verifyUserRegistration",
        "tokenObj",
        "pwResetJwtValid",
        "jwt",
        "requestResetPassword",
        "email",
        "status",
        "resetPassword",
        "getUserToken",
        "grant_type",
        "Buffer",
        "from",
        "BFF_CLIENT_ID",
        "BFF_CLIENT_SECRET",
        "toString",
        "querystring"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEAC,eAAMC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEO,MAAMC,sBAAsB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAMC,IAAI,GAAG;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAb;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeX,IAAf,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAAG,CAACf,IAAnC;AACA,WAAOe,GAAG,CAACf,IAAX;AACD,GAJI,EAKJkB,KALI,CAKEC,KAAK,IAAI;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,GAPI,CAAP;AAQD,CAxBM;;;;AA0BA,MAAMC,sBAAsB,GAAGC,QAAQ,IAAI;AAChD,QAAMpB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeU,QAAf,CATQ;AAUdT,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMG,eAAe,GAAGC,GAAG,IAAI;AACpC,QAAMtB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeY,GAAf,CATQ;AAUdX,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMK,oBAAoB,GAAG1B,QAAQ,IAAI;AAC9C,QAAMG,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEc,MAAAA,KAAK,EAAE3B,QAAQ,CAACA;AAAlB,KAAf,CATQ;AAUdc,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,KAA7B;AACE,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GAPI,CAAP;AAQD,CAvBM;;;;AAyBA,MAAMC,aAAa,GAAG,CAAC;AAAEJ,EAAAA,GAAF;AAAOxB,EAAAA;AAAP,CAAD,KAAuB;AAClD,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEY,MAAAA,GAAF;AAAOxB,MAAAA;AAAP,KAAf,CATQ;AAUda,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AACd,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GANI,CAAP;AAOD,CAtBM,C,CAwBP;;;;;AACO,MAAME,YAAY,GAAG,CAAC9B,QAAD,EAAWC,QAAX,KAAwB;AAClD,QAAMC,IAAI,GAAG;AACX6B,IAAAA,UAAU,EAAE,UADD;AAEX/B,IAAAA,QAFW;AAGXC,IAAAA;AAHW,GAAb;AAMA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,SAAQ0B,MAAM,CAACC,IAAP,CACrB,GAAExB,OAAO,CAACC,GAAR,CAAYwB,aAAc,IAAGzB,OAAO,CAACC,GAAR,CAAYyB,iBAAkB,EADxC,EAEtBC,QAFsB,CAEb,QAFa,CAEH;AALd,KAFK;AASdlC,IAAAA,IAAI,EAAEmC,qBAAYxB,SAAZ,CAAsBX,IAAtB,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAIA,GAAG,CAACf,IADZ,EAEJkB,KAFI,CAEEC,KAAK,IAAIA,KAFX,CAAP;AAGD,CAxBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httpRequests",
      "sourcesContent": [
        "import axios from 'axios';\nimport querystring from 'querystring';\n\nrequire(\"dotenv\").config();\n\naxios.defaults.withCredentials = true;\n\nexport const createUserRegistration = async (username, password) => {\n  const data = { username, password };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n\n  return axios(options)\n    .then(res => {\n      console.log(\"what the hell, \", res.data)\n      return res.data;\n    })\n    .catch(error => {\n      console.log(\"what the hell error\", error) \n    });\n};\n\nexport const verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ email: username.username }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n    console.log(\"what the heck\", error)\n      return { status: 403 };\n    });\n};\n\nexport const resetPassword = ({ jwt, password }) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ jwt, password }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return { status: 403 };\n    });\n};\n\n// user: login\nexport const getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`\n      ).toString(\"base64\")}`\n    },\n    data: querystring.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n\n  return axios(options)\n    .then(res => res.data)\n    .catch(error => error);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551309730061
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserInfo = exports.updateUser = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"dotenv\").config();\n\nconst updateUser = (jwt, user) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: JSON.stringify(user),\n    url: `http://localhost:8081/api/users/${user.id}/user-profile`\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res.data;\n  });\n};\n\nexports.updateUser = updateUser;\n\nconst getUserInfo = jwt => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${jwt}`\n    },\n    processData: false,\n    url: \"http://localhost:8081/api/user-info\"\n  };\n  return (0, _axios.default)(options).then(res => res.data);\n};\n\nexports.getUserInfo = getUserInfo;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImNvbmZpZyIsInVwZGF0ZVVzZXIiLCJqd3QiLCJ1c2VyIiwib3B0aW9ucyIsIm1ldGhvZCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cmwiLCJpZCIsInRoZW4iLCJyZXMiLCJnZXRVc2VySW5mbyIsInByb2Nlc3NEYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBRU8sTUFBTUMsVUFBVSxHQUFHLENBQUNDLEdBQUQsRUFBTUMsSUFBTixLQUFlO0FBQ3ZDLFFBQU1DLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxNQUFNLEVBQUUsS0FETTtBQUVkQyxJQUFBQSxPQUFPLEVBQUU7QUFDUCxzQkFBZ0Isa0JBRFQ7QUFFUEMsTUFBQUEsYUFBYSxFQUFHLFVBQVNMLEdBQUksRUFGdEI7QUFHUCx1QkFBaUI7QUFIVixLQUZLO0FBT2RNLElBQUFBLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFMLENBQWVQLElBQWYsQ0FQUTtBQVFkUSxJQUFBQSxHQUFHLEVBQUcsbUNBQWtDUixJQUFJLENBQUNTLEVBQUc7QUFSbEMsR0FBaEI7QUFXQSxTQUFPLG9CQUFNUixPQUFOLEVBQWVTLElBQWYsQ0FBb0JDLEdBQUcsSUFBSTtBQUNoQyxXQUFPQSxHQUFHLENBQUNOLElBQVg7QUFDRCxHQUZNLENBQVA7QUFHRCxDQWZNOzs7O0FBaUJBLE1BQU1PLFdBQVcsR0FBR2IsR0FBRyxJQUFJO0FBQ2hDLFFBQU1FLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxNQUFNLEVBQUUsS0FETTtBQUVkQyxJQUFBQSxPQUFPLEVBQUU7QUFDUCx1QkFBaUIsVUFEVjtBQUVQQyxNQUFBQSxhQUFhLEVBQUcsVUFBU0wsR0FBSTtBQUZ0QixLQUZLO0FBTWRjLElBQUFBLFdBQVcsRUFBRSxLQU5DO0FBT2RMLElBQUFBLEdBQUcsRUFBRTtBQVBTLEdBQWhCO0FBVUEsU0FBTyxvQkFBTVAsT0FBTixFQUFlUyxJQUFmLENBQW9CQyxHQUFHLElBQUlBLEdBQUcsQ0FBQ04sSUFBL0IsQ0FBUDtBQUNELENBWk0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9Vc2VyL2h0dHBSZXF1ZXN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgcXVlcnlzdHJpbmcgZnJvbSAncXVlcnlzdHJpbmcnO1xuXG5yZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpO1xuXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlciA9IChqd3QsIHVzZXIpID0+IHtcbiAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7and0fWAsXG4gICAgICBcImNhY2hlLWNvbnRyb2xcIjogXCJuby1jYWNoZVwiXG4gICAgfSxcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh1c2VyKSxcbiAgICB1cmw6IGBodHRwOi8vbG9jYWxob3N0OjgwODEvYXBpL3VzZXJzLyR7dXNlci5pZH0vdXNlci1wcm9maWxlYFxuICB9O1xuXG4gIHJldHVybiBheGlvcyhvcHRpb25zKS50aGVuKHJlcyA9PiB7XG4gICAgcmV0dXJuIHJlcy5kYXRhO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VySW5mbyA9IGp3dCA9PiB7XG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiY2FjaGUtY29udHJvbFwiOiBcIm5vLWNhY2hlXCIsXG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7and0fWBcbiAgICB9LFxuICAgIHByb2Nlc3NEYXRhOiBmYWxzZSxcbiAgICB1cmw6IFwiaHR0cDovL2xvY2FsaG9zdDo4MDgxL2FwaS91c2VyLWluZm9cIlxuICB9O1xuXG4gIHJldHVybiBheGlvcyhvcHRpb25zKS50aGVuKHJlcyA9PiByZXMuZGF0YSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "require",
        "config",
        "updateUser",
        "jwt",
        "user",
        "options",
        "method",
        "headers",
        "Authorization",
        "data",
        "JSON",
        "stringify",
        "url",
        "id",
        "then",
        "res",
        "getUserInfo",
        "processData"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEO,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACvC,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASL,GAAI,EAFtB;AAGP,uBAAiB;AAHV,KAFK;AAOdM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAPQ;AAQdQ,IAAAA,GAAG,EAAG,mCAAkCR,IAAI,CAACS,EAAG;AARlC,GAAhB;AAWA,SAAO,oBAAMR,OAAN,EAAeS,IAAf,CAAoBC,GAAG,IAAI;AAChC,WAAOA,GAAG,CAACN,IAAX;AACD,GAFM,CAAP;AAGD,CAfM;;;;AAiBA,MAAMO,WAAW,GAAGb,GAAG,IAAI;AAChC,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,OAAO,EAAE;AACP,uBAAiB,UADV;AAEPC,MAAAA,aAAa,EAAG,UAASL,GAAI;AAFtB,KAFK;AAMdc,IAAAA,WAAW,EAAE,KANC;AAOdL,IAAAA,GAAG,EAAE;AAPS,GAAhB;AAUA,SAAO,oBAAMP,OAAN,EAAeS,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACN,IAA/B,CAAP;AACD,CAZM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/httpRequests",
      "sourcesContent": [
        "import axios from 'axios';\nimport querystring from 'querystring';\n\nrequire(\"dotenv\").config();\n\nexport const updateUser = (jwt, user) => {\n  const options = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n      \"cache-control\": \"no-cache\"\n    },\n    data: JSON.stringify(user),\n    url: `http://localhost:8081/api/users/${user.id}/user-profile`\n  };\n\n  return axios(options).then(res => {\n    return res.data;\n  });\n};\n\nexport const getUserInfo = jwt => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${jwt}`\n    },\n    processData: false,\n    url: \"http://localhost:8081/api/user-info\"\n  };\n\n  return axios(options).then(res => res.data);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551241486061
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/register.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "register.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Verify = exports.Register = void 0;\n\nvar _idp = require(\"../httprequests/idp\");\n\nconst Register = async (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n\n  try {\n    const thisRes = await (0, _idp.createUserRegistration)(email, password);\n\n    if (thisRes && thisRes.jwt != \"undefined\") {\n      res.status(200).send(thisRes);\n    } else {\n      res.status(403).send({\n        message: \"registration failed\"\n      });\n    }\n  } catch (error) {\n    console.log(\"hello what the hell\", error);\n    res.status(403).send({\n      message: \"registration failed\"\n    });\n  }\n};\n\nexports.Register = Register;\n\nconst Verify = (req, res) => {\n  // jwt object should be sent in request so we can pass it to the IDP call\n  const {\n    jwt\n  } = req.body;\n\n  try {\n    (0, _idp.verifyUserRegistration)({\n      jwt: jwt\n    }).then(thisRes => {\n      if (thisRes.status === 200) {\n        res.status(200).send(thisRes.data);\n      } else {\n        res.status(403).send(thisRes);\n      }\n    }).catch(({\n      config,\n      request,\n      response\n    }) => {\n      res.status(403).send({\n        message: \"verification failed\"\n      });\n    });\n  } catch (error) {\n    res.status(403).send({\n      message: \"verification failed\"\n    });\n  }\n};\n\nexports.Verify = Verify;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmpzIl0sIm5hbWVzIjpbIlJlZ2lzdGVyIiwicmVxIiwicmVzIiwiZW1haWwiLCJwYXNzd29yZCIsImJvZHkiLCJ0aGlzUmVzIiwiand0Iiwic3RhdHVzIiwic2VuZCIsIm1lc3NhZ2UiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJWZXJpZnkiLCJ0aGVuIiwiZGF0YSIsImNhdGNoIiwiY29uZmlnIiwicmVxdWVzdCIsInJlc3BvbnNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBS08sTUFBTUEsUUFBUSxHQUFHLE9BQU9DLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUMxQyxRQUFNO0FBQUVDLElBQUFBLEtBQUY7QUFBU0MsSUFBQUE7QUFBVCxNQUFzQkgsR0FBRyxDQUFDSSxJQUFoQzs7QUFFQSxNQUFJO0FBQ0YsVUFBTUMsT0FBTyxHQUFHLE1BQU0saUNBQXVCSCxLQUF2QixFQUE4QkMsUUFBOUIsQ0FBdEI7O0FBRUEsUUFBSUUsT0FBTyxJQUFJQSxPQUFPLENBQUNDLEdBQVIsSUFBZSxXQUE5QixFQUEyQztBQUN6Q0wsTUFBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJILE9BQXJCO0FBQ0QsS0FGRCxNQUVPO0FBQ0xKLE1BQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CQyxRQUFBQSxPQUFPLEVBQUU7QUFEVSxPQUFyQjtBQUdEO0FBQ0YsR0FWRCxDQVVFLE9BQU9DLEtBQVAsRUFBYztBQUNoQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVosRUFBbUNGLEtBQW5DO0FBQ0VULElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CQyxNQUFBQSxPQUFPLEVBQUU7QUFEVSxLQUFyQjtBQUdEO0FBQ0YsQ0FuQk07Ozs7QUFxQkEsTUFBTUksTUFBTSxHQUFHLENBQUNiLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ2xDO0FBQ0EsUUFBTTtBQUFFSyxJQUFBQTtBQUFGLE1BQVVOLEdBQUcsQ0FBQ0ksSUFBcEI7O0FBRUEsTUFBSTtBQUNGLHFDQUF1QjtBQUFFRSxNQUFBQSxHQUFHLEVBQUVBO0FBQVAsS0FBdkIsRUFDR1EsSUFESCxDQUNRVCxPQUFPLElBQUk7QUFDZixVQUFJQSxPQUFPLENBQUNFLE1BQVIsS0FBbUIsR0FBdkIsRUFBNEI7QUFDMUJOLFFBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSCxPQUFPLENBQUNVLElBQTdCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xkLFFBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSCxPQUFyQjtBQUNEO0FBQ0YsS0FQSCxFQVFHVyxLQVJILENBUVMsQ0FBQztBQUFFQyxNQUFBQSxNQUFGO0FBQVVDLE1BQUFBLE9BQVY7QUFBbUJDLE1BQUFBO0FBQW5CLEtBQUQsS0FBbUM7QUFDeENsQixNQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsUUFBQUEsT0FBTyxFQUFFO0FBRFUsT0FBckI7QUFHRCxLQVpIO0FBYUQsR0FkRCxDQWNFLE9BQU9DLEtBQVAsRUFBYztBQUNkVCxJQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsTUFBQUEsT0FBTyxFQUFFO0FBRFUsS0FBckI7QUFHRDtBQUNGLENBdkJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZVVzZXJSZWdpc3RyYXRpb24sXG4gIHZlcmlmeVVzZXJSZWdpc3RyYXRpb24sXG59IGZyb20gXCIuLi9odHRwcmVxdWVzdHMvaWRwXCI7XG5cbmV4cG9ydCBjb25zdCBSZWdpc3RlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB0aGlzUmVzID0gYXdhaXQgY3JlYXRlVXNlclJlZ2lzdHJhdGlvbihlbWFpbCwgcGFzc3dvcmQpO1xuXG4gICAgaWYgKHRoaXNSZXMgJiYgdGhpc1Jlcy5qd3QgIT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQodGhpc1Jlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHtcbiAgICAgICAgbWVzc2FnZTogXCJyZWdpc3RyYXRpb24gZmFpbGVkXCJcbiAgICAgIH0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgY29uc29sZS5sb2coXCJoZWxsbyB3aGF0IHRoZSBoZWxsXCIsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDQwMykuc2VuZCh7XG4gICAgICBtZXNzYWdlOiBcInJlZ2lzdHJhdGlvbiBmYWlsZWRcIlxuICAgIH0pO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgVmVyaWZ5ID0gKHJlcSwgcmVzKSA9PiB7XG4gIC8vIGp3dCBvYmplY3Qgc2hvdWxkIGJlIHNlbnQgaW4gcmVxdWVzdCBzbyB3ZSBjYW4gcGFzcyBpdCB0byB0aGUgSURQIGNhbGxcbiAgY29uc3QgeyBqd3QgfSA9IHJlcS5ib2R5O1xuXG4gIHRyeSB7XG4gICAgdmVyaWZ5VXNlclJlZ2lzdHJhdGlvbih7IGp3dDogand0IH0pXG4gICAgICAudGhlbih0aGlzUmVzID0+IHtcbiAgICAgICAgaWYgKHRoaXNSZXMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCh0aGlzUmVzLmRhdGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHRoaXNSZXMpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKCh7IGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UgfSkgPT4ge1xuICAgICAgICByZXMuc3RhdHVzKDQwMykuc2VuZCh7XG4gICAgICAgICAgbWVzc2FnZTogXCJ2ZXJpZmljYXRpb24gZmFpbGVkXCJcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXMuc3RhdHVzKDQwMykuc2VuZCh7XG4gICAgICBtZXNzYWdlOiBcInZlcmlmaWNhdGlvbiBmYWlsZWRcIlxuICAgIH0pO1xuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "register.js"
      ],
      "names": [
        "Register",
        "req",
        "res",
        "email",
        "password",
        "body",
        "thisRes",
        "jwt",
        "status",
        "send",
        "message",
        "error",
        "console",
        "log",
        "Verify",
        "then",
        "data",
        "catch",
        "config",
        "request",
        "response"
      ],
      "mappings": ";;;;;;;AAAA;;AAKO,MAAMA,QAAQ,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,GAAG,CAACI,IAAhC;;AAEA,MAAI;AACF,UAAMC,OAAO,GAAG,MAAM,iCAAuBH,KAAvB,EAA8BC,QAA9B,CAAtB;;AAEA,QAAIE,OAAO,IAAIA,OAAO,CAACC,GAAR,IAAe,WAA9B,EAA2C;AACzCL,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,OAArB;AACD,KAFD,MAEO;AACLJ,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD;AACF,GAVD,CAUE,OAAOC,KAAP,EAAc;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACET,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CAnBM;;;;AAqBA,MAAMI,MAAM,GAAG,CAACb,GAAD,EAAMC,GAAN,KAAc;AAClC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAUN,GAAG,CAACI,IAApB;;AAEA,MAAI;AACF,qCAAuB;AAAEE,MAAAA,GAAG,EAAEA;AAAP,KAAvB,EACGQ,IADH,CACQT,OAAO,IAAI;AACf,UAAIA,OAAO,CAACE,MAAR,KAAmB,GAAvB,EAA4B;AAC1BN,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,OAAO,CAACU,IAA7B;AACD,OAFD,MAEO;AACLd,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,OAArB;AACD;AACF,KAPH,EAQGW,KARH,CAQS,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,KAAD,KAAmC;AACxClB,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD,KAZH;AAaD,GAdD,CAcE,OAAOC,KAAP,EAAc;AACdT,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CAvBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import {\n  createUserRegistration,\n  verifyUserRegistration,\n} from \"../httprequests/idp\";\n\nexport const Register = async (req, res) => {\n  const { email, password } = req.body;\n\n  try {\n    const thisRes = await createUserRegistration(email, password);\n\n    if (thisRes && thisRes.jwt != \"undefined\") {\n      res.status(200).send(thisRes);\n    } else {\n      res.status(403).send({\n        message: \"registration failed\"\n      });\n    }\n  } catch (error) {\n  console.log(\"hello what the hell\", error);\n    res.status(403).send({\n      message: \"registration failed\"\n    });\n  }\n};\n\nexport const Verify = (req, res) => {\n  // jwt object should be sent in request so we can pass it to the IDP call\n  const { jwt } = req.body;\n\n  try {\n    verifyUserRegistration({ jwt: jwt })\n      .then(thisRes => {\n        if (thisRes.status === 200) {\n          res.status(200).send(thisRes.data);\n        } else {\n          res.status(403).send(thisRes);\n        }\n      })\n      .catch(({ config, request, response }) => {\n        res.status(403).send({\n          message: \"verification failed\"\n        });\n      });\n  } catch (error) {\n    res.status(403).send({\n      message: \"verification failed\"\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551309670902
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests/idp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests",
        "sourceFileName": "idp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserToken = exports.resetPassword = exports.requestResetPassword = exports.pwResetJwtValid = exports.verifyUserRegistration = exports.createUserRegistration = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"dotenv\").config();\n\n_axios.default.defaults.withCredentials = true;\n\nconst createUserRegistration = async (username, password) => {\n  const data = {\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    console.log(\"what the hell, \", res.data);\n    return res.data;\n  }).catch(error => {\n    console.log(\"what the hell error\", error);\n  });\n};\n\nexports.createUserRegistration = createUserRegistration;\n\nconst verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.verifyUserRegistration = verifyUserRegistration;\n\nconst pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => error);\n};\n\nexports.pwResetJwtValid = pwResetJwtValid;\n\nconst requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      email: username.username\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    console.log(\"what the heck\", error);\n    return {\n      status: 403\n    };\n  });\n};\n\nexports.requestResetPassword = requestResetPassword;\n\nconst resetPassword = ({\n  jwt,\n  password\n}) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token}`\n    },\n    data: JSON.stringify({\n      jwt,\n      password\n    }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n  return (0, _axios.default)(options).then(res => {\n    return res;\n  }).catch(error => {\n    return {\n      status: 403\n    };\n  });\n}; // user: login\n\n\nexports.resetPassword = resetPassword;\n\nconst getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(`${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`).toString(\"base64\")}`\n    },\n    data: _querystring.default.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n  return (0, _axios.default)(options).then(res => res.data).catch(error => error);\n};\n\nexports.getUserToken = getUserToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "idp.js"
      ],
      "names": [
        "require",
        "config",
        "axios",
        "defaults",
        "withCredentials",
        "createUserRegistration",
        "username",
        "password",
        "data",
        "options",
        "method",
        "headers",
        "Authorization",
        "JSON",
        "parse",
        "process",
        "env",
        "BFF_CLIENT_TOKEN",
        "access_token",
        "stringify",
        "processData",
        "url",
        "then",
        "res",
        "console",
        "log",
        "catch",
        "error",
        "verifyUserRegistration",
        "tokenObj",
        "pwResetJwtValid",
        "jwt",
        "requestResetPassword",
        "email",
        "status",
        "resetPassword",
        "getUserToken",
        "grant_type",
        "Buffer",
        "from",
        "BFF_CLIENT_ID",
        "BFF_CLIENT_SECRET",
        "toString",
        "querystring"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEAC,eAAMC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEO,MAAMC,sBAAsB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAMC,IAAI,GAAG;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAb;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeX,IAAf,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAAG,CAACf,IAAnC;AACA,WAAOe,GAAG,CAACf,IAAX;AACD,GAJI,EAKJkB,KALI,CAKEC,KAAK,IAAI;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,GAPI,CAAP;AAQD,CAxBM;;;;AA0BA,MAAMC,sBAAsB,GAAGC,QAAQ,IAAI;AAChD,QAAMpB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeU,QAAf,CATQ;AAUdT,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMG,eAAe,GAAGC,GAAG,IAAI;AACpC,QAAMtB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAeY,GAAf,CATQ;AAUdX,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAIA,KAJX,CAAP;AAKD,CApBM;;;;AAsBA,MAAMK,oBAAoB,GAAG1B,QAAQ,IAAI;AAC9C,QAAMG,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEc,MAAAA,KAAK,EAAE3B,QAAQ,CAACA;AAAlB,KAAf,CATQ;AAUdc,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,KAA7B;AACE,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GAPI,CAAP;AAQD,CAvBM;;;;AAyBA,MAAMC,aAAa,GAAG,CAAC;AAAEJ,EAAAA,GAAF;AAAOxB,EAAAA;AAAP,CAAD,KAAuB;AAClD,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAvB,EAAyCC,YAC1C;AALM,KAFK;AASdV,IAAAA,IAAI,EAAEK,IAAI,CAACM,SAAL,CAAe;AAAEY,MAAAA,GAAF;AAAOxB,MAAAA;AAAP,KAAf,CATQ;AAUda,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAHI,EAIJG,KAJI,CAIEC,KAAK,IAAI;AACd,WAAO;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GANI,CAAP;AAOD,CAtBM,C,CAwBP;;;;;AACO,MAAME,YAAY,GAAG,CAAC9B,QAAD,EAAWC,QAAX,KAAwB;AAClD,QAAMC,IAAI,GAAG;AACX6B,IAAAA,UAAU,EAAE,UADD;AAEX/B,IAAAA,QAFW;AAGXC,IAAAA;AAHW,GAAb;AAMA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEP,uBAAiB,UAFV;AAGPC,MAAAA,aAAa,EAAG,SAAQ0B,MAAM,CAACC,IAAP,CACrB,GAAExB,OAAO,CAACC,GAAR,CAAYwB,aAAc,IAAGzB,OAAO,CAACC,GAAR,CAAYyB,iBAAkB,EADxC,EAEtBC,QAFsB,CAEb,QAFa,CAEH;AALd,KAFK;AASdlC,IAAAA,IAAI,EAAEmC,qBAAYxB,SAAZ,CAAsBX,IAAtB,CATQ;AAUdY,IAAAA,WAAW,EAAE,KAVC;AAWdC,IAAAA,GAAG,EAAE;AAXS,GAAhB;AAcA,SAAO,oBAAMZ,OAAN,EACJa,IADI,CACCC,GAAG,IAAIA,GAAG,CAACf,IADZ,EAEJkB,KAFI,CAEEC,KAAK,IAAIA,KAFX,CAAP;AAGD,CAxBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/httprequests",
      "sourcesContent": [
        "import axios from 'axios';\nimport querystring from 'querystring';\n\nrequire(\"dotenv\").config();\n\naxios.defaults.withCredentials = true;\n\nexport const createUserRegistration = async (username, password) => {\n  const data = { username, password };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/api/user-registration\"\n  };\n\n  return axios(options)\n    .then(res => {\n      console.log(\"what the hell, \", res.data)\n      return res.data;\n    })\n    .catch(error => {\n      console.log(\"what the hell error\", error) \n    });\n};\n\nexport const verifyUserRegistration = tokenObj => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(tokenObj),\n    processData: false,\n    url: \"http://localhost:8080/api/user-verification\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const pwResetJwtValid = jwt => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify(jwt),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password-check\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => error);\n};\n\nexport const requestResetPassword = username => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ email: username.username }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-forget-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n    console.log(\"what the heck\", error)\n      return { status: 403 };\n    });\n};\n\nexport const resetPassword = ({ jwt, password }) => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Bearer ${\n        JSON.parse(process.env.BFF_CLIENT_TOKEN).access_token\n      }`\n    },\n    data: JSON.stringify({ jwt, password }),\n    processData: false,\n    url: \"http://localhost:8080/api/user-reset-password\"\n  };\n\n  return axios(options)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return { status: 403 };\n    });\n};\n\n// user: login\nexport const getUserToken = (username, password) => {\n  const data = {\n    grant_type: \"password\",\n    username,\n    password\n  };\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"cache-control\": \"no-cache\",\n      Authorization: `Basic ${Buffer.from(\n        `${process.env.BFF_CLIENT_ID}:${process.env.BFF_CLIENT_SECRET}`\n      ).toString(\"base64\")}`\n    },\n    data: querystring.stringify(data),\n    processData: false,\n    url: \"http://localhost:8080/oauth/token\"\n  };\n\n  return axios(options)\n    .then(res => res.data)\n    .catch(error => error);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551309730061
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller/resetPassword.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
        "sourceFileName": "resetPassword.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResetPassword = exports.CheckPassword = exports.RequestForgetPassword = void 0;\n\nvar _logger = _interopRequireDefault(require(\"../../../util/logger\"));\n\nvar _idp = require(\"../httprequests/idp\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst RequestForgetPassword = async (req, res) => {\n  const {\n    username\n  } = req.body;\n\n  try {\n    const response = await (0, _idp.requestResetPassword)({\n      username\n    });\n\n    if (response && response.status === 200) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send(error);\n  }\n};\n\nexports.RequestForgetPassword = RequestForgetPassword;\n\nconst CheckPassword = async (req, res) => {\n  const {\n    jwt\n  } = req.body;\n\n  try {\n    const response = await (0, _idp.pwResetJwtValid)({\n      jwt\n    });\n\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send(error);\n  }\n};\n\nexports.CheckPassword = CheckPassword;\n\nconst ResetPassword = async (req, res) => {\n  try {\n    const response = await (0, _idp.resetPassword)(req.body);\n\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    _logger.default.error(error);\n\n    res.status(403).send(error);\n  }\n};\n\nexports.ResetPassword = ResetPassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0UGFzc3dvcmQuanMiXSwibmFtZXMiOlsiUmVxdWVzdEZvcmdldFBhc3N3b3JkIiwicmVxIiwicmVzIiwidXNlcm5hbWUiLCJib2R5IiwicmVzcG9uc2UiLCJzdGF0dXMiLCJzZW5kIiwiZXJyb3IiLCJsb2dnZXIiLCJDaGVja1Bhc3N3b3JkIiwiand0IiwiUmVzZXRQYXNzd29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBTU8sTUFBTUEscUJBQXFCLEdBQUcsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQ3ZELFFBQU07QUFBRUMsSUFBQUE7QUFBRixNQUFlRixHQUFHLENBQUNHLElBQXpCOztBQUVBLE1BQUk7QUFDRixVQUFNQyxRQUFRLEdBQUcsTUFBTSwrQkFBcUI7QUFBRUYsTUFBQUE7QUFBRixLQUFyQixDQUF2Qjs7QUFDQSxRQUFJRSxRQUFRLElBQUlBLFFBQVEsQ0FBQ0MsTUFBVCxLQUFvQixHQUFwQyxFQUF5QztBQUN2Q0osTUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLFFBQVEsQ0FBQ0EsUUFBOUI7QUFDRCxLQUZELE1BRU87QUFDTEgsTUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLFFBQXJCO0FBQ0Q7QUFDRixHQVBELENBT0UsT0FBT0csS0FBUCxFQUFjO0FBQ2RDLG9CQUFPRCxLQUFQLENBQWFBLEtBQWI7O0FBQ0FOLElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxLQUFyQjtBQUNEO0FBQ0YsQ0FkTTs7OztBQWdCQSxNQUFNRSxhQUFhLEdBQUcsT0FBT1QsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQy9DLFFBQU07QUFBRVMsSUFBQUE7QUFBRixNQUFVVixHQUFHLENBQUNHLElBQXBCOztBQUVBLE1BQUk7QUFDRixVQUFNQyxRQUFRLEdBQUcsTUFBTSwwQkFBZ0I7QUFBRU0sTUFBQUE7QUFBRixLQUFoQixDQUF2Qjs7QUFDQSxRQUFJTixRQUFRLENBQUNDLE1BQVQsR0FBa0IsR0FBdEIsRUFBMkI7QUFDekJKLE1BQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixRQUFRLENBQUNBLFFBQTlCO0FBQ0QsS0FGRCxNQUVPO0FBQ0xILE1BQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixRQUFyQjtBQUNEO0FBQ0YsR0FQRCxDQU9FLE9BQU9HLEtBQVAsRUFBYztBQUNkQyxvQkFBT0QsS0FBUCxDQUFhQSxLQUFiOztBQUNBTixJQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkMsS0FBckI7QUFDRDtBQUNGLENBZE07Ozs7QUFnQkEsTUFBTUksYUFBYSxHQUFHLE9BQU9YLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUMvQyxNQUFJO0FBQ0YsVUFBTUcsUUFBUSxHQUFHLE1BQU0sd0JBQWNKLEdBQUcsQ0FBQ0csSUFBbEIsQ0FBdkI7O0FBRUEsUUFBSUMsUUFBUSxDQUFDQyxNQUFULEdBQWtCLEdBQXRCLEVBQTJCO0FBQ3pCSixNQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsUUFBUSxDQUFDQSxRQUE5QjtBQUNELEtBRkQsTUFFTztBQUNMSCxNQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsUUFBckI7QUFDRDtBQUNGLEdBUkQsQ0FRRSxPQUFPRyxLQUFQLEVBQWM7QUFDZEMsb0JBQU9ELEtBQVAsQ0FBYUEsS0FBYjs7QUFDQU4sSUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJDLEtBQXJCO0FBQ0Q7QUFDRixDQWJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvQXV0aGVudGljYXRpb24vY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2dnZXIgZnJvbSAnLi4vLi4vLi4vdXRpbC9sb2dnZXInO1xuXG5pbXBvcnQge1xuICByZXF1ZXN0UmVzZXRQYXNzd29yZCxcbiAgcmVzZXRQYXNzd29yZCxcbiAgcHdSZXNldEp3dFZhbGlkLFxufSBmcm9tIFwiLi4vaHR0cHJlcXVlc3RzL2lkcFwiO1xuXG5leHBvcnQgY29uc3QgUmVxdWVzdEZvcmdldFBhc3N3b3JkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdXNlcm5hbWUgfSA9IHJlcS5ib2R5O1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0UmVzZXRQYXNzd29yZCh7IHVzZXJuYW1lIH0pO1xuICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQocmVzcG9uc2UucmVzcG9uc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMuc3RhdHVzKDQwMykuc2VuZChyZXNwb25zZSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGxvZ2dlci5lcnJvcihlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoZXJyb3IpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgQ2hlY2tQYXNzd29yZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IGp3dCB9ID0gcmVxLmJvZHk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHB3UmVzZXRKd3RWYWxpZCh7IGp3dCB9KTtcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzIDwgMzAwKSB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChyZXNwb25zZS5yZXNwb25zZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHJlc3BvbnNlKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDQwMykuc2VuZChlcnJvcik7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBSZXNldFBhc3N3b3JkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXNldFBhc3N3b3JkKHJlcS5ib2R5KTtcblxuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPCAzMDApIHtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlc3BvbnNlLnJlc3BvbnNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQocmVzcG9uc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKGVycm9yKTtcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resetPassword.js"
      ],
      "names": [
        "RequestForgetPassword",
        "req",
        "res",
        "username",
        "body",
        "response",
        "status",
        "send",
        "error",
        "logger",
        "CheckPassword",
        "jwt",
        "ResetPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAMO,MAAMA,qBAAqB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAeF,GAAG,CAACG,IAAzB;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAM,+BAAqB;AAAEF,MAAAA;AAAF,KAArB,CAAvB;;AACA,QAAIE,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApC,EAAyC;AACvCJ,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAAQ,CAACA,QAA9B;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD;AACF,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AACF,CAdM;;;;AAgBA,MAAME,aAAa,GAAG,OAAOT,GAAP,EAAYC,GAAZ,KAAoB;AAC/C,QAAM;AAAES,IAAAA;AAAF,MAAUV,GAAG,CAACG,IAApB;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAM,0BAAgB;AAAEM,MAAAA;AAAF,KAAhB,CAAvB;;AACA,QAAIN,QAAQ,CAACC,MAAT,GAAkB,GAAtB,EAA2B;AACzBJ,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAAQ,CAACA,QAA9B;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD;AACF,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AACF,CAdM;;;;AAgBA,MAAMI,aAAa,GAAG,OAAOX,GAAP,EAAYC,GAAZ,KAAoB;AAC/C,MAAI;AACF,UAAMG,QAAQ,GAAG,MAAM,wBAAcJ,GAAG,CAACG,IAAlB,CAAvB;;AAEA,QAAIC,QAAQ,CAACC,MAAT,GAAkB,GAAtB,EAA2B;AACzBJ,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAAQ,CAACA,QAA9B;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD;AACF,GARD,CAQE,OAAOG,KAAP,EAAc;AACdC,oBAAOD,KAAP,CAAaA,KAAb;;AACAN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AACF,CAbM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/Authentication/controller",
      "sourcesContent": [
        "import logger from '../../../util/logger';\n\nimport {\n  requestResetPassword,\n  resetPassword,\n  pwResetJwtValid,\n} from \"../httprequests/idp\";\n\nexport const RequestForgetPassword = async (req, res) => {\n  const { username } = req.body;\n\n  try {\n    const response = await requestResetPassword({ username });\n    if (response && response.status === 200) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send(error);\n  }\n};\n\nexport const CheckPassword = async (req, res) => {\n  const { jwt } = req.body;\n\n  try {\n    const response = await pwResetJwtValid({ jwt });\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send(error);\n  }\n};\n\nexport const ResetPassword = async (req, res) => {\n  try {\n    const response = await resetPassword(req.body);\n\n    if (response.status < 300) {\n      res.status(200).send(response.response);\n    } else {\n      res.status(403).send(response);\n    }\n  } catch (error) {\n    logger.error(error);\n    res.status(403).send(error);\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551308976530
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar UserController = _interopRequireWildcard(require(\"./controller/\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst UserRoutes = _express.default.Router();\n\nUserRoutes.put(\"/user/:id\", UserController.UpdateUser);\nvar _default = UserRoutes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJVc2VyUm91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsInB1dCIsIlVzZXJDb250cm9sbGVyIiwiVXBkYXRlVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxVQUFVLEdBQUdDLGlCQUFRQyxNQUFSLEVBQW5COztBQUVBRixVQUFVLENBQUNHLEdBQVgsQ0FBZSxXQUFmLEVBQTRCQyxjQUFjLENBQUNDLFVBQTNDO2VBRWVMLFUiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9Vc2VyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgKiBhcyBVc2VyQ29udHJvbGxlciBmcm9tICcuL2NvbnRyb2xsZXIvJztcblxuY29uc3QgVXNlclJvdXRlcyA9IGV4cHJlc3MuUm91dGVyKCk7XG5cblVzZXJSb3V0ZXMucHV0KFwiL3VzZXIvOmlkXCIsIFVzZXJDb250cm9sbGVyLlVwZGF0ZVVzZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBVc2VyUm91dGVzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "UserRoutes",
        "express",
        "Router",
        "put",
        "UserController",
        "UpdateUser"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAEAF,UAAU,CAACG,GAAX,CAAe,WAAf,EAA4BC,cAAc,CAACC,UAA3C;eAEeL,U",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User",
      "sourcesContent": [
        "import express from 'express';\nimport * as UserController from './controller/';\n\nconst UserRoutes = express.Router();\n\nUserRoutes.put(\"/user/:id\", UserController.UpdateUser);\n\nexport default UserRoutes;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551243215792
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"UpdateUser\", {\n  enumerable: true,\n  get: function () {\n    return _updateUser.UpdateUser;\n  }\n});\n\nvar _updateUser = require(\"./updateUser.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvVXNlci9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXBkYXRlVXNlciB9IGZyb20gJy4vdXBkYXRlVXNlci5qcyc7XG5cbmV4cG9ydCB7XG4gIFVwZGF0ZVVzZXIsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;AAAA",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "sourcesContent": [
        "import { UpdateUser } from './updateUser.js';\n\nexport {\n  UpdateUser,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551241385904
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller/updateUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
        "sourceFileName": "updateUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateUser = void 0;\n\nvar _logger = _interopRequireDefault(require(\"../../../util/logger\"));\n\nvar _cookie = _interopRequireDefault(require(\"../../../util/cookie\"));\n\nvar _user = require(\"../httpRequests/user\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst UpdateUser = async (req, res) => {\n  let user = req.body;\n  user.id = req.params.id;\n\n  const jwt = _cookie.default.getAccess(req);\n\n  try {\n    const response = await (0, _user.updateUser)(jwt, user);\n\n    if (response != \"undefined\") {\n      res.status(200).send(response);\n    } else {\n      res.status(403).send({\n        message: \"user update failed\"\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(403).send({\n      message: \"user update failed\"\n    });\n  }\n};\n\nexports.UpdateUser = UpdateUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZVVzZXIuanMiXSwibmFtZXMiOlsiVXBkYXRlVXNlciIsInJlcSIsInJlcyIsInVzZXIiLCJib2R5IiwiaWQiLCJwYXJhbXMiLCJqd3QiLCJjb29raWUiLCJnZXRBY2Nlc3MiLCJyZXNwb25zZSIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFJTyxNQUFNQSxVQUFVLEdBQUcsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQzVDLE1BQUlDLElBQUksR0FBR0YsR0FBRyxDQUFDRyxJQUFmO0FBQ0FELEVBQUFBLElBQUksQ0FBQ0UsRUFBTCxHQUFVSixHQUFHLENBQUNLLE1BQUosQ0FBV0QsRUFBckI7O0FBRUEsUUFBTUUsR0FBRyxHQUFHQyxnQkFBT0MsU0FBUCxDQUFpQlIsR0FBakIsQ0FBWjs7QUFFQSxNQUFJO0FBQ0YsVUFBTVMsUUFBUSxHQUFHLE1BQU0sc0JBQVdILEdBQVgsRUFBZ0JKLElBQWhCLENBQXZCOztBQUVBLFFBQUlPLFFBQVEsSUFBSSxXQUFoQixFQUE2QjtBQUMzQlIsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLFFBQXJCO0FBQ0QsS0FGRCxNQUVPO0FBQ0xSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CQyxRQUFBQSxPQUFPLEVBQUU7QUFEVSxPQUFyQjtBQUdEO0FBQ0YsR0FWRCxDQVVFLE9BQU9DLEtBQVAsRUFBYztBQUNkQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsS0FBWjtBQUNBWixJQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsTUFBQUEsT0FBTyxFQUFFO0FBRFUsS0FBckI7QUFHRDtBQUNGLENBdEJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvVXNlci9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi8uLi8uLi91dGlsL2xvZ2dlcic7XG5pbXBvcnQgY29va2llIGZyb20gJy4uLy4uLy4uL3V0aWwvY29va2llJztcblxuaW1wb3J0IHtcbiAgdXBkYXRlVXNlcixcbn0gZnJvbSBcIi4uL2h0dHBSZXF1ZXN0cy91c2VyXCI7XG5cbmV4cG9ydCBjb25zdCBVcGRhdGVVc2VyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGxldCB1c2VyID0gcmVxLmJvZHk7XG4gIHVzZXIuaWQgPSByZXEucGFyYW1zLmlkO1xuXG4gIGNvbnN0IGp3dCA9IGNvb2tpZS5nZXRBY2Nlc3MocmVxKTtcblxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdXBkYXRlVXNlcihqd3QsIHVzZXIpO1xuXG4gICAgaWYgKHJlc3BvbnNlICE9IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlc3BvbnNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnN0YXR1cyg0MDMpLnNlbmQoe1xuICAgICAgICBtZXNzYWdlOiBcInVzZXIgdXBkYXRlIGZhaWxlZFwiXG4gICAgICB9KTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNDAzKS5zZW5kKHtcbiAgICAgIG1lc3NhZ2U6IFwidXNlciB1cGRhdGUgZmFpbGVkXCJcbiAgICB9KTtcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "updateUser.js"
      ],
      "names": [
        "UpdateUser",
        "req",
        "res",
        "user",
        "body",
        "id",
        "params",
        "jwt",
        "cookie",
        "getAccess",
        "response",
        "status",
        "send",
        "message",
        "error",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;;;AAIO,MAAMA,UAAU,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,MAAIC,IAAI,GAAGF,GAAG,CAACG,IAAf;AACAD,EAAAA,IAAI,CAACE,EAAL,GAAUJ,GAAG,CAACK,MAAJ,CAAWD,EAArB;;AAEA,QAAME,GAAG,GAAGC,gBAAOC,SAAP,CAAiBR,GAAjB,CAAZ;;AAEA,MAAI;AACF,UAAMS,QAAQ,GAAG,MAAM,sBAAWH,GAAX,EAAgBJ,IAAhB,CAAvB;;AAEA,QAAIO,QAAQ,IAAI,WAAhB,EAA6B;AAC3BR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD,KAFD,MAEO;AACLR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD;AACF,GAVD,CAUE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAZ,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACF,CAtBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/User/controller",
      "sourcesContent": [
        "import logger from '../../../util/logger';\nimport cookie from '../../../util/cookie';\n\nimport {\n  updateUser,\n} from \"../httpRequests/user\";\n\nexport const UpdateUser = async (req, res) => {\n  let user = req.body;\n  user.id = req.params.id;\n\n  const jwt = cookie.getAccess(req);\n\n  try {\n    const response = await updateUser(jwt, user);\n\n    if (response != \"undefined\") {\n      res.status(200).send(response);\n    } else {\n      res.status(403).send({\n        message: \"user update failed\"\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(403).send({\n      message: \"user update failed\"\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313401364
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _controller = require(\"./controller/\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst thirdPartyRoutes = _express.default.Router(); //= ========================================\n// Custodian Integration Flow Express Routes\n//= ========================================\n\n\nconsole.log(_controller.ThirdParty);\nthirdPartyRoutes.post(\"/hs-embedded-url/\", _controller.ThirdParty.HelloSign.GetHSEmbeddedUrl);\nvar _default = thirdPartyRoutes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJ0aGlyZFBhcnR5Um91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsImNvbnNvbGUiLCJsb2ciLCJUaGlyZFBhcnR5Q29udHJvbGxlciIsInBvc3QiLCJIZWxsb1NpZ24iLCJHZXRIU0VtYmVkZGVkVXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxnQkFBZ0IsR0FBR0MsaUJBQVFDLE1BQVIsRUFBekIsQyxDQUVBO0FBQ0E7QUFDQTs7O0FBRUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxzQkFBWjtBQUNBTCxnQkFBZ0IsQ0FBQ00sSUFBakIsQ0FBc0IsbUJBQXRCLEVBQTJDRCx1QkFBcUJFLFNBQXJCLENBQStCQyxnQkFBMUU7ZUFFZVIsZ0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9UaGlyZFBhcnR5Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyBUaGlyZFBhcnR5IGFzIFRoaXJkUGFydHlDb250cm9sbGVyIH0gZnJvbSAnLi9jb250cm9sbGVyLyc7XG5cbmNvbnN0IHRoaXJkUGFydHlSb3V0ZXMgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQ3VzdG9kaWFuIEludGVncmF0aW9uIEZsb3cgRXhwcmVzcyBSb3V0ZXNcbi8vPSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmNvbnNvbGUubG9nKFRoaXJkUGFydHlDb250cm9sbGVyKVxudGhpcmRQYXJ0eVJvdXRlcy5wb3N0KFwiL2hzLWVtYmVkZGVkLXVybC9cIiwgVGhpcmRQYXJ0eUNvbnRyb2xsZXIuSGVsbG9TaWduLkdldEhTRW1iZWRkZWRVcmwpO1xuXG5leHBvcnQgZGVmYXVsdCB0aGlyZFBhcnR5Um91dGVzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "thirdPartyRoutes",
        "express",
        "Router",
        "console",
        "log",
        "ThirdPartyController",
        "post",
        "HelloSign",
        "GetHSEmbeddedUrl"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,gBAAgB,GAAGC,iBAAQC,MAAR,EAAzB,C,CAEA;AACA;AACA;;;AAEAC,OAAO,CAACC,GAAR,CAAYC,sBAAZ;AACAL,gBAAgB,CAACM,IAAjB,CAAsB,mBAAtB,EAA2CD,uBAAqBE,SAArB,CAA+BC,gBAA1E;eAEeR,gB",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty",
      "sourcesContent": [
        "import express from 'express';\nimport { ThirdParty as ThirdPartyController } from './controller/';\n\nconst thirdPartyRoutes = express.Router();\n\n//= ========================================\n// Custodian Integration Flow Express Routes\n//= ========================================\n\nconsole.log(ThirdPartyController)\nthirdPartyRoutes.post(\"/hs-embedded-url/\", ThirdPartyController.HelloSign.GetHSEmbeddedUrl);\n\nexport default thirdPartyRoutes;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313159480
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ThirdParty = void 0;\n\nvar _helloSign = require(\"./helloSign\");\n\nconst ThirdParty = {\n  HelloSign: {\n    GetHSEmbeddedUrl: _helloSign.GetHSEmbeddedUrl\n  }\n};\nexports.ThirdParty = ThirdParty;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlRoaXJkUGFydHkiLCJIZWxsb1NpZ24iLCJHZXRIU0VtYmVkZGVkVXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRU8sTUFBTUEsVUFBVSxHQUFHO0FBQ3hCQyxFQUFBQSxTQUFTLEVBQUc7QUFDVkMsSUFBQUEsZ0JBQWdCLEVBQWhCQTtBQURVO0FBRFksQ0FBbkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9UaGlyZFBhcnR5L2NvbnRyb2xsZXIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHZXRIU0VtYmVkZGVkVXJsIH0gZnJvbSAnLi9oZWxsb1NpZ24nO1xuXG5leHBvcnQgY29uc3QgVGhpcmRQYXJ0eSA9IHtcbiAgSGVsbG9TaWduOiAge1xuICAgIEdldEhTRW1iZWRkZWRVcmwsXG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ThirdParty",
        "HelloSign",
        "GetHSEmbeddedUrl"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,MAAMA,UAAU,GAAG;AACxBC,EAAAA,SAAS,EAAG;AACVC,IAAAA,gBAAgB,EAAhBA;AADU;AADY,CAAnB",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "sourcesContent": [
        "import { GetHSEmbeddedUrl } from './helloSign';\n\nexport const ThirdParty = {\n  HelloSign:  {\n    GetHSEmbeddedUrl,\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313109036
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
        "sourceFileName": "helloSign.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetHSEmbeddedUrl = void 0;\n\nvar _logger = _interopRequireDefault(require(\"../../../util/logger\"));\n\nvar _cookie = _interopRequireDefault(require(\"../../../util/cookie\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst GetHSEmbeddedUrl = async (req, res) => {\n  const {\n    templateId\n  } = req.body;\n\n  const jwt = _cookie.default.getAccess(req);\n\n  try {\n    const response = await getHSEmbeddedUrl(jwt, templateId);\n    console.log(response.status, response);\n\n    if (response.status < 300) {\n      res.status(200).send(response.data);\n    } else {\n      res.status(response.status).send(response.data.error);\n    }\n  } catch (error) {\n    const status = error.response && error.response.status || 500;\n    const errorMessage = error.response && error.response.data || {\n      message: \"unable to generate sign url\"\n    };\n    res.status(status).send(errorMessage);\n  }\n};\n\nexports.GetHSEmbeddedUrl = GetHSEmbeddedUrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbGxvU2lnbi5qcyJdLCJuYW1lcyI6WyJHZXRIU0VtYmVkZGVkVXJsIiwicmVxIiwicmVzIiwidGVtcGxhdGVJZCIsImJvZHkiLCJqd3QiLCJjb29raWUiLCJnZXRBY2Nlc3MiLCJyZXNwb25zZSIsImdldEhTRW1iZWRkZWRVcmwiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsImRhdGEiLCJlcnJvciIsImVycm9yTWVzc2FnZSIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVPLE1BQU1BLGdCQUFnQixHQUFHLE9BQU9DLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUNsRCxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBaUJGLEdBQUcsQ0FBQ0csSUFBM0I7O0FBQ0EsUUFBTUMsR0FBRyxHQUFHQyxnQkFBT0MsU0FBUCxDQUFpQk4sR0FBakIsQ0FBWjs7QUFFQSxNQUFJO0FBQ0YsVUFBTU8sUUFBUSxHQUFHLE1BQU1DLGdCQUFnQixDQUFDSixHQUFELEVBQU1GLFVBQU4sQ0FBdkM7QUFDQU8sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILFFBQVEsQ0FBQ0ksTUFBckIsRUFBNkJKLFFBQTdCOztBQUNBLFFBQUlBLFFBQVEsQ0FBQ0ksTUFBVCxHQUFrQixHQUF0QixFQUEyQjtBQUN6QlYsTUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLFFBQVEsQ0FBQ00sSUFBOUI7QUFDRCxLQUZELE1BRU87QUFDTFosTUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVdKLFFBQVEsQ0FBQ0ksTUFBcEIsRUFBNEJDLElBQTVCLENBQWlDTCxRQUFRLENBQUNNLElBQVQsQ0FBY0MsS0FBL0M7QUFDRDtBQUNGLEdBUkQsQ0FRRSxPQUFPQSxLQUFQLEVBQWM7QUFDZCxVQUFNSCxNQUFNLEdBQUdHLEtBQUssQ0FBQ1AsUUFBTixJQUFrQk8sS0FBSyxDQUFDUCxRQUFOLENBQWVJLE1BQWpDLElBQTJDLEdBQTFEO0FBQ0EsVUFBTUksWUFBWSxHQUFHRCxLQUFLLENBQUNQLFFBQU4sSUFBa0JPLEtBQUssQ0FBQ1AsUUFBTixDQUFlTSxJQUFqQyxJQUF5QztBQUM1REcsTUFBQUEsT0FBTyxFQUFFO0FBRG1ELEtBQTlEO0FBSUFmLElBQUFBLEdBQUcsQ0FBQ1UsTUFBSixDQUFXQSxNQUFYLEVBQW1CQyxJQUFuQixDQUF3QkcsWUFBeEI7QUFDRDtBQUNGLENBcEJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvVGhpcmRQYXJ0eS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi8uLi8uLi91dGlsL2xvZ2dlcic7XG5pbXBvcnQgY29va2llIGZyb20gJy4uLy4uLy4uL3V0aWwvY29va2llJztcblxuZXhwb3J0IGNvbnN0IEdldEhTRW1iZWRkZWRVcmwgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyB0ZW1wbGF0ZUlkIH0gPSByZXEuYm9keTtcbiAgY29uc3Qgand0ID0gY29va2llLmdldEFjY2VzcyhyZXEpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnZXRIU0VtYmVkZGVkVXJsKGp3dCwgdGVtcGxhdGVJZCk7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZSk7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA8IDMwMCkge1xuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQocmVzcG9uc2UuZGF0YSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMocmVzcG9uc2Uuc3RhdHVzKS5zZW5kKHJlc3BvbnNlLmRhdGEuZXJyb3IpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zdCBzdGF0dXMgPSBlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5zdGF0dXMgfHwgNTAwO1xuICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgfHwge1xuICAgICAgbWVzc2FnZTogXCJ1bmFibGUgdG8gZ2VuZXJhdGUgc2lnbiB1cmxcIlxuICAgIH07XG5cbiAgICByZXMuc3RhdHVzKHN0YXR1cykuc2VuZChlcnJvck1lc3NhZ2UpO1xuICB9XG59O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "helloSign.js"
      ],
      "names": [
        "GetHSEmbeddedUrl",
        "req",
        "res",
        "templateId",
        "body",
        "jwt",
        "cookie",
        "getAccess",
        "response",
        "getHSEmbeddedUrl",
        "console",
        "log",
        "status",
        "send",
        "data",
        "error",
        "errorMessage",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,gBAAgB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAiBF,GAAG,CAACG,IAA3B;;AACA,QAAMC,GAAG,GAAGC,gBAAOC,SAAP,CAAiBN,GAAjB,CAAZ;;AAEA,MAAI;AACF,UAAMO,QAAQ,GAAG,MAAMC,gBAAgB,CAACJ,GAAD,EAAMF,UAAN,CAAvC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,MAArB,EAA6BJ,QAA7B;;AACA,QAAIA,QAAQ,CAACI,MAAT,GAAkB,GAAtB,EAA2B;AACzBV,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,QAAQ,CAACM,IAA9B;AACD,KAFD,MAEO;AACLZ,MAAAA,GAAG,CAACU,MAAJ,CAAWJ,QAAQ,CAACI,MAApB,EAA4BC,IAA5B,CAAiCL,QAAQ,CAACM,IAAT,CAAcC,KAA/C;AACD;AACF,GARD,CAQE,OAAOA,KAAP,EAAc;AACd,UAAMH,MAAM,GAAGG,KAAK,CAACP,QAAN,IAAkBO,KAAK,CAACP,QAAN,CAAeI,MAAjC,IAA2C,GAA1D;AACA,UAAMI,YAAY,GAAGD,KAAK,CAACP,QAAN,IAAkBO,KAAK,CAACP,QAAN,CAAeM,IAAjC,IAAyC;AAC5DG,MAAAA,OAAO,EAAE;AADmD,KAA9D;AAIAf,IAAAA,GAAG,CAACU,MAAJ,CAAWA,MAAX,EAAmBC,IAAnB,CAAwBG,YAAxB;AACD;AACF,CApBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "sourcesContent": [
        "import logger from '../../../util/logger';\nimport cookie from '../../../util/cookie';\n\nexport const GetHSEmbeddedUrl = async (req, res) => {\n  const { templateId } = req.body;\n  const jwt = cookie.getAccess(req);\n\n  try {\n    const response = await getHSEmbeddedUrl(jwt, templateId);\n    console.log(response.status, response);\n    if (response.status < 300) {\n      res.status(200).send(response.data);\n    } else {\n      res.status(response.status).send(response.data.error);\n    }\n  } catch (error) {\n    const status = error.response && error.response.status || 500;\n    const errorMessage = error.response && error.response.data || {\n      message: \"unable to generate sign url\"\n    };\n\n    res.status(status).send(errorMessage);\n  }\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313389241
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ThirdParty = void 0;\n\nvar _helloSign = require(\"./helloSign\");\n\nconst ThirdParty = {\n  HelloSign: {\n    GetHSEmbeddedUrl: _helloSign.GetHSEmbeddedUrl\n  }\n};\nexports.ThirdParty = ThirdParty;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlRoaXJkUGFydHkiLCJIZWxsb1NpZ24iLCJHZXRIU0VtYmVkZGVkVXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRU8sTUFBTUEsVUFBVSxHQUFHO0FBQ3hCQyxFQUFBQSxTQUFTLEVBQUc7QUFDVkMsSUFBQUEsZ0JBQWdCLEVBQWhCQTtBQURVO0FBRFksQ0FBbkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9UaGlyZFBhcnR5L2NvbnRyb2xsZXIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHZXRIU0VtYmVkZGVkVXJsIH0gZnJvbSAnLi9oZWxsb1NpZ24nO1xuXG5leHBvcnQgY29uc3QgVGhpcmRQYXJ0eSA9IHtcbiAgSGVsbG9TaWduOiAge1xuICAgIEdldEhTRW1iZWRkZWRVcmwsXG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ThirdParty",
        "HelloSign",
        "GetHSEmbeddedUrl"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,MAAMA,UAAU,GAAG;AACxBC,EAAAA,SAAS,EAAG;AACVC,IAAAA,gBAAgB,EAAhBA;AADU;AADY,CAAnB",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "sourcesContent": [
        "import { GetHSEmbeddedUrl } from './helloSign';\n\nexport const ThirdParty = {\n  HelloSign:  {\n    GetHSEmbeddedUrl,\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313109036
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller/helloSign.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
        "sourceFileName": "helloSign.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetHSEmbeddedUrl = void 0;\n\nvar _cookie = _interopRequireDefault(require(\"../helpers/cookie\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst GetHSEmbeddedUrl = async (req, res) => {\n  const {\n    templateId\n  } = req.body;\n\n  const jwt = _cookie.default.getAccess(req);\n\n  try {\n    const response = await getHSEmbeddedUrl(jwt, templateId);\n    console.log(response.status, response);\n\n    if (response.status < 300) {\n      res.status(200).send(response.data);\n    } else {\n      res.status(response.status).send(response.data.error);\n    }\n  } catch (error) {\n    const status = error.response && error.response.status || 500;\n    const errorMessage = error.response && error.response.data || {\n      message: \"unable to generate sign url\"\n    };\n    res.status(status).send(errorMessage);\n  }\n};\n\nexports.GetHSEmbeddedUrl = GetHSEmbeddedUrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbGxvU2lnbi5qcyJdLCJuYW1lcyI6WyJHZXRIU0VtYmVkZGVkVXJsIiwicmVxIiwicmVzIiwidGVtcGxhdGVJZCIsImJvZHkiLCJqd3QiLCJjb29raWUiLCJnZXRBY2Nlc3MiLCJyZXNwb25zZSIsImdldEhTRW1iZWRkZWRVcmwiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsImRhdGEiLCJlcnJvciIsImVycm9yTWVzc2FnZSIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVPLE1BQU1BLGdCQUFnQixHQUFHLE9BQU9DLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUNsRCxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBaUJGLEdBQUcsQ0FBQ0csSUFBM0I7O0FBQ0EsUUFBTUMsR0FBRyxHQUFHQyxnQkFBT0MsU0FBUCxDQUFpQk4sR0FBakIsQ0FBWjs7QUFFQSxNQUFJO0FBQ0YsVUFBTU8sUUFBUSxHQUFHLE1BQU1DLGdCQUFnQixDQUFDSixHQUFELEVBQU1GLFVBQU4sQ0FBdkM7QUFDQU8sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILFFBQVEsQ0FBQ0ksTUFBckIsRUFBNkJKLFFBQTdCOztBQUNBLFFBQUlBLFFBQVEsQ0FBQ0ksTUFBVCxHQUFrQixHQUF0QixFQUEyQjtBQUN6QlYsTUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLFFBQVEsQ0FBQ00sSUFBOUI7QUFDRCxLQUZELE1BRU87QUFDTFosTUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVdKLFFBQVEsQ0FBQ0ksTUFBcEIsRUFBNEJDLElBQTVCLENBQWlDTCxRQUFRLENBQUNNLElBQVQsQ0FBY0MsS0FBL0M7QUFDRDtBQUNGLEdBUkQsQ0FRRSxPQUFPQSxLQUFQLEVBQWM7QUFDZCxVQUFNSCxNQUFNLEdBQUdHLEtBQUssQ0FBQ1AsUUFBTixJQUFrQk8sS0FBSyxDQUFDUCxRQUFOLENBQWVJLE1BQWpDLElBQTJDLEdBQTFEO0FBQ0EsVUFBTUksWUFBWSxHQUFHRCxLQUFLLENBQUNQLFFBQU4sSUFBa0JPLEtBQUssQ0FBQ1AsUUFBTixDQUFlTSxJQUFqQyxJQUF5QztBQUM1REcsTUFBQUEsT0FBTyxFQUFFO0FBRG1ELEtBQTlEO0FBSUFmLElBQUFBLEdBQUcsQ0FBQ1UsTUFBSixDQUFXQSxNQUFYLEVBQW1CQyxJQUFuQixDQUF3QkcsWUFBeEI7QUFDRDtBQUNGLENBcEJNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3Jlc3QvVGhpcmRQYXJ0eS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvb2tpZSBmcm9tICcuLi9oZWxwZXJzL2Nvb2tpZSc7XG5cbmV4cG9ydCBjb25zdCBHZXRIU0VtYmVkZGVkVXJsID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdGVtcGxhdGVJZCB9ID0gcmVxLmJvZHk7XG4gIGNvbnN0IGp3dCA9IGNvb2tpZS5nZXRBY2Nlc3MocmVxKTtcblxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZ2V0SFNFbWJlZGRlZFVybChqd3QsIHRlbXBsYXRlSWQpO1xuICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLnN0YXR1cywgcmVzcG9uc2UpO1xuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPCAzMDApIHtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlc3BvbnNlLmRhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMuc3RhdHVzKHJlc3BvbnNlLnN0YXR1cykuc2VuZChyZXNwb25zZS5kYXRhLmVycm9yKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc3Qgc3RhdHVzID0gZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2Uuc3RhdHVzIHx8IDUwMDtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhIHx8IHtcbiAgICAgIG1lc3NhZ2U6IFwidW5hYmxlIHRvIGdlbmVyYXRlIHNpZ24gdXJsXCJcbiAgICB9O1xuXG4gICAgcmVzLnN0YXR1cyhzdGF0dXMpLnNlbmQoZXJyb3JNZXNzYWdlKTtcbiAgfVxufTtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "helloSign.js"
      ],
      "names": [
        "GetHSEmbeddedUrl",
        "req",
        "res",
        "templateId",
        "body",
        "jwt",
        "cookie",
        "getAccess",
        "response",
        "getHSEmbeddedUrl",
        "console",
        "log",
        "status",
        "send",
        "data",
        "error",
        "errorMessage",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,MAAMA,gBAAgB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAiBF,GAAG,CAACG,IAA3B;;AACA,QAAMC,GAAG,GAAGC,gBAAOC,SAAP,CAAiBN,GAAjB,CAAZ;;AAEA,MAAI;AACF,UAAMO,QAAQ,GAAG,MAAMC,gBAAgB,CAACJ,GAAD,EAAMF,UAAN,CAAvC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,MAArB,EAA6BJ,QAA7B;;AACA,QAAIA,QAAQ,CAACI,MAAT,GAAkB,GAAtB,EAA2B;AACzBV,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,QAAQ,CAACM,IAA9B;AACD,KAFD,MAEO;AACLZ,MAAAA,GAAG,CAACU,MAAJ,CAAWJ,QAAQ,CAACI,MAApB,EAA4BC,IAA5B,CAAiCL,QAAQ,CAACM,IAAT,CAAcC,KAA/C;AACD;AACF,GARD,CAQE,OAAOA,KAAP,EAAc;AACd,UAAMH,MAAM,GAAGG,KAAK,CAACP,QAAN,IAAkBO,KAAK,CAACP,QAAN,CAAeI,MAAjC,IAA2C,GAA1D;AACA,UAAMI,YAAY,GAAGD,KAAK,CAACP,QAAN,IAAkBO,KAAK,CAACP,QAAN,CAAeM,IAAjC,IAAyC;AAC5DG,MAAAA,OAAO,EAAE;AADmD,KAA9D;AAIAf,IAAAA,GAAG,CAACU,MAAJ,CAAWA,MAAX,EAAmBC,IAAnB,CAAwBG,YAAxB;AACD;AACF,CApBM",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/controller",
      "sourcesContent": [
        "import cookie from '../helpers/cookie';\n\nexport const GetHSEmbeddedUrl = async (req, res) => {\n  const { templateId } = req.body;\n  const jwt = cookie.getAccess(req);\n\n  try {\n    const response = await getHSEmbeddedUrl(jwt, templateId);\n    console.log(response.status, response);\n    if (response.status < 300) {\n      res.status(200).send(response.data);\n    } else {\n      res.status(response.status).send(response.data.error);\n    }\n  } catch (error) {\n    const status = error.response && error.response.status || 500;\n    const errorMessage = error.response && error.response.data || {\n      message: \"unable to generate sign url\"\n    };\n\n    res.status(status).send(errorMessage);\n  }\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313196809
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
        "sourceFileName": "cookie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  getAccess: req => {\n    return req.cookies.access_token || null;\n  },\n  getRefresh: req => {\n    return req.cookies.refresh_token || null;\n  },\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvb2tpZS5qcyJdLCJuYW1lcyI6WyJnZXRBY2Nlc3MiLCJyZXEiLCJjb29raWVzIiwiYWNjZXNzX3Rva2VuIiwiZ2V0UmVmcmVzaCIsInJlZnJlc2hfdG9rZW4iLCJzZXRBY2Nlc3MiLCJyZXMiLCJjb29raWVWYWx1ZSIsImNvb2tpZSIsIm1heEFnZSIsImh0dHBPbmx5Iiwic2lnbmVkIiwib3ZlcndyaXRlIiwic2V0UmVmcmVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsU0FBUyxFQUFHQyxHQUFELElBQVM7QUFDbEIsV0FBT0EsR0FBRyxDQUFDQyxPQUFKLENBQVlDLFlBQVosSUFBNEIsSUFBbkM7QUFDRCxHQUhZO0FBS2JDLEVBQUFBLFVBQVUsRUFBR0gsR0FBRCxJQUFTO0FBQ25CLFdBQU9BLEdBQUcsQ0FBQ0MsT0FBSixDQUFZRyxhQUFaLElBQTZCLElBQXBDO0FBQ0QsR0FQWTtBQVNiQyxFQUFBQSxTQUFTLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxXQUFOLEtBQXNCO0FBQy9CRCxJQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyxjQUFYLEVBQTJCRCxXQUEzQixFQUF3QztBQUN0Q0UsTUFBQUEsTUFBTSxFQUFFLEtBRDhCO0FBRXRDQyxNQUFBQSxRQUFRLEVBQUUsSUFGNEI7QUFHdENDLE1BQUFBLE1BQU0sRUFBRSxLQUg4QjtBQUl0Q0MsTUFBQUEsU0FBUyxFQUFFO0FBSjJCLEtBQXhDO0FBTUQsR0FoQlk7QUFrQmJDLEVBQUFBLFVBQVUsRUFBRSxDQUFDUCxHQUFELEVBQU1DLFdBQU4sS0FBc0I7QUFDaENELElBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGVBQVgsRUFBNEJELFdBQTVCLEVBQXlDO0FBQ3ZDRSxNQUFBQSxNQUFNLEVBQUUsS0FEK0I7QUFFdkNDLE1BQUFBLFFBQVEsRUFBRSxJQUY2QjtBQUd2Q0MsTUFBQUEsTUFBTSxFQUFFLEtBSCtCO0FBSXZDQyxNQUFBQSxTQUFTLEVBQUU7QUFKNEIsS0FBekM7QUFNRDtBQXpCWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGdldEFjY2VzczogKHJlcSkgPT4ge1xuICAgIHJldHVybiByZXEuY29va2llcy5hY2Nlc3NfdG9rZW4gfHwgbnVsbDtcbiAgfSxcblxuICBnZXRSZWZyZXNoOiAocmVxKSA9PiB7XG4gICAgcmV0dXJuIHJlcS5jb29raWVzLnJlZnJlc2hfdG9rZW4gfHwgbnVsbDtcbiAgfSxcblxuICBzZXRBY2Nlc3M6IChyZXMsIGNvb2tpZVZhbHVlKSA9PiB7XG4gICAgcmVzLmNvb2tpZSgnYWNjZXNzX3Rva2VuJywgY29va2llVmFsdWUsIHtcbiAgICAgIG1heEFnZTogOTk5OTksXG4gICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgIHNpZ25lZDogZmFsc2UsXG4gICAgICBvdmVyd3JpdGU6IHRydWVcbiAgICB9KTtcbiAgfSxcblxuICBzZXRSZWZyZXNoOiAocmVzLCBjb29raWVWYWx1ZSkgPT4ge1xuICAgIHJlcy5jb29raWUoJ3JlZnJlc2hfdG9rZW4nLCBjb29raWVWYWx1ZSwge1xuICAgICAgbWF4QWdlOiA5OTk5OSxcbiAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgc2lnbmVkOiBmYWxzZSxcbiAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgIH0pO1xuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "cookie.js"
      ],
      "names": [
        "getAccess",
        "req",
        "cookies",
        "access_token",
        "getRefresh",
        "refresh_token",
        "setAccess",
        "res",
        "cookieValue",
        "cookie",
        "maxAge",
        "httpOnly",
        "signed",
        "overwrite",
        "setRefresh"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,SAAS,EAAGC,GAAD,IAAS;AAClB,WAAOA,GAAG,CAACC,OAAJ,CAAYC,YAAZ,IAA4B,IAAnC;AACD,GAHY;AAKbC,EAAAA,UAAU,EAAGH,GAAD,IAAS;AACnB,WAAOA,GAAG,CAACC,OAAJ,CAAYG,aAAZ,IAA6B,IAApC;AACD,GAPY;AASbC,EAAAA,SAAS,EAAE,CAACC,GAAD,EAAMC,WAAN,KAAsB;AAC/BD,IAAAA,GAAG,CAACE,MAAJ,CAAW,cAAX,EAA2BD,WAA3B,EAAwC;AACtCE,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,QAAQ,EAAE,IAF4B;AAGtCC,MAAAA,MAAM,EAAE,KAH8B;AAItCC,MAAAA,SAAS,EAAE;AAJ2B,KAAxC;AAMD,GAhBY;AAkBbC,EAAAA,UAAU,EAAE,CAACP,GAAD,EAAMC,WAAN,KAAsB;AAChCD,IAAAA,GAAG,CAACE,MAAJ,CAAW,eAAX,EAA4BD,WAA5B,EAAyC;AACvCE,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,QAAQ,EAAE,IAF6B;AAGvCC,MAAAA,MAAM,EAAE,KAH+B;AAIvCC,MAAAA,SAAS,EAAE;AAJ4B,KAAzC;AAMD;AAzBY,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "sourcesContent": [
        "export default {\n  getAccess: (req) => {\n    return req.cookies.access_token || null;\n  },\n\n  getRefresh: (req) => {\n    return req.cookies.refresh_token || null;\n  },\n\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551236400889
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _controller = require(\"./controller/\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst thirdPartyRoutes = _express.default.Router(); //= ========================================\n// Custodian Integration Flow Express Routes\n//= ========================================\n\n\nconsole.log(_controller.ThirdParty);\nthirdPartyRoutes.post(\"/hs-embedded-url/\", _controller.ThirdParty.HelloSign.GetHSEmbeddedUrl);\nvar _default = thirdPartyRoutes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJ0aGlyZFBhcnR5Um91dGVzIiwiZXhwcmVzcyIsIlJvdXRlciIsImNvbnNvbGUiLCJsb2ciLCJUaGlyZFBhcnR5Q29udHJvbGxlciIsInBvc3QiLCJIZWxsb1NpZ24iLCJHZXRIU0VtYmVkZGVkVXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxnQkFBZ0IsR0FBR0MsaUJBQVFDLE1BQVIsRUFBekIsQyxDQUVBO0FBQ0E7QUFDQTs7O0FBRUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxzQkFBWjtBQUNBTCxnQkFBZ0IsQ0FBQ00sSUFBakIsQ0FBc0IsbUJBQXRCLEVBQTJDRCx1QkFBcUJFLFNBQXJCLENBQStCQyxnQkFBMUU7ZUFFZVIsZ0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xld2lzZGFja2FtL0RvY3VtZW50cy9hbHRydWlzdC1iYWNrZW5kLWZvci1mcm9udGVuZC9zcmMvcmVzdC9UaGlyZFBhcnR5Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyBUaGlyZFBhcnR5IGFzIFRoaXJkUGFydHlDb250cm9sbGVyIH0gZnJvbSAnLi9jb250cm9sbGVyLyc7XG5cbmNvbnN0IHRoaXJkUGFydHlSb3V0ZXMgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLz0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQ3VzdG9kaWFuIEludGVncmF0aW9uIEZsb3cgRXhwcmVzcyBSb3V0ZXNcbi8vPSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmNvbnNvbGUubG9nKFRoaXJkUGFydHlDb250cm9sbGVyKVxudGhpcmRQYXJ0eVJvdXRlcy5wb3N0KFwiL2hzLWVtYmVkZGVkLXVybC9cIiwgVGhpcmRQYXJ0eUNvbnRyb2xsZXIuSGVsbG9TaWduLkdldEhTRW1iZWRkZWRVcmwpO1xuXG5leHBvcnQgZGVmYXVsdCB0aGlyZFBhcnR5Um91dGVzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "thirdPartyRoutes",
        "express",
        "Router",
        "console",
        "log",
        "ThirdPartyController",
        "post",
        "HelloSign",
        "GetHSEmbeddedUrl"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,gBAAgB,GAAGC,iBAAQC,MAAR,EAAzB,C,CAEA;AACA;AACA;;;AAEAC,OAAO,CAACC,GAAR,CAAYC,sBAAZ;AACAL,gBAAgB,CAACM,IAAjB,CAAsB,mBAAtB,EAA2CD,uBAAqBE,SAArB,CAA+BC,gBAA1E;eAEeR,gB",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/rest/ThirdParty",
      "sourcesContent": [
        "import express from 'express';\nimport { ThirdParty as ThirdPartyController } from './controller/';\n\nconst thirdPartyRoutes = express.Router();\n\n//= ========================================\n// Custodian Integration Flow Express Routes\n//= ========================================\n\nconsole.log(ThirdPartyController)\nthirdPartyRoutes.post(\"/hs-embedded-url/\", ThirdPartyController.HelloSign.GetHSEmbeddedUrl);\n\nexport default thirdPartyRoutes;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551313159480
  },
  "{\"sourceRoot\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"filename\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lewisdackam/Documents/altruist-backend-for-frontend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lewisdackam/Documents/altruist-backend-for-frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util/cookie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
        "sourceFileName": "cookie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  getAccess: req => {\n    return req.cookies.access_token || null;\n  },\n  getRefresh: req => {\n    return req.cookies.refresh_token || null;\n  },\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvb2tpZS5qcyJdLCJuYW1lcyI6WyJnZXRBY2Nlc3MiLCJyZXEiLCJjb29raWVzIiwiYWNjZXNzX3Rva2VuIiwiZ2V0UmVmcmVzaCIsInJlZnJlc2hfdG9rZW4iLCJzZXRBY2Nlc3MiLCJyZXMiLCJjb29raWVWYWx1ZSIsImNvb2tpZSIsIm1heEFnZSIsImh0dHBPbmx5Iiwic2lnbmVkIiwib3ZlcndyaXRlIiwic2V0UmVmcmVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsU0FBUyxFQUFHQyxHQUFELElBQVM7QUFDbEIsV0FBT0EsR0FBRyxDQUFDQyxPQUFKLENBQVlDLFlBQVosSUFBNEIsSUFBbkM7QUFDRCxHQUhZO0FBS2JDLEVBQUFBLFVBQVUsRUFBR0gsR0FBRCxJQUFTO0FBQ25CLFdBQU9BLEdBQUcsQ0FBQ0MsT0FBSixDQUFZRyxhQUFaLElBQTZCLElBQXBDO0FBQ0QsR0FQWTtBQVNiQyxFQUFBQSxTQUFTLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxXQUFOLEtBQXNCO0FBQy9CRCxJQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyxjQUFYLEVBQTJCRCxXQUEzQixFQUF3QztBQUN0Q0UsTUFBQUEsTUFBTSxFQUFFLEtBRDhCO0FBRXRDQyxNQUFBQSxRQUFRLEVBQUUsSUFGNEI7QUFHdENDLE1BQUFBLE1BQU0sRUFBRSxLQUg4QjtBQUl0Q0MsTUFBQUEsU0FBUyxFQUFFO0FBSjJCLEtBQXhDO0FBTUQsR0FoQlk7QUFrQmJDLEVBQUFBLFVBQVUsRUFBRSxDQUFDUCxHQUFELEVBQU1DLFdBQU4sS0FBc0I7QUFDaENELElBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGVBQVgsRUFBNEJELFdBQTVCLEVBQXlDO0FBQ3ZDRSxNQUFBQSxNQUFNLEVBQUUsS0FEK0I7QUFFdkNDLE1BQUFBLFFBQVEsRUFBRSxJQUY2QjtBQUd2Q0MsTUFBQUEsTUFBTSxFQUFFLEtBSCtCO0FBSXZDQyxNQUFBQSxTQUFTLEVBQUU7QUFKNEIsS0FBekM7QUFNRDtBQXpCWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sZXdpc2RhY2thbS9Eb2N1bWVudHMvYWx0cnVpc3QtYmFja2VuZC1mb3ItZnJvbnRlbmQvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGdldEFjY2VzczogKHJlcSkgPT4ge1xuICAgIHJldHVybiByZXEuY29va2llcy5hY2Nlc3NfdG9rZW4gfHwgbnVsbDtcbiAgfSxcblxuICBnZXRSZWZyZXNoOiAocmVxKSA9PiB7XG4gICAgcmV0dXJuIHJlcS5jb29raWVzLnJlZnJlc2hfdG9rZW4gfHwgbnVsbDtcbiAgfSxcblxuICBzZXRBY2Nlc3M6IChyZXMsIGNvb2tpZVZhbHVlKSA9PiB7XG4gICAgcmVzLmNvb2tpZSgnYWNjZXNzX3Rva2VuJywgY29va2llVmFsdWUsIHtcbiAgICAgIG1heEFnZTogOTk5OTksXG4gICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgIHNpZ25lZDogZmFsc2UsXG4gICAgICBvdmVyd3JpdGU6IHRydWVcbiAgICB9KTtcbiAgfSxcblxuICBzZXRSZWZyZXNoOiAocmVzLCBjb29raWVWYWx1ZSkgPT4ge1xuICAgIHJlcy5jb29raWUoJ3JlZnJlc2hfdG9rZW4nLCBjb29raWVWYWx1ZSwge1xuICAgICAgbWF4QWdlOiA5OTk5OSxcbiAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgc2lnbmVkOiBmYWxzZSxcbiAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgIH0pO1xuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "cookie.js"
      ],
      "names": [
        "getAccess",
        "req",
        "cookies",
        "access_token",
        "getRefresh",
        "refresh_token",
        "setAccess",
        "res",
        "cookieValue",
        "cookie",
        "maxAge",
        "httpOnly",
        "signed",
        "overwrite",
        "setRefresh"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,SAAS,EAAGC,GAAD,IAAS;AAClB,WAAOA,GAAG,CAACC,OAAJ,CAAYC,YAAZ,IAA4B,IAAnC;AACD,GAHY;AAKbC,EAAAA,UAAU,EAAGH,GAAD,IAAS;AACnB,WAAOA,GAAG,CAACC,OAAJ,CAAYG,aAAZ,IAA6B,IAApC;AACD,GAPY;AASbC,EAAAA,SAAS,EAAE,CAACC,GAAD,EAAMC,WAAN,KAAsB;AAC/BD,IAAAA,GAAG,CAACE,MAAJ,CAAW,cAAX,EAA2BD,WAA3B,EAAwC;AACtCE,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,QAAQ,EAAE,IAF4B;AAGtCC,MAAAA,MAAM,EAAE,KAH8B;AAItCC,MAAAA,SAAS,EAAE;AAJ2B,KAAxC;AAMD,GAhBY;AAkBbC,EAAAA,UAAU,EAAE,CAACP,GAAD,EAAMC,WAAN,KAAsB;AAChCD,IAAAA,GAAG,CAACE,MAAJ,CAAW,eAAX,EAA4BD,WAA5B,EAAyC;AACvCE,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,QAAQ,EAAE,IAF6B;AAGvCC,MAAAA,MAAM,EAAE,KAH+B;AAIvCC,MAAAA,SAAS,EAAE;AAJ4B,KAAzC;AAMD;AAzBY,C",
      "sourceRoot": "/Users/lewisdackam/Documents/altruist-backend-for-frontend/src/util",
      "sourcesContent": [
        "export default {\n  getAccess: (req) => {\n    return req.cookies.access_token || null;\n  },\n\n  getRefresh: (req) => {\n    return req.cookies.refresh_token || null;\n  },\n\n  setAccess: (res, cookieValue) => {\n    res.cookie('access_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  },\n\n  setRefresh: (res, cookieValue) => {\n    res.cookie('refresh_token', cookieValue, {\n      maxAge: 99999,\n      httpOnly: true,\n      signed: false,\n      overwrite: true\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551236400889
  }
}